var $body = $("body");
$(document).on({
  ajaxStart: function () {
    $body.addClass("loading");
    //        setTimeout(function() {
    //            $body.removeClass("loading");
    //        }, 600);
  },
  ajaxStop: function () {
    $body.removeClass("loading");
  },
  ajaxError: function () {
    $body.removeClass("loading");
  },
});
var isAccValid;
var flagDVU = 0;
//VALIDATIONGET_TITLE
var modifyButtonCountIndi = 0;
var addButtonCountIndi = 0;
var modifySaveDVU = "N";
//FOR EXCEPTION PAGE
var exceptionCount = 0;
var c = 0;
var ExceptionOnLoadCount = 0;
var ComplianceOnLoadCount = 0;
var hidedRow = "A";
var objectHidedRow = 0;
var exceptionButtoncount = 0;
//FOR COMPLIANCE
var counterFetchDetailsComp = 0;
var complianceReasonList = [];
var complianceReasonSelectedList = [];
var complianceCount = 0;
var complianceCheckboxCreationCount = 0;
var counter = 1;
var saveDataFinalCustDetails = 0;
var saveDataFinalIndiDetails = 0;
var dvuCount = 0;
var makerCount = 0;
var checkerCount = 0;
var custTableSeq = 0;
var regexCount = 0;
var condCount = 0;
var isScanActivity = false;
var countForModify = 0;
var masterDataGlobal = new Object();
var pinstIdForSubmit = "";
var activityNameForSubmit = "";
var userNameForSubmit = "";
var internetBanking = "";
var mobileBanking = "";
var aadhar = "";
var countForSave = 0;
var gridEleIndex = 0;
function preLoad() {
  //new change
}

//KRISHNA CHANGES FOR SVN

function addSpan() {
  jQuery(
    "input[type='text'][regex]:not([columnName]),select[regex]:not([columnName]),textarea[regex]:not([columnName])"
  ).each(function () {
    $(this).after(
      "<span class='help-block help' style='display:inline-block'></span>"
    );
  });
}

function customValidate() {
  addSpan();
  jQuery(
    "input[type='text'][regex]:not([columnName]),select[regex]:not([columnName]),textarea[regex]:not([columnName])"
  ).on("blur", function () {
    $(this).validate();
  });
}

function postLoad() {
  debugger;
  //    if ($.isInActivities("ACO_Case_Initiation")) {
  //        $(".doneProcessInstance").parent().hide();
  //        if ($.getProcessInstanceId() === "null" || $.getProcessInstanceId() === "" || $.getProcessInstanceId() === "undefined") {
  //            $("#submit_case_Button").parent().hide();
  //        }
  //    }
  //
  //    if ($.isInActivities("ACO_Case_Initiation")) {
  //        $.addActivityToolButton("submit_case", "SUBMIT", "2", "border-radius:4px");
  //        $("#submit_case_Button").parent().css("width", "270px");
  //        $("#submit_case_Button").parent().css("float", "");
  //        $("#submit_case_Button").parent().css("margin-left", "-400px");
  //        $("#submit_case_Button").css("margin-left", "110px");
  //        $("#submit_case_Button").css("background", "rgb(4, 48, 97)");
  //        $("#submit_case_Button").css("color", "white");
  //        $("#submit_case_Button").css("border", "none");
  //        $("#submit_case_Button").css("font-weight", "540");
  //
  //    }
  //    $("#submit_case_Button").click(function () {
  //        launchWindowForCKYC();
  //    });
  pinstIdForSubmit = $.getProcessInstanceId();
  activityNameForSubmit = $.getActivity();
  userNameForSubmit = $.getUserName();
  //CHANGING BUTTON STYLE===========================================
  $(".toolmenu button").each(function () {
    $(this).css("background", "rgb(4, 48, 97)");
    $(this).css("color", "white");
    $(this).css("border", "none");
    $(this).css("font-weight", "540");
  });
  if ($.isInActivities("ACO_Case_Initiation")) {
    localStorage.servobpm_dms = "false";
  } else {
    localStorage.servobpm_dms = "true";
  }

  if (!$.isInActivities("ACO_Case_Initiation")) {
    if (
      tableLoader.DEFERRAL_REQUIRED === "No" ||
      $.getValue("DEFERRAL_REQUIRED") === "No" ||
      tableLoader.DEFERRAL_REQUIRED === "" ||
      $.getValue("DEFERRAL_REQUIRED") === ""
    ) {
      $("#DEFERRAL_REQUIRED").attr("disabled", true);
      $("#hideShowDeferralTab").attr("hidden", true);
      $("#hideShowDeferralTab1").attr("hidden", true);
    } else {
      $("#DEFERRAL_REQUIRED").attr("disabled", true);
      $("#hideShowDeferralTab").attr("hidden", false);
      $("#hideShowDeferralTab1").attr("hidden", false);
    }
  } else if ($.isInActivities("ACO_Case_Initiation")) {
    if (
      tableLoader.DEFERRAL_REQUIRED === "No" ||
      $.getValue("DEFERRAL_REQUIRED") === "No" ||
      tableLoader.DEFERRAL_REQUIRED === "" ||
      $.getValue("DEFERRAL_REQUIRED") === ""
    ) {
      $("#DEFERRAL_REQUIRED").attr("disabled", false);
      $("#hideShowDeferralTab").attr("hidden", true);
      $("#hideShowDeferralTab1").attr("hidden", true);
    } else {
      $("#DEFERRAL_REQUIRED").attr("disabled", false);
      $("#hideShowDeferralTab").attr("hidden", false);
      $("#hideShowDeferralTab1").attr("hidden", false);
    }
  }

  $("#WCKIT_TYPE option[value='3']").attr("hidden", "hidden");
  scanningDocsPerFormType();
  //====SMILE ACCOUNT CODE====================================================================================================
  if (
    !$.isInActivities(
      "ACO_Scanning,ACO_Compliance,ACO_DVU_Rejected,ACO_Account_Creation"
    )
  ) {
    if (
      $("#SCHEME_CODE").val() === "1018" ||
      tableLoader.SCHEME_CODE === "1018"
    ) {
      smileData();
    }
  }

  //=============UBO DETAILS======================================================================================================
  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_RCU,RCU_OPS,RCU_BRANCH,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End"
    )
  ) {
    debugger;
    $("#UBOFlagDiv").removeAttr("hidden", "hidden");
    if ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1") {
      var constitution = $("#CONSTITUTION").val()
        ? $("#CONSTITUTION").val()
        : tableLoader.CONSTITUTION;
      if (constitution) {
        switch (constitution) {
          // Commented By Vikas
          // case  '6':
          // case  '3':
          // case  '7':
          case "100":
            getUBOPage();
        }
      }
    }
  }

  if (
    $.isInActivities(
      "ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_Discrepancy,ACO_Scanning,ACO_Compliance,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH,RCU_BRANCH,DEFERRAL_BRANCH,DEFERRAL_COMPLIANCE,ACO_DVU_Rejected"
    )
  ) {
    $("#RemarksButtonID_Button").remove();
    $.addActivityToolButton(
      "RemarksButtonID",
      "History Details",
      "7",
      "border-radius:4px"
    );
    $("#RemarksButtonID_Button").parent().css("width", "");
    $("#RemarksButtonID_Button").parent().css("float", "");
    $("#RemarksButtonID_Button").parent().css("margin-top", "1%");
  } else {
    $("#RemarksButtonID_Button").remove();
  }

  $("#RemarksButtonID_Button").click(function () {
    //getRemarksHistory();
    $("#historyDiv").load("../ACO/ACO_History.jsp");
    $("#HISTORY_DIALOG").dialog("open");
  });
  //WINDOW RESPONSIVE==============================================================================================
  if (!$.isInActivities("ACO_Case_Initiation")) {
    $("#responsiveDIV,#responsiveDIVScanning,#responsiveDIVCompliance").resize(
      function () {
        var divWidth = parseInt($(this).css("width").replace("px", ""));
        var ratioWidth = (divWidth / screen.width) * 100;
        console.log("ratio width " + ratioWidth);
        $(".col-lg-3").each(function () {
          $(this).addClass("col-sm-12");
          $(this).removeClass("col-lg-3");
        });
        $(".col-md-3").each(function () {
          $(this).addClass("col-sm-12");
          $(this).removeClass("col-md-3");
        });
        if (ratioWidth < 50) {
          $(".col-sm-3").each(function () {
            $(this).addClass("col-sm-12");
            $(this).removeClass("col-sm-3");
          });
        } else if (ratioWidth > 50) {
          $(".col-sm-12").each(function () {
            $(this).addClass("col-sm-3");
            $(this).removeClass("col-sm-12");
          });
        }
      }
    );
  }

  //WINDOW RESPONSIVE================================================

  if ($.isInActivities("ACO_DVU,ACO_Maker,ACO_Checker")) {
    //GET DOCUMENTS UPLOADED IN SCANNING
    if ($.isInActivities("ACO_DVU,ACO_Maker,ACO_Checker")) {
      documentMandatory();
    }
    if (docList) {
      zoningPerFormType("cust0", docList);
    }
    registerZoningFields();
    addZoningRemovalEvent();
  }

  //MULTIPLE CUSTOMER - SCANNING PAGE
  if ($.isInActivities("ACO_Scanning")) {
    $(".multiUploadFile").hide();
    $(".uploadFile").hide();
    var totalAccHolder = tableLoader.OTHERDETAILS_TOTAL_ACC_HOLDER;
    for (var i = 1; i <= totalAccHolder; i++) {
      $("#CUSTOMER_NO option[id= '" + i + "']").show();
    }
    if (
      tableLoader.FORM_TYPE === "Individual" ||
      tableLoader.FORM_TYPE === "NRI"
    ) {
      $("#NonIndiApp").hide();
      $("#NonIndiAppButton").hide();
      $("#NonIndiAppButtonUpload").hide();
    }
  }

  if ($.isInActivities("DEFERRAL_COMPLIANCE,DEFERRAL_BRANCH")) {
    $(".form-control").each(function () {
      var id = this.id;
      if (
        id === "NUMBER_OF_DAYS_REQUIRED" ||
        id === "REMARKS_DEFERRAL_BRANCH" ||
        id === "DEFERRAL_BRANCH_DECISION" ||
        id === "DECISION_DEFERRAL_COMPLIANCE"
      ) {
        $("#" + id).prop("disabled", false);
      } else {
        $("#" + id).prop("disabled", true);
      }
    });
  }

  //UPLOAD BUTTON IN DVU & QC AND END
  if ($.isInActivities("ACO_DVU,ACO_QC,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
    $(".processInstanceAudit").parent().remove();
    $.addActivityToolButton("UploadDocs", "Upload", "16", "border-radius:4px");
    $("#UploadDocs_Button").parent().css("width", "80px");
    $("#UploadDocs_Button").css("background", "rgb(4, 48, 97)");
    $("#UploadDocs_Button").css("color", "white");
    $("#UploadDocs_Button").css("border", "none");
    $("#UploadDocs_Button").css("font-weight", "540");
  } else {
    $(".processInstanceAudit").parent().remove();
  }

  $("#UploadDocs_Button").click(function () {
    processField_filterParams = [""];
    $(".uploadFile").click();
  });
  //==========================================================================================================

  if (!$.isInActivities("ACO_Scanning,ACO_Compliance")) {
    layout.sizePane("west", 900);
  } else if ($.isInActivities("ACO_Compliance")) {
    layout.sizePane("west", 750);
  } else if ($.isInActivities("ACO_Scanning")) {
    layout.sizePane("west", 500);
  }

  if (
    $.isInActivities("ACO_Compliance") &&
    tableLoader.FORM_TYPE === "Non Individual"
  ) {
    $("#nonIndividualDet").attr("hidden", false);
  }

  //TDS Field visible

  if (!$.isInActivities("ACO_Scanning,ACO_Case_Initiation,ACO_Discrepancy")) {
    if (
      $("#NI_CORPORATE_SUB_SEGMENT").val() === "8" ||
      tableLoader.NI_CORPORATE_SUB_SEGMENT === "8" ||
      $("#NI_CORPORATE_SUB_SEGMENT").val() === "25" ||
      tableLoader.NI_CORPORATE_SUB_SEGMENT === "25" ||
      $("#NI_CORPORATE_SUB_SEGMENT").val() === "35" ||
      tableLoader.NI_CORPORATE_SUB_SEGMENT === "35"
    ) {
      //35 - Insurance
      $("#tdsDiv").attr("hidden", false);
      if ($.getActivity() === "ACO_DVU") {
        $("#NI_SUB_SEGMENT_TDS").attr("disabled", false);
      } else {
        $("#NI_SUB_SEGMENT_TDS").attr("disabled", true);
      }
    } else {
      $("#NI_SUB_SEGMENT_TDS").attr("disabled", true);
      $("#tdsDiv").attr("hidden", true);
    }
  }

  $(".panelAcc").css("background-color", "rgb(250, 250, 250)");
  // HIDING DATEPICKER ON SCROLL
  $(window).on("mousewheel", function () {
    $("#ui-datepicker-div").hide();
  });
  //LAUNCH DOC
  if (!$.isInActivities("ACO_Case_Initiation,ACO_Account_Creation")) {
    $.addActivityToolButton(
      "launch_doc",
      "Launch Document",
      "2",
      "border-radius:4px"
    );
    $("#launch_doc_Button").parent().css("width", "270px");
    $("#launch_doc_Button").parent().css("float", "");
    $("#launch_doc_Button").parent().css("margin-left", "-400px");
    $("#launch_doc_Button").css("margin-left", "110px");
    $("#launch_doc_Button").css("background", "rgb(4, 48, 97)");
    $("#launch_doc_Button").css("color", "white");
    $("#launch_doc_Button").css("border", "none");
    $("#launch_doc_Button").css("font-weight", "540");
  }

  $("#launch_doc_Button").click(function () {
    //debugger;
    launchDoc($.getProcessInstanceFolderId(), $.getUserId(), $.getSession());
  });
  //COPY PASTE DISABLE=========================================================================
  if (!$.isInActivities("ACO_Compliance")) {
    $("#activityForm").bind("cut copy paste", function (e) {
      e.preventDefault();
    });
  }

  //==================enable ProcessInstance==================================================

  if ($.isProcessScope()) {
    $.getMaster(
      "GET_USER_RIGHTS",
      [$.getActivityId(), $.getUserId()],
      function (headers, masterData) {
        if (masterData.length > 0) {
          for (var i in masterData) {
            if (masterData[i][1] === "N") {
              localStorage.scope = "ACTIVITY";
            } else {
              localStorage.scope = "PROCESS";
            }
          }
        }
      }
    );
  }

  if (
    $.isInActivities(
      "ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    getSubSegment();
  }

  //AUTOPOPULATE TELEPHONE NUMBER NI
  if ($.getActivity() === "ACO_Maker") {
    $("#M1_NI_CONTACT_TEL1")
      .val(tableLoader.NI_TELEPHONE_NUMBER)
      .addClass("changed");
  } else if ($.getActivity() === "ACO_Checker") {
    $("#NI_CONTACT_TEL1")
      .val(tableLoader.NI_TELEPHONE_NUMBER)
      .addClass("changed");
  }

  //==========MOVE TO CUSTOMER TABLE with CTRL + DOWN ARROW==========================================
  var map = { 17: false, 40: false };
  $(document)
    .keydown(function (e) {
      if (e.keyCode in map) {
        map[e.keyCode] = true;
        if (map[17] && map[40]) {
          document
            .getElementById("custDataTable")
            .scrollIntoView({ block: "center", behavior: "smooth" });
        }
      }
    })
    .keyup(function (e) {
      if (e.keyCode in map) {
        map[e.keyCode] = false;
      }
    });
  if ($.isInActivities("ACO_Case_Initiation")) {
    getReqBranchNameIdOnLoad();
  }

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    getOpMode(tableLoader.ACCOUNT_RELN_CODE);
  }

  //==============================DEFERRAL CONDITIONS===============

  if ($.isInActivities("DEFERRAL_COMPLIANCE")) {
    $("#REMARKS_DEFERRAL_COMPLIANCE").addClass("requiredIndi");
  }
  if ($.isInActivities("DEFERRAL_BRANCH")) {
    $("#REMARKS_DEFERRAL_BRANCH").addClass("requiredIndi");
  }

  //================================================================================================================

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (
      tableLoader.SCHEME_CODE === "2018" ||
      tableLoader.SCHEME_CODE === "2021" ||
      tableLoader.SCHEME_CODE === "2010" ||
      tableLoader.SCHEME_CODE === "2009"
    ) {
      $(".facilityRequired").each(function () {
        var checkboxId = $(this).attr("id");
        $("#" + checkboxId).attr("disabled", true);
      });
      $("#cocodiv").addClass("requiredAsterik");
      $("#COCO_NAME").addClass("requiredIndi");
    } else {
      $(".facilityRequired").each(function () {
        var checkboxId = $(this).attr("id");
        $("#" + checkboxId).attr("disabled", false);
      });
      $("#cocodiv").removeClass("requiredAsterik");
      $("#COCO_NAME").removeClass("requiredIndi");
    }
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    $(".CIHidden").hide();
  } else {
    $(".CIHidden").show();
  }
  if ($.isInActivities("ACO_DVU")) {
    $(".CIHiddenDVU").hide();
    //remove ACO_End
  } else if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    $(".CIHiddenDVU").show();
  }

  if ($.isInActivities("ACO_Account_Creation")) {
    $(".toolmenu").remove();
    setTimeout(function () {
      window.close();
    }, 1500);
  }

  manageDatepicker();
  if ($.isInActivities("ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction")) {
    var date = $.getCurrentDate().toStringObject("dd-mm-yy");
    $("#APPLICATION_DATE").val(date);
    $("#APPLICATION_DATE").addClass("changed");
  }

  //insertRemarksHistory();

  //==============BLOCKING SCANNING RESIZE FUNCTION==================================================================
  //  $(".ui-layout-resizer").css("position", "");

  //==============MODIFY BUTTON ADJUSTMENT IN DVU-QC PAGES===============================================================
  if ($.isInActivities("ACO_DVU,ACO_Maker,ACO_Discrepancy")) {
    $("#CUSTDETAILS_MODIFY").addClass("modify");
  } else {
    $("#CUSTDETAILS_MODIFY").removeClass("modify");
  }

  if ($.isInActivities("ACO_QC")) {
    //debugger;
    $("#IND_TAXRESIDENCE_DELETE").addClass("deleteButton");
  } else {
    $("#IND_TAXRESIDENCE_DELETE").removeClass("deleteButton");
  }

  if ($.isInActivities("ACO_QC")) {
    $(".checkboxFieldQC").each(function () {
      var checkboxId = $(this).attr("id");
      $("#" + checkboxId).attr("disabled", true);
    });
  }

  //====================MULTI UPLOAD BUTTON DISPLAY==================================================================
  if ($.isInActivities("ACO_Scanning")) {
    $(".multiUploadFileACO ").css("display", "block");
    $(".multiUploadFile").parent().show();
    $(".multiUploadFile").parent().css("width", "120px");
    $(".uploadFile").parent().show();
  } else {
    $(".multiUploadFile").parent().hide();
  }

  hideShowTabsForFormTypeOnLoad();
  populateStateForDataInExt();
  //=======================ACCORDION CODING===============================================================================
  var acc = document.getElementsByClassName("accordion");
  var i;
  for (i = 0; i < acc.length; i++) {
    acc[i].addEventListener("click", function () {
      //debugger;
      fnOpenSection(this);
    });
  }

  //==========================DATE PICKER FUNCTIONS=====================================================================
  //till current day

  $("#OTHERDETAILS_PREMIUM_ACCOUNT").removeAttr($.getActivity().toLowerCase());
  $("#OTHERDETAILS_FORM_SIXTY").removeAttr($.getActivity().toLowerCase());
  //========================ONLOAD POPULATE COUNTRY CODE AND DISBALE CONSTITUTION========================================================

  if (tableLoader.CONSTITUTION === "Non Individual") {
    $("#CONSTITUTION").prop("disabled", false);
  } else {
    $("#CONSTITUTION").prop("disabled", true).val("").addClass("changed");
  }
  if (
    tableLoader.ACCOUNT_RELN_CODE === "B" ||
    tableLoader.ACCOUNT_RELN_CODE === "MI"
  ) {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '1']").hide();
  }

  //=======================ONLOAD ACC NO -- ON WELCOME KIT=========================================================================
  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (tableLoader.WCKIT_TYPE === "1") {
      $("#ACCOUNT_NUMBER").prop("disabled", false);
      $("#ACCOUNT_NUMBER").prop("required", true);
      $("#ACCOUNT_NUMBER").attr("regex", "^[0-9]{1,45}$");
      $("#ACCOUNT_NUMBER").attr("regexmsg", "Enter only number");
    } else if ($("#WCKIT_TYPE").val() === "4") {
      $("#ACCOUNT_NUMBER").prop("disabled", false);
      $("#ACCOUNT_NUMBER").prop("required", true);
      $("#ACCOUNT_NUMBER").attr("regex", "^[0-9]{1,45}$");
      $("#ACCOUNT_NUMBER").attr("regexmsg", "Enter only number");
    } else {
      $("#ACCOUNT_NUMBER").prop("disabled", true);
      $("#ACCOUNT_NUMBER").prop("required", false);
      $("#ACCOUNT_NUMBER").val("");
      $("#ACCOUNT_NUMBER").removeAttr("regex");
      $("#ACCOUNT_NUMBER").removeAttr("regexmsg");
      $("#ACCOUNT_NUMBER").removeAttr($.getActivity().toLowerCase());
    }
  }

  //==============================================================================================================================

  $("input[id*='CORRESPONDENCE_CHECK']").click(function () {
    //debugger;
    if (
      $.isInActivities(
        "ACO_QC,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
      )
    ) {
      if ($(this).prop("checked") === true) {
        $("#NICORR_ADD_LINE1").val($("#NIOFFC_ADD_LINE1").val());
        $("#NICORR_ADD_LINE1").addClass("changed");
        if (
          $("#NICORR_ADD_LINE1").val() !== null &&
          $("#NICORR_ADD_LINE1").val() !== "" &&
          $("#NICORR_ADD_LINE1").val() !== "Select"
        ) {
          $("#NICORR_ADD_LINE1_SPAN").html("");
          $("#NICORR_ADD_LINE1").removeClass("requiredNonIndiChecker");
        }

        $("#NICORR_ADD_LINE2").val($("#NIOFFC_ADD_LINE2").val());
        $("#NICORR_ADD_LINE2").addClass("changed");
        $("#NICORR_ADD_LINE3").val($("#NIOFFC_ADD_LINE3").val());
        $("#NICORR_ADD_LINE3").addClass("changed");
        $("#NICORR_LANDMARK").val($("#NIOFFC_LANDMARK").val());
        $("#NICORR_LANDMARK").addClass("changed");
        $("#NICORR_PO").val($("#NIOFFC_PO").val());
        $("#NICORR_PO").addClass("changed");
        $("#NICORR_PS").val($("#NIOFFC_PS").val());
        $("#NICORR_PS").addClass("changed");
        $("#NICORR_TALUKA").val($("#NIOFFC_TALUKA").val());
        $("#NICORR_TALUKA").addClass("changed");
        $("#NICORR_DISTRICT").val($("#NIOFFC_DISTRICT").val());
        $("#NICORR_DISTRICT").addClass("changed");
        $("#NICORR_COUNTRY").val($("#NIOFFC_COUNTRY").val());
        $("#NICORR_COUNTRY").addClass("changed");
        if (
          $("#NICORR_COUNTRY").val() !== null &&
          $("#NICORR_COUNTRY").val() !== "" &&
          $("#NICORR_COUNTRY").val() !== "Select"
        ) {
          $("#NICORR_COUNTRY_SPAN").html("");
          $("#NICORR_COUNTRY").removeClass("requiredNonIndiChecker");
        }

        $("#NICORR_STATE").val($("#NIOFFC_STATE").val());
        $("#NICORR_STATE").addClass("changed");
        if (
          $("#NICORR_STATE").val() !== null &&
          $("#NICORR_STATE").val() !== "" &&
          $("#NICORR_STATE").val() !== "Select"
        ) {
          $("#NICORR_STATE_SPAN").html("");
          $("#NICORR_STATE").removeClass("requiredNonIndiChecker");
        }

        $("#NICORR_CITY").val($("#NIOFFC_CITY").val());
        $("#NICORR_CITY").addClass("changed");
        if (
          $("#NICORR_CITY").val() !== null &&
          $("#NICORR_CITY").val() !== "" &&
          $("#NICORR_CITY").val() !== "Select"
        ) {
          $("#NICORR_CITY_SPAN").html("");
          $("#NICORR_CITY").removeClass("requiredNonIndiChecker");
        }

        $("#NICORR_PINCODE").val($("#NIOFFC_PINCODE").val());
        $("#NICORR_PINCODE").addClass("changed");
        if (
          $("#NICORR_PINCODE").val() !== null &&
          $("#NICORR_PINCODE").val() !== "" &&
          $("#NICORR_PINCODE").val() !== "Select"
        ) {
          $("#NICORR_PINCODE_SPAN").html("");
          $("#NICORR_PINCODE").removeClass("requiredNonIndiChecker");
        }

        $(
          ".assignRegiOffcAddr input[type='text'],.assignRegiOffcAddr select"
        ).attr("disabled", true);
      } else if ($(this).prop("checked") === false) {
        $("#NICORR_ADD_LINE1").val("");
        $("#NICORR_ADD_LINE2").val("");
        $("#NICORR_ADD_LINE3").val("");
        $("#NICORR_LANDMARK").val("");
        $("#NICORR_PO").val("");
        $("#NICORR_PS").val("");
        $("#NICORR_TALUKA").val("");
        $("#NICORR_DISTRICT").val("");
        $("#NICORR_COUNTRY").val("");
        $("#NICORR_STATE").val("");
        $("#NICORR_CITY").val("");
        $("#NICORR_PINCODE").val("");
        $(
          ".assignRegiOffcAddr input[type='text'],.assignRegiOffcAddr select"
        ).attr("disabled", false);
      }
    } else {
      if ($(this).prop("checked") === true) {
        $("#M1_NICORR_ADD_LINE1").val($("#M1_NIOFFC_ADD_LINE1").val());
        $("#M1_NICORR_ADD_LINE1").addClass("changed");
        if (
          $("#M1_NICORR_ADD_LINE1").val() !== null &&
          $("#M1_NICORR_ADD_LINE1").val() !== "" &&
          $("#M1_NICORR_ADD_LINE1").val() !== "Select"
        ) {
          $("#M1_NICORR_ADD_LINE1_SPAN").html("");
          $("#M1_NICORR_ADD_LINE1").removeClass("requiredNonIndiMaker");
        }

        $("#M1_NICORR_ADD_LINE2").val($("#M1_NIOFFC_ADD_LINE2").val());
        $("#M1_NICORR_ADD_LINE2").addClass("changed");
        $("#M1_NICORR_ADD_LINE3").val($("#M1_NIOFFC_ADD_LINE3").val());
        $("#M1_NICORR_ADD_LINE3").addClass("changed");
        $("#M1_NICORR_LANDMARK").val($("#M1_NIOFFC_LANDMARK").val());
        $("#M1_NICORR_LANDMARK").addClass("changed");
        $("#M1_NICORR_PO").val($("#M1_NIOFFC_PO").val());
        $("#M1_NICORR_PO").addClass("changed");
        $("#M1_NICORR_PS").val($("#M1_NIOFFC_PS").val());
        $("#M1_NICORR_PS").addClass("changed");
        $("#M1_NICORR_TALUKA").val($("#M1_NIOFFC_TALUKA").val());
        $("#M1_NICORR_TALUKA").addClass("changed");
        $("#M1_NICORR_DISTRICT").val($("#M1_NIOFFC_DISTRICT").val());
        $("#M1_NICORR_DISTRICT").addClass("changed");
        $("#M1_NICORR_COUNTRY").val($("#M1_NIOFFC_COUNTRY").val());
        $("#M1_NICORR_COUNTRY").addClass("changed");
        if (
          $("#M1_NICORR_COUNTRY").val() !== null &&
          $("#M1_NICORR_COUNTRY").val() !== "" &&
          $("#M1_NICORR_COUNTRY").val() !== "Select"
        ) {
          $("#M1_NICORR_COUNTRY_SPAN").html("");
          $("#M1_NICORR_COUNTRY").removeClass("requiredNonIndiMaker");
        }

        $("#M1_NICORR_STATE").val($("#M1_NIOFFC_STATE").val());
        $("#M1_NICORR_STATE").addClass("changed");
        if (
          $("#M1_NICORR_STATE").val() !== null &&
          $("#M1_NICORR_STATE").val() !== "" &&
          $("#M1_NICORR_STATE").val() !== "Select"
        ) {
          $("#M1_NICORR_STATE_SPAN").html("");
          $("#M1_NICORR_STATE").removeClass("requiredNonIndiMaker");
        }

        $("#M1_NICORR_CITY").val($("#M1_NIOFFC_CITY").val());
        $("#M1_NICORR_CITY").addClass("changed");
        if (
          $("#M1_NICORR_CITY").val() !== null &&
          $("#M1_NICORR_CITY").val() !== "" &&
          $("#M1_NICORR_CITY").val() !== "Select"
        ) {
          $("#M1_NICORR_CITY_SPAN").html("");
          $("#M1_NICORR_CITY").removeClass("requiredNonIndiMaker");
        }

        $("#M1_NICORR_PINCODE").val($("#M1_NIOFFC_PINCODE").val());
        $("#M1_NICORR_PINCODE").addClass("changed");
        if (
          $("#M1_NICORR_PINCODE").val() !== null &&
          $("#M1_NICORR_PINCODE").val() !== "" &&
          $("#M1_NICORR_PINCODE").val() !== "Select"
        ) {
          $("#M1_NICORR_PINCODE_SPAN").html("");
          $("#M1_NICORR_PINCODE").removeClass("requiredNonIndiMaker");
        }

        $(
          ".assignRegiOffcAddr input[type='text'],.assignRegiOffcAddr select"
        ).attr("disabled", true);
      } else if ($(this).prop("checked") === false) {
        $("#M1_NICORR_ADD_LINE1").val("");
        $("#M1_NICORR_ADD_LINE2").val("");
        $("#M1_NICORR_ADD_LINE3").val("");
        $("#M1_NICORR_LANDMARK").val("");
        $("#M1_NICORR_PO").val("");
        $("#M1_NICORR_PS").val("");
        $("#M1_NICORR_TALUKA").val("");
        $("#M1_NICORR_DISTRICT").val("");
        $("#M1_NICORR_COUNTRY").val("");
        $("#M1_NICORR_STATE").val("");
        $("#M1_NICORR_CITY").val("");
        $("#M1_NICORR_PINCODE").val("");
        $(
          ".assignRegiOffcAddr input[type='text'],.assignRegiOffcAddr select"
        ).attr("disabled", false);
      }
    }
  });
  //custom entries of customer details
  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    $(".customInputCust input,.customInputCust select").change(function () {
      $(this).addClass("custChanged");
    });
    $(".customInputCust input,.customInputCust select").change(function () {
      $(this).addClass("custChanged");
    });
    $(
      ".customInputCustKYCDetails input,.customInputCustKYCDetails select"
    ).change(function () {
      $(this).addClass("custKYCChanged");
    });
  }

  //========================================FETCHING DROP DOWN VALUES=================================================

  if (!$.isInActivities("ACO_Scanning,ACO_Account_Creation,ACO_DVU_Rejected")) {
    getDropDownPerFormTypeAndAct();
    if (tableLoader.FORM_TYPE === "Non Individual") {
      getDropDownFromLocalStorage();
    }
  }

  //=====================================DATA FETCHING==================================================================

  if ($.isInActivities("ACO_Maker,ACO_Checker")) {
    getGSTDetails();
    getTaxResidenceDetails();
  } else if ($.isInActivities("ACO_QC")) {
    getGSTDetails();
    getTaxResidenceDetails();
    getDifferingNIData("GET_DIFFERING_NI_DATA");
  } else if ($.isInActivities("ACO_Data_Correction")) {
    getGSTDetails();
    getTaxResidenceDetails();
  } else if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
    getGSTDetails();
    getTaxResidenceDetails();
  }

  if ($.isInActivities("ACO_Scanning")) {
    localStorage.processField_isScanActivity = "true";
  } else {
    localStorage.processField_isScanActivity = "false";
  }

  //EXCEPTION PAGE CODING=====================================================================================
  if ($.isInActivities("ACO_DVU,ACO_Discrepancy")) {
    exceptionPageCoding();
  } else {
    $("#divExceptionTab").remove();
  }

  //====================================COMPLIANCE PAGE CODING SATRTS===========================================================
  if ($.isInActivities("ACO_DVU,ACO_Compliance")) {
    compliancePageCoding();
  } else {
    $("#divComplianceTab").remove();
  }

  //======================================DISABLING EVERY FIELD IN QC=============================================================
  if ($.getActivity() === "ACO_QC") {
    $(".form-control,.qcDisable").each(function () {
      var idName = $(this).attr("id");
      $("#" + idName).addClass("qcDisableFields");
      $(".qcDisableFields").prop("disabled", true);
    });
    $("#DECISION_QC").prop("disabled", false);
    $("#THIRD_PARTY_REQUIRE").prop("disabled", false);
    $("#fetchinterestButtonRD").prop("disabled", false);
    $("#fetchinterestButtonFD").prop("disabled", false);
  }

  if ($.isInActivities("ACO_Maker,ACO_Checker,ACO_Data_Correction")) {
    if ($("#FORM_TYPE").val() === "Non Individual") {
      if ($.isInActivities("ACO_Maker")) {
        $("#M1_NIOFFC_CITY").attr("readonly", true);
        $("#M1_NICORR_CITY").attr("readonly", true);
      } else if ($.isInActivities("ACO_Checker,ACO_Data_Correction")) {
        $("#NIOFFC_CITY").attr("readonly", true);
        $("#NICORR_CITY").attr("readonly", true);
      }
    }
  }

  //====================EXISITING CUSTOMER AND CIF NUMBER==============================================================================
  //    $("#IND_IS_EXISTING").change(function() {
  //        //debugger;
  //        if ($(this).val() === "New") {
  //            $("#IND_CIF_NUMBER").prop("disabled", true);
  //            $("#IND_CIF_NUMBER").prop("required", false);
  //            $("#IND_CIF_NUMBER").val("");
  //            $("#fetchCIF").hide();
  //        } else if ($(this).val() === "Existing") {
  //            $("#IND_CIF_NUMBER").prop("disabled", false);
  //            $("#IND_CIF_NUMBER").prop("required", true);
  //            $("#fetchCIF").show();
  //        }
  //        else {
  //            $("#IND_CIF_NUMBER").prop("disabled", false);
  //            $("#IND_CIF_NUMBER").prop("required", true);
  //            $("#fetchCIF").hide();
  //        }
  //
  //    });
  $("#NI_EXISTING_CUST").change(function () {
    if ($(this).val() === "New" || $(this).val() === "") {
      $("#NI_CIF_NUMBER").prop("disabled", true);
      $("#NI_CIF_NUMBER").prop("required", false);
      $("#NI_CIF_NUMBER").removeAttr("regex");
      $("#NI_CIF_NUMBER").removeAttr("regexmsg");
      $("#NI_CIF_NUMBER").removeAttr("aco_case_initiation");
    } else {
      $("#NI_CIF_NUMBER").prop("disabled", false);
      $("#NI_CIF_NUMBER").prop("required", true);
      $("#NI_CIF_NUMBER").attr("NONE-STATUS", "ACO_Case_Initiation");
    }
  });
  //=============================TYPE OF WELCOME KIT AND ACCOUNT NUMBER=======================================================
  $("#WCKIT_TYPE").change(function () {
    debugger;
    var oldSchemeArray = [
      "1005",
      "1022",
      "1020",
      "1023",
      "1033",
      "1040",
      "1039",
      "2003",
    ];
    var newSchemeArray = ["1048", "1049", "1036", "2024"];
    if ($(this).val() === "1") {
      //oldSchemeArray.includes($("#SCHEME_CODE").val()) ||
      if (newSchemeArray.includes($("#SCHEME_CODE").val())) {
        alert("only special account to be select under this product");
        $("#WCKIT_TYPE").val("");
        return;
      }
      $("#ACCOUNT_NUMBER").prop("disabled", false);
      $("#ACCOUNT_NUMBER").prop("required", true);
      $("#ACCOUNT_NUMBER_SPAN").html("Field cannot be empty");
      $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      $("#ACC_NUM_TYPE").prop("disabled", false);
      $("#ACC_NUM_TYPE").prop("required", true);
      $("#ACC_NUM_TYPE_SPAN").html("Field cannot be empty");
      $("#ACC_NUM_TYPE").addClass("requiredIndi");
    } else if ($(this).val() === "4") {
      if (newSchemeArray.includes($("#SCHEME_CODE").val())) {
        //                $("#ACCOUNT_NUMBER").removeAttr("maxlength");
        //                $("#ACCOUNT_NUMBER").attr("maxlength", "10");
        $("#validateAccBtn").attr("disabled", true);
        $("#ACCOUNT_NUMBER").attr("disabled", false);
      }
      //            else if (oldSchemeArray.includes($("#SCHEME_CODE").val())) {
      ////                $("#ACCOUNT_NUMBER").removeAttr("maxlength");
      //                $("#ACCOUNT_NUMBER").attr("maxlength", "8");
      //                $("#validateAccBtn").attr("disabled", true);
      //                $("#ACCOUNT_NUMBER").attr("disabled", false);
      //            }
      else {
        //                $("#ACCOUNT_NUMBER").removeAttr("maxlength");
        $("#WCKIT_TYPE").val("");
        alert("Selected scheme code doesn't support special account number");
      }
    } else {
      //oldSchemeArray.includes($("#SCHEME_CODE").val()) ||
      if (newSchemeArray.includes($("#SCHEME_CODE").val())) {
        alert("only special account to be select under this product");
        $("#WCKIT_TYPE").val("");
        return;
      }
      $("#ACCOUNT_NUMBER").prop("disabled", true);
      $("#ACCOUNT_NUMBER").prop("required", false);
      $("#ACCOUNT_NUMBER").val("");
      $("#ACCOUNT_NUMBER").removeAttr("regex");
      $("#ACCOUNT_NUMBER").removeAttr("regexmsg");
      $("#ACCOUNT_NUMBER").removeAttr("aco_case_initiation");
      $("#ACCOUNT_NUMBER_SPAN").html("");
      $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      $("#ACC_NUM_TYPE").prop("disabled", true);
      $("#ACC_NUM_TYPE").prop("required", false);
      $("#ACC_NUM_TYPE").val("");
      $("#ACC_NUM_TYPE_SPAN").html("");
      $("#ACC_NUM_TYPE").removeClass("requiredIndi");
    }
  });
  hideShowTabsForFormTypeOnLoad();
  //copyValuesOfID();
  //copyValuesOfAddress();
  //copyToDescription();

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    selectDepositType();
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    validateTasc(
      "CONSTITUTION",
      "NI_CORPORATE_SEGMENT",
      "NI_CORPORATE_SUB_SEGMENT"
    );
  }

  PanNumberAccess();
  $("#form60Enable").show();
  $("#form60Disable").hide();
  //==================================SLIDE DOWN TO EXCEPTION PART or compliance part=============================

  $("#ExceptionButtonID_Button").click(function () {
    $("#activityFormPanel").scrollTo("#divExceptionTab", 2000);
  });
  $("#ComplianceButtonID_Button").click(function () {
    $("#activityFormPanel").scrollTo("#divComplianceTab", 2000);
  });
  $("input[type='checkbox'][" + $.getActivity().toLowerCase() + "]").removeAttr(
    $.getActivity().toLowerCase()
  );
  $("#APPLICATION_DATE").val();
  //getAccRelationshipCodeOnLoad();
  getProductTypeOnLoad();
  getNriSavingsTypeOnLoad();
  if ($.isInActivities("ACO_QC,ACO_Maker,ACO_Checker")) {
    $("#IND_PAN_NUMBER").prop("disabled", true);
  }

  //DISABLING GENERATE CIF IF EXISTING CUST IN NON INDI IN QC
  if (
    $.isInActivities("ACO_QC") &&
    $("#FORM_TYPE").val() === "Non Individual"
  ) {
    if ($("#NI_EXISTING_CUST").val() === "Existing") {
      $("#generateCIF").hide();
    } else {
      $("#generateCIF").show();
    }
  }

  if ($.isInActivities("ACO_Maker,ACO_Checker")) {
    var principalId = "";
    var bestrateId = "";
    if ($.getActivity() === "ACO_Maker") {
      principalId = "M1_NI_FD_AMTONMATURITY";
      bestrateId = "M1_NI_FD_BESTRATE";
    } else {
      principalId = "NI_FD_AMTONMATURITY";
      bestrateId = "NI_FD_BESTRATE";
    }
    var principalValue = $("#" + principalId).val();
    if (principalValue === "3") {
      $("#" + bestrateId).attr("disabled", false);
    } else {
      $("#" + bestrateId).attr("disabled", true);
    }
  }

  if ($.isInActivities("ACO_Checker")) {
    //debugger;
    var currentUser = $.getUserName();
    var makerUser = tableLoader.MAKER_USER;
    if (currentUser === makerUser) {
      alert("Same User Not allowed for Maker and Checker Data Entry");
      $(
        ".form-control,.qcDisable,#REMARKS_QC,#activityFormPanel input[type=radio]"
      ).each(function () {
        var idName = $(this).attr("id");
        $("#" + idName).addClass("qcDisableFields");
        $(".qcDisableFields").attr("disabled", true);
      });
      $("#SYSTEM_TOOLBAR").hide();
      var buttons = document.getElementsByTagName("button");
      for (var i = 0, len = buttons.length; i < len; ++i) {
        var buttonId = buttons[i].id;
        $("#" + buttonId).attr("disabled", true);
      }
    }
  }
  if ($.isInActivities("ACO_QC")) {
    //debugger;
    var currentUser = $.getUserName();
    var dvuUser = tableLoader.DVU_USER;
    if (currentUser === dvuUser) {
      alert("Same User Not allowed for DVU and QC Data Entry");
      $(
        ".form-control,.qcDisable,#REMARKS_CHECKER,#activityFormPanel input[type=radio]"
      ).each(function () {
        var idName = $(this).attr("id");
        $("#" + idName).addClass("qcDisableFields");
        $(".qcDisableFields").attr("disabled", true);
      });
      $("#SYSTEM_TOOLBAR").hide();
      var buttons = document.getElementsByTagName("button");
      for (var i = 0, len = buttons.length; i < len; ++i) {
        var buttonId = buttons[i].id;
        $("#" + buttonId).attr("disabled", true);
      }
    }
  }

  if (
    $.isInActivities("ACO_Maker") &&
    tableLoader.DECISION_CHECKER === "SEND_BACK"
  ) {
    //debugger;
    var currentUser = $.getUserName();
    var checkerUser = tableLoader.CHECKER_USER;
    if (currentUser === checkerUser) {
      alert("Same User Not allowed for Maker and Checker Data Entry");
      $(
        ".form-control,.qcDisable,#REMARKS_CHECKER,#activityFormPanel input[type=radio]"
      ).each(function () {
        var idName = $(this).attr("id");
        $("#" + idName).addClass("qcDisableFields");
        $(".qcDisableFields").attr("disabled", true);
      });
      $("#SYSTEM_TOOLBAR").hide();
      var buttons = document.getElementsByTagName("button");
      for (var i = 0, len = buttons.length; i < len; ++i) {
        var buttonId = buttons[i].id;
        $("#" + buttonId).attr("disabled", true);
      }
    }
  }

  if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
    var totalCust = tableLoader.OTHERDETAILS_TOTAL_ACC_HOLDER;
    for (var i = 0; i < totalCust; i++) {
      $("#" + "cifButton_" + i).hide();
    }
  }

  debugger;
  if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
    $("#generateCIF").text("MODIFY DATA");
    $("#generateCIF")
      .removeAttr("onclick")
      .attr("onclick", "NIcustomerModification();");
    setTimeout(function () {
      $("#generateCIF").attr("disabled", false);
    }, 1000);
  }

  // this condition is for if scheme code is among of these cummilitive then automatically set the type of fd
  //  to CD and call the onchange function of TYPE_OF_FD
  if ($.isInActivities("ACO_Maker,ACO_Checker")) {
    var schemeCodeArray = [
      "3001",
      "3002",
      "3003",
      "3008",
      "3011",
      "3015",
      "3016",
      "3018",
      "3019",
      "3022",
      "3028",
      "3029",
      "3031",
      "3032",
      "3034",
      "3035",
      "3038",
      "3039",
      "3040",
      "3042",
      "3043",
      "3047",
      "3049",
      "3054",
    ];
    for (var i = 0; i < schemeCodeArray.length; i++) {
      if (tableLoader.SCHEME_CODE === schemeCodeArray[i]) {
        if ($.isInActivities("ACO_Maker")) {
          $("#M1_NI_FD_TYPE").val("").addClass("changed");
          $("#M1_NI_FD_TYPE").val("CD").addClass("changed");
          validateFormDepositTypes("M1_NI_FD_TYPE");
          $("#M1_NI_FD_TYPE").attr("disabled", true);
          break;
        } else {
          $("#NI_FD_TYPE").val("").addClass("changed");
          $("#NI_FD_TYPE").val("CD").addClass("changed");
          validateFormDepositTypes("NI_FD_TYPE");
          $("#NI_FD_TYPE").attr("disabled", true);
          break;
        }
      } else {
        if ($.isInActivities("ACO_Maker")) {
          $("#M1_NI_FD_TYPE").val("").addClass("changed");
          $("#M1_NI_FD_TYPE").val("FD").addClass("changed");
          validateFormDepositTypes("M1_NI_FD_TYPE");
          $("#M1_NI_FD_TYPE").attr("disabled", true);
        } else {
          $("#NI_FD_TYPE").val("").addClass("changed");
          $("#NI_FD_TYPE").val("FD").addClass("changed");
          validateFormDepositTypes("NI_FD_TYPE");
          $("#NI_FD_TYPE").attr("disabled", true);
        }
      }
    }
  }

  if (!$.isInActivities("ACO_Scanning,ACO_Case_Inititation")) {
    var schemeCode = tableLoader.SCHEME_CODE;
    //-------------------Adding Beneficiary Field Validation For Scheme code 2010

    if (schemeCode === "2018") {
      $("#beneficiaryAccDetails").attr("hidden", false);
      $("#beneficiaryAccNumber").attr("hidden", false);
      $("#OTHERDETAILS_BENEFICIARY_ACCOUNT_NUMBER").attr("disabled", true);
      $("#beneficiaryAccIfsc").attr("hidden", false);
      $("#OTHERDETAILS_BENEFICIARY_IFSC_CODE").attr("disabled", true);
      if ($.isInActivities("ACO_QC")) {
        $("#beneficiaryAccMatchStatus").attr("hidden", false);
        $("#beneficiaryAccBtn").attr("hidden", false);
      }
    } else {
      $("#beneficiaryAccDetails").attr("hidden", true);
      $("#beneficiaryAccNumber").attr("hidden", true);
      $("#beneficiaryAccIfsc").attr("hidden", true);
      $("#beneficiaryAccBtn").attr("hidden", true);
    }
  }

  //ACO RCU All field Disabled
  if ($.isInActivities("ACO_RCU")) {
    $(".form-control").each(function () {
      var id = $(this).attr("id");
      if (id === "DECISION_RCU" || id === "REMARKS_RCU") {
        $("#" + id).attr("disabled", false);
      } else {
        $("#" + id).attr("disabled", true);
      }
    });
  }
  if ($.isInActivities("RCU_OPS")) {
    $(".form-control").each(function () {
      var id = $(this).attr("id");
      if (id === "DECISION_RCU_OPS" || id === "REMARKS_RCU_OPS") {
        $("#" + id).attr("disabled", false);
      } else {
        $("#" + id).attr("disabled", true);
      }
    });
  }

  if ($.isInActivities("RCU_BRANCH")) {
    $(".form-control").each(function () {
      var id = $(this).attr("id");
      if (id === "DECISION_RCU_BRANCH" || id === "REMARKS_RCU_BRANCH") {
        $("#" + id).attr("disabled", false);
      } else {
        $("#" + id).attr("disabled", true);
      }
    });
  }
}

function getCountryCodeNRISavings(idName) {
  debugger;
  var custRelVal = $("#" + idName).val();
  if ($("#FORM_TYPE").val() === "NRI") {
    if (
      $("#ADDNL_FORM_TYPE").val() === "Savings" &&
      $("#ACCOUNT_RELN_CODE").val() === "A"
    ) {
      if (custRelVal === "2") {
        $("#IND_COUNTRY_CODE").val("+91").prop("disabled", true);
      } else {
        $("#IND_COUNTRY_CODE").val("").prop("disabled", false);
      }
    } else {
      $("#IND_COUNTRY_CODE").val("").prop("disabled", false);
    }
  } else {
    $("#IND_COUNTRY_CODE").val("+91").prop("disabled", true);
  }
}

function smileData() {
  //debugger;
  $("#smileDivData").load("../ACO/ACO_Smile_Account.jsp");
}

function getUBOPage() {
  debugger;
  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    ) &&
    ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1")
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      //   case  '6':
      // case  '3':
      // case  '7':
      case "100":
        $("#UBODivData").load("../ACO/ACO_UBO_Details.jsp");
        $("#UBODivData").show();
    }
  } else {
    $("#UBODivData").hide();
  }
}

function getUBOFlag() {
  debugger;
  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      // case  '6':
      // case  '3':
      // case  '7':
      case "100":
        $("#UBOFlagDiv").show();
        $("#UBOFlagDiv").removeAttr("hidden", "hidden");
        break;
      default:
        $("#UBOFlagDiv").hide();
        $("#UBOFlagDiv").attr("hidden", "hidden");
    }
  } else {
    $("#UBOFlagDiv").attr("hidden", "hidden");
    $("#UBOFlagDiv").hide();
  }
}

function checkCustSelectedOrModified(divId) {
  $("#" + divId)
    .find("input, textarea, button, select")
    .click(function () {
      var element = $("#CUSTDETAILS_TABLE input[name=radio]:checked").closest(
        "tr"
      );
      if (element[0] === undefined) {
        alert("Please select a customer before entering details");
        $("#ui-datepicker-div").hide();
        $("#activityFormPanel").scrollTo(
          "#CUSTDETAILS_TABLE_ADDED_QUERIES",
          2000
        );
        return;
      }
    });
}

function datePickerCust() {
  debugger;
  var today = new Date();
  //NRI SAVINGS CASE------------------------------
  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if (
      $("#FORM_TYPE").val() === "NRI" &&
      $("#ADDNL_FORM_TYPE").val() === "Savings" &&
      $("#ACCOUNT_RELN_CODE").val() === "B"
    ) {
      $(".datePickedDOBSpecial").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: "dd-mm-yy",
        yearRange: "1920:2050",
        maxDate: new Date(new Date().setYear(new Date().getFullYear() - 18)), //set the format of the date
        autoHide: true,
      });
    } else {
      $(".datePickedDOBSpecial").datepicker({
        changeMonth: true,
        changeYear: true,
        dateFormat: "dd-mm-yy",
        yearRange: "1920:2050",
        maxDate: today, //set the format of the date
        autoHide: true,
      });
    }
  } else {
    $(".datePickedDOBSpecial").datepicker({
      changeMonth: true,
      changeYear: true,
      dateFormat: "dd-mm-yy",
      yearRange: "1920:2050",
      maxDate: today, //set the format of the date
      autoHide: true,
    });
  }

  //=============================================================================================================================================
  $(".datePickedDOB").datepicker({
    changeMonth: true,
    changeYear: true,
    dateFormat: "dd-mm-yy",
    yearRange: "1930:2050",
    maxDate: today, //set the format of the date
    autoHide: true,
  });
  //normal date picker
  $(".datePicked").datepicker({
    changeMonth: true,
    changeYear: true,
    autoHide: true,
    yearRange: "1960:2050", //set the range of years
    dateFormat: "dd-mm-yy",
  });
  $(".expiryDate").datepicker({
    minDate: new Date(new Date().setDate(new Date().getDate() + 1)),
    changeMonth: true,
    changeYear: true,
    autoHide: true,
    yearRange: "2020:2070", //set the range of years
    dateFormat: "dd-mm-yy", //set the format of the date
  });
  $(".datePickedDOB").blur(function () {
    //debugger;
    var newDate = $(this).val();
    if (!moment(newDate, "DD/MM/YYYY", true).isValid()) {
      $(this).val(null);
      //            console.log("Error");
    }
  });
  $(".datePickedDOBSpecial").blur(function () {
    //debugger;
    var newDate = $(this).val();
    if (!moment(newDate, "DD/MM/YYYY", true).isValid()) {
      $(this).val(null);
      //            console.log("Error");
    }
  });
  $(".datePicked").blur(function () {
    //debugger;
    var newDate = $(this).val();
    if (!moment(newDate, "DD/MM/YYYY", true).isValid()) {
      $(this).val(null);
      //            console.log("Error");
    }
  });
  $(".expiryDate").blur(function () {
    var newDate = $(this).val();
    if (!moment(newDate, "DD/MM/YYYY", true).isValid()) {
      $(this).val(null);
      //            console.log("Error");
    }
  });
}

function loadCustDataPerAct() {
  debugger;
  var actName = $.getActivity();
  if (
    actName === "ACO_Case_Initiation" ||
    actName === "ACO_Discrepancy" ||
    actName === "DEFERRAL_COMPLIANCE" ||
    actName === "DEFERRAL_BRANCH"
  ) {
    $("#custFullDataCI").load("../ACO/ACO_Case_Initiation.jsp");
  } else if (actName === "ACO_DVU") {
    $("#custFullDataCI").load("../ACO/ACO_Case_Initiation.jsp");
    $("#custFullDataDVU").load("../ACO/ACO_DVU.jsp");
  } else if (
    actName === "ACO_Maker" ||
    actName === "ACO_Checker" ||
    actName === "ACO_QC" ||
    actName === "ACO_Data_Correction" ||
    actName === "ACO_End" ||
    actName === "ACO_RCU" ||
    actName === "RCU_OPS" ||
    actName === "RCU_BRANCH"
  ) {
    $("#custFullDataCI").load("../ACO/ACO_Case_Initiation.jsp");
    $("#custFullDataDVU").load("../ACO/ACO_DVU.jsp");
    $("#custFullDataMaker").load("../ACO/ACO_Maker.jsp");
  }

  if (actName === "ACO_Case_Initiation") {
    getCustDetails("GET_INITIATION_DATA");
  } else if (actName === "DEFERRAL_COMPLIANCE") {
    getCustDetails("GET_INITIATION_DATA_DVU");
  } else if (actName === "DEFERRAL_BRANCH") {
    getCustDetails("GET_INITIATION_DATA_DVU");
  } else if (actName === "ACO_DVU") {
    getCustDetails("GET_INITIATION_DATA_DVU");
  } else if (actName === "ACO_Discrepancy") {
    getCustDetails("GET_INITIATION_DATA_DISCP");
  } else if (actName === "ACO_Maker" || actName === "ACO_Checker") {
    getCustDetails("GET_CUSTMAKERS_DATA");
    if (
      $("#FORM_TYPE").val() === "Individual" ||
      $("#FORM_TYPE").val() === "Non Individual"
    ) {
      $("#CITY_RESI").attr("readonly", true);
      $("#CITY_PERM").attr("readonly", true);
      $("#CITY_OFF").attr("readonly", true);
      $("#FATCA_CITY").attr("readonly", true);
    }
  } else if (actName === "ACO_QC") {
    getCustDetails("GET_QC_DATA");
  } else if (actName === "ACO_Data_Correction") {
    getCustDetails("GET_DATA_CORR_DATA");
    if (
      $("#FORM_TYPE").val() === "Individual" ||
      $("#FORM_TYPE").val() === "Non Individual"
    ) {
      $("#CITY_RESI").attr("readonly", true);
      $("#CITY_PERM").attr("readonly", true);
      $("#CITY_OFF").attr("readonly", true);
      $("#FATCA_CITY").attr("readonly", true);
    }
  } else if (
    actName === "ACO_RCU" ||
    actName === "RCU_OPS" ||
    actName === "RCU_BRANCH"
  ) {
    getCustDetails("GET_DATA_CORR_DATA");
  } else if (
    actName === "ACO_End" ||
    actName === "ACO_RCU" ||
    actName === "RCU_OPS" ||
    actName === "RCU_BRANCH"
  ) {
    getCustDetails("GET_END_DATA");
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    $(".CIHidden").hide();
  } else {
    $(".CIHidden").show();
  }
  if ($.isInActivities("ACO_DVU")) {
    $(".CIHiddenDVU").hide();
  } else if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    $(".CIHiddenDVU").show();
  }
}

function hideShow() {
  var formType = tableLoader.FORM_TYPE;
  if (formType === "NRI") {
    $("#visaDetailsHead").show();
    $("#visaDetailsBody").show();
  } else {
    $("#visaDetailsHead").hide();
    $("#visaDetailsBody").hide();
  }

  $("#minorDetails").hide();
  $("#majorDetails").hide();
  $("#propDetailsDiv").hide();
}

function getDocuments() {
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetModeOfOperation",
      data: "AccRelCode=" + AccRelCode,
      success: function (data) {
        console.log(data);
        opMode = JSON.parse(data);
        for (var i in opMode) {
          $("#MODE_OF_OPERATION").append(
            "<option id=" + i + " value='" + i + "'>" + opMode[i] + "</option>"
          );
        }

        $("#MODE_OF_OPERATION").val(tableLoader.MODE_OF_OPERATION);
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    //  alert("====Exception occured while fetching values=====");
  }
}

function scanningDocsPerFormType() {
  if ($.isInActivities("ACO_Scanning")) {
    if (tableLoader.ADDNL_FORM_TYPE === "FD") {
      accLevelDocs = ["FD_AO_FORM", "BOARD_RESOLUTION"];
      custLevelDocs = [
        "CIF_FORM",
        "PAN,AADHAR",
        "FORM_60",
        "OTHERS",
        "PASSPORT",
        "VISA",
        "PHOTO_SIGNATURE",
        "SIGNATURE",
        "PHOTOGRAPH",
        "VOTERID",
        "DRIVING_LICENCE",
        "NREGA_CARD",
        "UTILITY_BILL",
        "PPTY_MNCP_TAX_RECEIPT",
        "BANK_STATEMENT",
        "PPO",
        "GOVT_ACCOMODATION_LETTER",
        "FOREIGN_OR_EMBASSY_DOCS",
        "CONSENT_FORM",
        "AADHAR_MAPPING",
        "DECLARATION",
        "SMA_ID_GOVT",
        "SMA_LETTER",
        "IT_ASSESSMENT_ORDER",
        "BUSINESS_PIC",
        "DIN",
      ];
    } else {
      accLevelDocs = ["AO_FORM", "BOARD_RESOLUTION"];
      custLevelDocs = [
        "CIF_FORM",
        "PAN,AADHAR",
        "FORM_60",
        "OTHERS",
        "PASSPORT",
        "VISA",
        "PHOTO_SIGNATURE",
        "SIGNATURE",
        "PHOTOGRAPH",
        "VOTERID",
        "DRIVING_LICENCE",
        "NREGA_CARD",
        "UTILITY_BILL",
        "PPTY_MNCP_TAX_RECEIPT",
        "BANK_STATEMENT",
        "PPO",
        "GOVT_ACCOMODATION_LETTER",
        "FOREIGN_OR_EMBASSY_DOCS",
        "CONSENT_FORM",
        "AADHAR_MAPPING",
        "DECLARATION",
        "SMA_ID_GOVT",
        "SMA_LETTER",
        "IT_ASSESSMENT_ORDER",
        "BUSINESS_PIC",
        "DIN",
      ];
    }

    if (tableLoader.FORM_TYPE === "Non Individual") {
      nonIndiDocs = [
        "ENTITY_CIF_FORM",
        "FORM_49A",
        "ENTITY_ID_PROOF",
        "ENTITY_ADDRESS_PROOF",
        "ENTITY_OTHER_DOCUMENTS",
        "CERTIFICATE_OF_INCORPORATION",
        "REGISTRATION_CERTIFICATE",
        "MOA_OR_DEED",
        "OVD_AUTHORISED_PERSON",
        "POWER_OF_ATTORNEY",
        "MUNICIPAL_CERTIFICATE",
        "ITR",
        "GST_CERTIFICATE",
        "TAX_AUTHORITY_CERTIFICATE",
        "REGISTRATION_LICENSE",
        "INCOME_DECLARATION_FORM",
        "STR",
        "SHOP_ACT_LICENSE",
        "NOC",
        "BUSINESS_LICENSE",
        "SALES_OR_PROF_TAX_CERTIFICATE",
        "IEC",
        "DEMAND_PROMISSORY_NOTE",
        "HYPOTHECATION_AGREEMENT",
        "CAM_SHEET",
      ];
    }

    totalCust = tableLoader.OTHERDETAILS_TOTAL_ACC_HOLDER;
  }
}

function callMultiUpload(formType, ButtonType) {
  if (ButtonType === "MultiUpload") {
    if (formType === "I") {
      if ($("#CUSTOMER_NO").val() === null || $("#CUSTOMER_NO").val() === "") {
        alert("Please select the customer first");
      } else {
        processField_CustType = $("#CUSTOMER_NO").val();
        processField_filterParams = [
          "CAM_SHEET",
          "HYPOTHECATION_AGREEMENT",
          "DEMAND_PROMISSORY_NOTE",
          "IEC",
          "SALES_OR_PROF_TAX_CERTIFICATE",
          "BUSINESS_LICENSE",
          "NOC",
          "SHOP_ACT_LICENSE",
          "STR",
          "INCOME_DECLARATION_FORM",
          "REGISTRATION_LICENSE",
          "TAX_AUTHORITY_CERTIFICATE",
          "GST_CERTIFICATE",
          "ITR",
          "MUNICIPAL_CERTIFICATE",
          "POWER_OF_ATTORNEY",
          "OVD_AUTHORISED_PERSON",
          "MOA_OR_DEED",
          "BOARD_RESOLUTION",
          "REGISTRATION_CERTIFICATE",
          "CERTIFICATE_OF_INCORPORATION",
          "ENTITY_OTHER_DOCUMENTS",
          "ENTITY_CIF_FORM",
          "ENTITY_ADDRESS_PROOF",
          "ENTITY_ID_PROOF",
          "AO_FORM",
          "FORM_49A",
          "FD_AO_FORM",
        ];
        $(".multiUploadFile").click();
      }
    } else if (formType === "ACC") {
      processField_CustType = $("#ACCOUNT_FIELD").val();
      if (tableLoader.ADDNL_FORM_TYPE === "FD") {
        processField_filterParams = [
          "CAM_SHEET",
          "HYPOTHECATION_AGREEMENT",
          "DEMAND_PROMISSORY_NOTE",
          "IEC",
          "SALES_OR_PROF_TAX_CERTIFICATE",
          "BUSINESS_LICENSE",
          "NOC",
          "SHOP_ACT_LICENSE",
          "STR",
          "INCOME_DECLARATION_FORM",
          "REGISTRATION_LICENSE",
          "TAX_AUTHORITY_CERTIFICATE",
          "GST_CERTIFICATE",
          "ITR",
          "MUNICIPAL_CERTIFICATE",
          "POWER_OF_ATTORNEY",
          "OVD_AUTHORISED_PERSON",
          "MOA_OR_DEED",
          "REGISTRATION_CERTIFICATE",
          "CERTIFICATE_OF_INCORPORATION",
          "ENTITY_OTHER_DOCUMENTS",
          "ENTITY_CIF_FORM",
          "ENTITY_ADDRESS_PROOF",
          "ENTITY_ID_PROOF",
          "PAN",
          "AADHAR",
          "VOTERID",
          "DRIVING_LICENCE",
          "PASSPORT",
          "NREGA_CARD",
          "OTHERS",
          "UTILITY_BILL",
          "PPTY_MNCP_TAX_RECEIPT",
          "BANK_STATEMENT",
          "PPO",
          "GOVT_ACCOMODATION_LETTER",
          "FOREIGN_OR_EMBASSY_DOCS",
          "CIF_FORM",
          "CONSENT_FORM",
          "AADHAR_MAPPING",
          "DECLARATION",
          "PHOTOGRAPH",
          "SIGNATURE",
          "SMA_ID_GOVT",
          "SMA_LETTER",
          "IT_ASSESSMENT_ORDER",
          "BUSINESS_PIC",
          "FORM_60",
          "VISA",
          "FORM_49A",
          "PPT_MNCP_TAX_RECEIPT",
          "DIN",
          "AO_FORM",
          "PHOTO_SIGNATURE",
        ];
      } else {
        processField_filterParams = [
          "CAM_SHEET",
          "HYPOTHECATION_AGREEMENT",
          "DEMAND_PROMISSORY_NOTE",
          "IEC",
          "SALES_OR_PROF_TAX_CERTIFICATE",
          "BUSINESS_LICENSE",
          "NOC",
          "SHOP_ACT_LICENSE",
          "STR",
          "INCOME_DECLARATION_FORM",
          "REGISTRATION_LICENSE",
          "TAX_AUTHORITY_CERTIFICATE",
          "GST_CERTIFICATE",
          "ITR",
          "MUNICIPAL_CERTIFICATE",
          "POWER_OF_ATTORNEY",
          "OVD_AUTHORISED_PERSON",
          "MOA_OR_DEED",
          "REGISTRATION_CERTIFICATE",
          "CERTIFICATE_OF_INCORPORATION",
          "ENTITY_OTHER_DOCUMENTS",
          "ENTITY_CIF_FORM",
          "ENTITY_ADDRESS_PROOF",
          "ENTITY_ID_PROOF",
          "PAN",
          "AADHAR",
          "VOTERID",
          "DRIVING_LICENCE",
          "PASSPORT",
          "NREGA_CARD",
          "OTHERS",
          "UTILITY_BILL",
          "PPTY_MNCP_TAX_RECEIPT",
          "BANK_STATEMENT",
          "PPO",
          "GOVT_ACCOMODATION_LETTER",
          "FOREIGN_OR_EMBASSY_DOCS",
          "CIF_FORM",
          "CONSENT_FORM",
          "AADHAR_MAPPING",
          "DECLARATION",
          "PHOTOGRAPH",
          "SIGNATURE",
          "SMA_ID_GOVT",
          "SMA_LETTER",
          "IT_ASSESSMENT_ORDER",
          "BUSINESS_PIC",
          "FORM_60",
          "VISA",
          "FORM_49A",
          "PPT_MNCP_TAX_RECEIPT",
          "DIN",
          "FD_AO_FORM",
          "PHOTO_SIGNATURE",
        ];
      }

      $(".multiUploadFile").click();
    } else {
      processField_CustType = $("#NI_APPLICANT").val();
      processField_filterParams = [
        "PAN",
        "AADHAR",
        "VOTERID",
        "DRIVING_LICENCE",
        "PASSPORT",
        "NREGA_CARD",
        "OTHERS",
        "UTILITY_BILL",
        "PPTY_MNCP_TAX_RECEIPT",
        "BANK_STATEMENT",
        "PPO",
        "GOVT_ACCOMODATION_LETTER",
        "FOREIGN_OR_EMBASSY_DOCS",
        "CIF_FORM",
        "AO_FORM",
        "CONSENT_FORM",
        "AADHAR_MAPPING",
        "DECLARATION",
        "PHOTOGRAPH",
        "SIGNATURE",
        "SMA_ID_GOVT",
        "SMA_LETTER",
        "IT_ASSESSMENT_ORDER",
        "BUSINESS_PIC",
        "FORM_60",
        "BOARD_RESOLUTION",
        "VISA",
        "PPT_MNCP_TAX_RECEIPT",
        "DIN",
        "FD_AO_FORM",
      ];
      $(".multiUploadFile").click();
    }
  } else if (ButtonType === "Upload") {
    if (formType === "I") {
      if ($("#CUSTOMER_NO").val() === null || $("#CUSTOMER_NO").val() === "") {
        alert("Please select the customer first");
      } else {
        processField_CustType = $("#CUSTOMER_NO").val();
        processField_filterParams = [""];
        $(".uploadFile").click();
      }
    } else if (formType === "ACC") {
      processField_CustType = $("#ACCOUNT_FIELD").val();
      processField_filterParams = [""];
      $(".uploadFile").click();
    } else {
      processField_CustType = $("#NI_APPLICANT").val();
      processField_filterParams = [""];
      $(".uploadFile").click();
    }
  }
}

function launchDoc(folder, user, session) {
  //debugger;
  var nSalt = "";
  $.getCSalt(
    function (data) {
      nSalt = data;
    },
    function (error) {}
  );
  var w = 550,
    h = 700,
    left = Number(screen.width / 2 - w / 2),
    tops = Number(screen.height / 2 - h / 2),
    popupWindow = window.open(
      "DMS-FILE-VIEWER.jsp?enbale=true&Userdbid=343494693&FolderId=" +
        folder +
        "&userId=" +
        user +
        "&sessionId=" +
        session +
        "&cSalt=" +
        nSalt,
      "Launch Document",
      "toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=1, copyhistory=no, width=" +
        w +
        ", height=" +
        h +
        ", top=" +
        tops +
        ", left=" +
        left
    );
  popupWindow.focus();
  // window.open("DMS-FILE-VIEWER.jsp?enbale=true&Userdbid=343494693&FolderId="+folder+"&userId="+user+"&sessionId="+session+"&cSalt="+nSalt,
  // 'Launch Document', 'height=900,width=600','scrollbars=auto, resizable=no, location=no, status=no');
  //
}

function disableAllServices(dndId) {
  //debugger;
  if (dndId === "DND_SERVICE" && $("#" + dndId).is(":checked")) {
    $(".dndIndi").each(function () {
      var id = $(this).attr("id");
      $("#" + id)
        .attr("disabled", true)
        .prop("checked", false);
      $("#" + id).val("");
    });
  } else {
    $(".dndIndi").each(function () {
      var id = $(this).attr("id");
      $("#" + id).attr("disabled", false);
    });
  }

  if (
    (dndId === "M1_NI_SERVICEDND" || dndId === "NI_SERVICEDND") &&
    $("#" + dndId).is(":checked")
  ) {
    $(".dndNonIndi").each(function () {
      var id = $(this).attr("id");
      $("#" + id)
        .attr("disabled", true)
        .prop("checked", false);
      $("#" + id).val("");
    });
  } else {
    $(".dndNonIndi").each(function () {
      var id = $(this).attr("id");
      $("#" + id).attr("disabled", false);
    });
  }
}

function populateAddressDetailsIndi(fatcaAddTypeId) {
  //debugger;
  var fatcaAddArray = [
    "FATCA_ADD_1",
    "FATCA_ADD_2",
    "FATCA_ADD_3",
    "FATCA_LANDMARK",
    "FATCA_CITY",
    "FATCA_COUNTRY",
    "FATCA_STATE",
    "FATCA_PINCODE",
  ];
  var resAddArray = [
    "ADDRESS_LINE1_RESI",
    "ADDRESS_LINE2_RESI",
    "ADDRESS_LINE3_RESI",
    "LANDMARK_RESI",
    "CITY_RESI",
    "COUNTRY_RESI",
    "STATE_RESI",
    "PINCODE_RESI",
  ];
  var permAddArray = [
    "ADD_LINE1_PERM",
    "ADD_LINE2_PERM",
    "ADD_LINE3_PERM",
    "LANDMARK_PERM",
    "CITY_PERM",
    "COUNTRY_PERM",
    "STATE_PERM",
    "PINCODE_PERM",
  ];
  var offAddArray = [
    "ADD_LINE1_OFF",
    "ADD_LINE2_OFF",
    "ADD_LINE3_OFF",
    "LANDMARK_OFF",
    "CITY_OFF",
    "COUNTRY_OFF",
    "STATE_OFF",
    "PINCODE_OFF",
  ];
  if ($("#" + fatcaAddTypeId).val() === "R") {
    for (var i in fatcaAddArray) {
      if (resAddArray[i] === "COUNTRY_RESI") {
        populateStateForFatca("COUNTRY_RESI", "FATCA_STATE");
      }
      $("#" + fatcaAddArray[i])
        .val($("#" + resAddArray[i]).val())
        .addClass("changed");
      if (
        resAddArray[i] === "ADDRESS_LINE1_RESI" ||
        resAddArray[i] === "CITY_RESI" ||
        resAddArray[i] === "COUNTRY_RESI" ||
        resAddArray[i] === "STATE_RESI" ||
        resAddArray[i] === "PINCODE_RESI"
      ) {
        if (
          $("#" + fatcaAddArray[i]).val() !== null &&
          $("#" + fatcaAddArray[i]).val() !== ""
        ) {
          var spanName = fatcaAddArray[i] + "_SPAN";
          document.getElementById(spanName).innerHTML = "";
        }
      }
    }
  } else if ($("#" + fatcaAddTypeId).val() === "P") {
    for (var i in fatcaAddArray) {
      if (permAddArray[i] === "COUNTRY_PERM") {
        populateStateForFatca("COUNTRY_PERM", "FATCA_STATE");
      }
      $("#" + fatcaAddArray[i])
        .val($("#" + permAddArray[i]).val())
        .addClass("changed");
      if (
        permAddArray[i] === "ADD_LINE1_PERM" ||
        permAddArray[i] === "CITY_PERM" ||
        permAddArray[i] === "COUNTRY_PERM" ||
        permAddArray[i] === "STATE_PERM" ||
        permAddArray[i] === "PINCODE_PERM"
      ) {
        if (
          $("#" + fatcaAddArray[i]).val() !== null &&
          $("#" + fatcaAddArray[i]).val() !== ""
        ) {
          var spanName = fatcaAddArray[i] + "_SPAN";
          document.getElementById(spanName).innerHTML = "";
        }
      }
    }
  } else if ($("#" + fatcaAddTypeId).val() === "O") {
    for (var i in fatcaAddArray) {
      if (offAddArray[i] === "COUNTRY_OFF") {
        populateStateForFatca("COUNTRY_OFF", "FATCA_STATE");
      }
      $("#" + fatcaAddArray[i])
        .val($("#" + offAddArray[i]).val())
        .addClass("changed");
      if (
        offAddArray[i] === "ADD_LINE1_OFF" ||
        offAddArray[i] === "CITY_OFF" ||
        offAddArray[i] === "COUNTRY_OFF" ||
        offAddArray[i] === "STATE_OFF" ||
        offAddArray[i] === "PINCODE_OFF"
      ) {
        if (
          $("#" + fatcaAddArray[i]).val() !== null &&
          $("#" + fatcaAddArray[i]).val() !== ""
        ) {
          var spanName = fatcaAddArray[i] + "_SPAN";
          document.getElementById(spanName).innerHTML = "";
        }
      }
    }
  } else {
    for (var i in fatcaAddArray) {
      $("#" + fatcaAddArray[i])
        .val("")
        .addClass("changed");
    }
  }
}

function populateStateForFatca(countryId, stateId) {
  //debugger;
  var countryRegOff = $("#" + countryId).val();
  if (countryRegOff) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryRegOff],
      function (headers, masterData) {
        $("#" + stateId).html("");
        $("#" + stateId).html(
          " <option selected='Select' value='''>Select</option>"
        );
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#" + stateId).val(tableLoader[stateId]);
      }
    );
  }
}

function addStaffNew() {
  var emailId = "";
  var newStaffObj = {};
  emailId = $("#IND_EMAIL").val();
  if (
    $("#IND_STAFF_DESIGNATION").val() === "" ||
    $("#IND_STAFF_DESIGNATION").val() === undefined
  ) {
    alert("Please Select Staff Designation.");
    return;
  }

  newStaffObj = {
    Data: {
      AlternateEmployeeShortName: $("#IND_FIRST_NAME").val().substring(0, 10),
      EmployeeStatus: "",
      EmployeeId: $("#EMP_CODE").val(),
      AlternateEmployeeName:
        $("#IND_FIRST_NAME").val().trim() +
        " " +
        $("#IND_MIDDLE_NAME").val().trim() +
        " " +
        $("#IND_LAST_NAME").val().trim(),
      EmployeeName:
        $("#IND_FIRST_NAME").val().trim() +
        " " +
        $("#IND_MIDDLE_NAME").val().trim() +
        " " +
        $("#IND_LAST_NAME").val().trim(),
      EmployeeEmailId: emailId,
      IsHeadTeller: "N",
      EmployeeSignPowerAmount: "0",
      EmployeeSignPowerNumber: "0",
      EmployeeShortName: $("#IND_FIRST_NAME").val().substring(0, 10),
      EmployeeDesignation: $("#IND_STAFF_DESIGNATION").val(),
      EmployeeInitials: $("#TITLE").val(),
      SolId: $("#OTHERDETAILS_ACC_OPENING_BRANCH").val(),
    },
  };
  try {
    $.ajax({
      async: true,
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(newStaffObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        debugger;
        $body.removeClass("loading");
        if (data) {
          var response = JSON.parse(data);
          if ("Error" in response) {
            alert(response["Error"]);
          } else {
            alert(response["Data"]);
          }
        } else {
          alert("Error: Something went wrong.");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCITYNew::" + e);
    $body.removeClass("loading");
  }
}

function populateAddressDetails(fatcaAddTypeId) {
  //debugger;
  var fatcaAddArray = [
    "M1_FNI_FATCA_TAXADDR1",
    "M1_FNI_FATCA_TAXADDR2",
    "M1_FNI_FATCA_TAXADDR3",
    "M1_FNI_FATCA_LANDMARK",
    "M1_NI_FATCA_CITY",
    "M1_NI_FATCA_COUNTRY",
    "M1_NI_FATCA_STATE",
    "M1_NI_FATCA_PIN",
  ];
  var regOffAddArray = [
    "M1_NIOFFC_ADD_LINE1",
    "M1_NIOFFC_ADD_LINE2",
    "M1_NIOFFC_ADD_LINE3",
    "M1_NIOFFC_LANDMARK",
    "M1_NIOFFC_CITY",
    "M1_NIOFFC_COUNTRY",
    "M1_NIOFFC_STATE",
    "M1_NIOFFC_PINCODE",
  ];
  var corrAddArray = [
    "M1_NICORR_ADD_LINE1",
    "M1_NICORR_ADD_LINE2",
    "M1_NICORR_ADD_LINE3",
    "M1_NICORR_LANDMARK",
    "M1_NICORR_CITY",
    "M1_NICORR_COUNTRY",
    "M1_NICORR_STATE",
    "M1_NICORR_PINCODE",
  ];
  //================MAKER CASE==========================================
  if ($.getActivity() === "ACO_Maker") {
    if ($("#" + fatcaAddTypeId).val() === "Registered Office Address") {
      for (var i in fatcaAddArray) {
        if (regOffAddArray[i] === "M1_NIOFFC_COUNTRY") {
          populateStateForFatca("M1_NIOFFC_COUNTRY", "M1_NI_FATCA_STATE");
        }

        $("#" + fatcaAddArray[i])
          .val($("#" + regOffAddArray[i]).val())
          .addClass("changed");
      }
    } else if ($("#" + fatcaAddTypeId).val() === "Correspondence Address") {
      for (var i in fatcaAddArray) {
        if (corrAddArray[i] === "M1_NICORR_COUNTRY") {
          populateStateForFatca("M1_NICORR_COUNTRY", "M1_NI_FATCA_STATE");
        }
        $("#" + fatcaAddArray[i])
          .val($("#" + corrAddArray[i]).val())
          .addClass("changed");
      }
    } else {
      for (var i in fatcaAddArray) {
        $("#" + fatcaAddArray[i])
          .val("")
          .addClass("changed");
      }
    }
  }

  //=======================CHECKER CASE=======================================
  else if (
    $.isInActivities(
      "ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if ($("#" + fatcaAddTypeId).val() === "Registered Office Address") {
      for (var i in fatcaAddArray) {
        var fatcaAdd = fatcaAddArray[i];
        var regOff = regOffAddArray[i];
        if (regOffAddArray[i] === "M1_NIOFFC_COUNTRY") {
          populateStateForFatca("NIOFFC_COUNTRY", "NI_FATCA_STATE");
        }

        $("#" + fatcaAdd.replace("M1_", ""))
          .val($("#" + regOff.replace("M1_", "")).val())
          .addClass("changed");
      }
    } else if ($("#" + fatcaAddTypeId).val() === "Correspondence Address") {
      for (var i in fatcaAddArray) {
        var fatcaAdd = fatcaAddArray[i];
        var corrAdd = corrAddArray[i];
        if (corrAddArray[i] === "M1_NICORR_COUNTRY") {
          populateStateForFatca("NICORR_COUNTRY", "NI_FATCA_STATE");
        }

        $("#" + fatcaAdd.replace("M1_", ""))
          .val($("#" + corrAdd.replace("M1_", "")).val())
          .addClass("changed");
      }
    } else {
      for (var i in fatcaAddArray) {
        var fatcaAdd = fatcaAddArray[i];
        $("#" + fatcaAdd.replace("M1_", ""))
          .val("")
          .addClass("changed");
      }
    }
  }
}

function bsrSecond(bsrFirstId, bsrSecondId) {
  var bsrFirstVal = $("#" + bsrFirstId).val();
  $("#" + bsrSecondId).html("");
  $("#" + bsrSecondId).html("<option selected='' value=''>Select</option>");
  $.getMaster("GET_BSR_SECOND", [bsrFirstVal], function (headers, masterData) {
    if (masterData) {
      for (var i in masterData) {
        $("#BSR_SECOND").append(
          "<option id='" +
            masterData[i][0] +
            "'  value='" +
            masterData[i][0] +
            "'>" +
            masterData[i][1] +
            "</option>"
        );
      }
    }

    //("#BSR_SECOND").val(tableLoader.BSR_SECOND);
  });
  $("#" + bsrSecondId).attr("readonly", false);
}

function bsrThird(bsrFirstID, bsrSecondID, bsrThirdId) {
  //debugger;
  var bsrSecondVal = $("#" + bsrSecondID).val();
  var bsrFirstVal = $("#" + bsrFirstID).val();
  $("#" + bsrThirdId).html("");
  $("#" + bsrThirdId).html("<option selected='' value=''>Select</option>");
  $.getMaster(
    "GET_BSR_THIRD",
    [bsrFirstVal, bsrSecondVal],
    function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#BSR_THIRD").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
      // $("#BSR_THIRD").val(tableLoader.BSR_THIRD);
    }
  );
  $("#" + bsrThirdId).attr("readonly", false);
}

function getCountryMasterData() {
  //debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetModeOfOperation",
      data: "AccRelCode=" + AccRelCode,
      success: function (data) {
        console.log(data);
        opMode = JSON.parse(data);
        for (var i in opMode) {
          $("#MODE_OF_OPERATION").append(
            "<option id=" + i + " value='" + i + "'>" + opMode[i] + "</option>"
          );
        }

        $("#MODE_OF_OPERATION").val(tableLoader.MODE_OF_OPERATION);
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    // alert("====Exception occured while fetching values=====");
  }
}

var opMode = new Object();
function getOpMode(AccRelCode) {
  var formType = tableLoader.FORM_TYPE;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetModeOfOperation",
      data:
        "AccRelCode=" +
        AccRelCode +
        "&pinstid=" +
        $.getProcessInstanceId() +
        "&formType=" +
        formType,
      async: true,
      success: function (data) {
        // console.log(data);
        opMode = JSON.parse(data);
        for (var i in opMode) {
          $("#MODE_OF_OPERATION").append(
            "<option id=" + i + " value='" + i + "'>" + opMode[i] + "</option>"
          );
        }

        $("#MODE_OF_OPERATION").val(tableLoader.MODE_OF_OPERATION);
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    // alert("====Exception occured while fetching values=====");
  }
}

var branchReq = new Object();
function getReqBranchNameIdOnLoad() {
  var branch = new Object();
  var userId = $.getUserName();
  //debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetReqBranchNameId",
      data: "userId=" + userId,
      async: true,
      success: function (data) {
        // console.log(data);
        branch = JSON.parse(data);
        branchReq = JSON.parse(data);
        if (branch[0]) {
          $("#OTHERDETAILS_REQ_BRANCH_ID").val(branch[0]).addClass("changed");
        }
        if (branch[1]) {
          $("#OTHERDETAILS_REQ_BRANCH_NAME").val(branch[1]).addClass("changed");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    // alert("====Exception occured while fetching values=====");
  }
}

function populateStateForDataInExt() {
  var countryRegOff = tableLoader.M1_NIOFFC_COUNTRY;
  if (countryRegOff) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryRegOff],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#M1_NIOFFC_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#M1_NIOFFC_STATE").val(tableLoader.M1_NIOFFC_STATE);
      }
    );
  }

  var countryCorr = tableLoader.M1_NICORR_COUNTRY;
  if (countryCorr) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryCorr],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#M1_NICORR_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#M1_NICORR_STATE").val(tableLoader.M1_NICORR_STATE);
      }
    );
  }

  var countryNonIndiFatca = tableLoader.M1_NI_FATCA_COUNTRY;
  if (countryNonIndiFatca) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryNonIndiFatca],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#M1_NI_FATCA_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#M1_NI_FATCA_STATE").val(tableLoader.M1_NI_FATCA_STATE);
      }
    );
  }

  var countryRegOffCheck = tableLoader.NIOFFC_COUNTRY;
  if (countryRegOffCheck) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryRegOffCheck],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#NIOFFC_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#NIOFFC_STATE").val(tableLoader.NIOFFC_STATE);
      }
    );
  }

  var countryCorrCheck = tableLoader.NICORR_COUNTRY;
  if (countryCorrCheck) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryCorrCheck],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#NICORR_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#NICORR_STATE").val(tableLoader.NICORR_STATE);
      }
    );
  }

  var countryNonIndiFatcaCheck = tableLoader.NI_FATCA_COUNTRY;
  if (countryNonIndiFatcaCheck) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryNonIndiFatcaCheck],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#NI_FATCA_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#NI_FATCA_STATE").val(tableLoader.NI_FATCA_STATE);
      }
    );
  }

  var countryNonIndiNomineeMak = tableLoader.M1_NI_NOMINATIONDET_COUNTRY;
  if (countryNonIndiNomineeMak) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryNonIndiNomineeMak],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#M1_NI_NOMINATIONDET_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#M1_NI_NOMINATIONDET_STATE").val(
          tableLoader.M1_NI_NOMINATIONDET_STATE
        );
      }
    );
  }

  var countryNonIndiNomineeCheck = tableLoader.NI_NOMINATIONDET_COUNTRY;
  if (countryNonIndiNomineeCheck) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryNonIndiNomineeCheck],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#NI_NOMINATIONDET_STATE").append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        $("#NI_NOMINATIONDET_STATE").val(tableLoader.NI_NOMINATIONDET_STATE);
      }
    );
  }
}

function getCompReasons() {
  //debugger;
  $.getMaster(
    "ACO_GET_COMPLIANCE_REASONS",
    ["Y"],
    function (headers, masterData) {
      //debugger;
      for (var i in masterData) {
        complianceReasonList.push(masterData[i]);
      }
    }
  );
}

function getFatcaAddrType() {
  //debugger;
  $.getMaster("GET_ADDRESS_TYPE_FATCA", [], function (headers, masterData) {
    //debugger;
    if (masterData[0] && masterData[0] !== "undefined") {
      for (var i in masterData) {
        $(
          "#M1_NI_FATCA_ADDRTYPE,#NI_FATCA_ADDRESS_TYPE,#ADD_TYPE_FATCA,#NI_FATCA_ADDRTYPE"
        ).append(
          "<option id='" +
            masterData[i][1] +
            "'  value='" +
            masterData[i][1] +
            "'>" +
            masterData[i][2] +
            "</option>"
        );
      }
    } else {
      $.getMaster("GET_ADDRESS_TYPE_FATCA", [], function (headers, masterData) {
        //debugger;
        for (var i in masterData) {
          $(
            "#M1_NI_FATCA_ADDRTYPE,#NI_FATCA_ADDRESS_TYPE,#ADD_TYPE_FATCA,#NI_FATCA_ADDRTYPE"
          ).append(
            "<option id='" +
              masterData[i][1] +
              "'  value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][2] +
              "</option>"
          );
        }

        masterDataGlobal["GET_ADDRESS_TYPE_FATCA"] = masterData;
      });
    }

    masterDataGlobal["GET_ADDRESS_TYPE_FATCA"] = masterData;
  });
}

function taxResidenceOthers(taxIdType, otherIdType) {
  //debugger;
  if (
    $("#" + taxIdType)
      .val()
      .toUpperCase() === "7"
  ) {
    $("#" + otherIdType).prop("readonly", false);
  } else {
    $("#" + otherIdType)
      .prop("readonly", true)
      .val("");
  }
}

function personalDetailsValidation() {
  //debugger;
  var dob = $("#IND_DOB").val();
  if (dob !== null && dob !== "" && dob !== "undefined") {
    var start = $("#IND_DOB").datepicker("getDate");
    var end = new Date();
    var age_year = Math.floor((end - start) / 31536000000);
    var dobSplit = dob.split("-");
    var dobYear = dobSplit[2];
    var currentDate = new Date();
    var currentYear = currentDate.getFullYear();
    if (age_year < 18) {
      $("#IS_SENIOR_CITIZEN").val("No").prop("disabled", true);
      $("#GUARDIAN_NAME").prop("disabled", false);
      $("#PERSNL_RELN_WITH_MINOR").prop("disabled", false);
    } else if (age_year >= 60) {
      $("#IS_SENIOR_CITIZEN").val("Yes").prop("disabled", true);
      $("#GUARDIAN_NAME").val("").prop("disabled", true);
      $("#PERSNL_RELN_WITH_MINOR").val("").prop("disabled", true);
    } else {
      $("#IS_SENIOR_CITIZEN").val("No").prop("disabled", true);
      $("#GUARDIAN_NAME").val("").prop("disabled", true);
      $("#PERSNL_RELN_WITH_MINOR").val("").prop("disabled", true);
    }
  }
}

function copyIdValues(idName) {
  //debugger;
  if (
    $("#" + idName)
      .val()
      .toUpperCase() === "3"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_AADHAR_NUMBER").val());
    $("#KYC_EXPIRYDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "1"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_PASSPORT").val());
    $("#KYC_EXPIRYDATE").val($("#IND_PASSPORT_EXPIRY_DATE").val());
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "6"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_PAN_NUMBER").val());
    $("#KYC_EXPIRYDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "2"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_VOTERS_ID").val());
    $("#KYC_EXPIRYDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "17"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_NREGA_CARD").val());
    $("#KYC_EXPIRYDATE").val($("#IND_NREGA_EXPIRY_DATE").val());
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "4"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_RATION_CARD").val());
    $("#KYC_EXPIRYDATE").val($("#IND_RATIONCARD_EXPIRY_DATE").val());
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "5"
  ) {
    $("#KYC_NUM_ID_PROOF").val($("#IND_DRIVING_LICENSE").val());
    $("#KYC_EXPIRYDATE").val($("#IND_DRLICENSE_EXPIRY_DATE").val());
  } else {
    $("#KYC_NUM_ID_PROOF").val("");
    $("#KYC_EXPIRYDATE").val("");
  }

  if (
    $("#KYC_EXPIRYDATE").val() !== null &&
    $("#KYC_EXPIRYDATE").val() !== "" &&
    $("#KYC_EXPIRYDATE").val() !== "undefined"
  ) {
    document.getElementById("KYC_EXPIRYDATE_SPAN").innerHTML = "";
  }
  if (
    $("#KYC_NUM_ID_PROOF").val() !== null &&
    $("#KYC_NUM_ID_PROOF").val() !== "" &&
    $("#KYC_NUM_ID_PROOF").val() !== "undefined"
  ) {
    document.getElementById("KYC_NUM_ID_PROOF_SPAN").innerHTML = "";
  }

  if (
    $("#" + idName)
      .val()
      .toUpperCase() === "7"
  ) {
    $("#KYC_OTHERIDPROOF").prop("readonly", false);
  } else {
    $("#KYC_OTHERIDPROOF").prop("readonly", true).val("");
  }
}

function copyAddValues(idName) {
  if (
    $("#" + idName)
      .val()
      .toUpperCase() === "AADRCD"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_AADHAR_NUMBER").val());
    $("#KYC_ADDPROOF_EXPDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "PASSPT"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_PASSPORT").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_PASSPORT_EXPIRY_DATE").val());
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "PAN"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_PAN_NUMBER").val());
    $("#KYC_ADDPROOF_EXPDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "VTERID"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_VOTERS_ID").val());
    $("#KYC_ADDPROOF_EXPDATE").val("");
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "NREGA"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_NREGA_CARD").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_NREGA_EXPIRY_DATE").val());
  } else if ($("#" + idName).val() === "Ration") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_RATION_CARD").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_RATIONCARD_EXPIRY_DATE").val());
  } else if (
    $("#" + idName)
      .val()
      .toUpperCase() === "DRIVLI"
  ) {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_DRIVING_LICENSE").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_DRLICENSE_EXPIRY_DATE").val());
  } else {
    $("#KYC_NUM_ADDR_PROOF").val("");
    $("#KYC_ADDPROOF_EXPDATE").val("");
  }

  if (
    $("#KYC_ADDPROOF_EXPDATE").val() !== null &&
    $("#KYC_ADDPROOF_EXPDATE").val() !== "" &&
    $("#KYC_ADDPROOF_EXPDATE").val() !== "undefined"
  ) {
    document.getElementById("KYC_ADDPROOF_EXPDATE_SPAN").innerHTML = "";
  }
  if (
    $("#KYC_NUM_ADDR_PROOF").val() !== null &&
    $("#KYC_NUM_ADDR_PROOF").val() !== "" &&
    $("#KYC_NUM_ADDR_PROOF").val() !== "undefined"
  ) {
    document.getElementById("KYC_NUM_ADDR_PROOF_SPAN").innerHTML = "";
  }

  if (
    $("#" + idName)
      .val()
      .toUpperCase() === "OTHERS"
  ) {
    $("#KYC_OTHER_ADDRPROOF").prop("readonly", false);
  } else {
    $("#KYC_OTHER_ADDRPROOF").prop("readonly", true).val("");
  }
}

function getRemarksHistory() {
  //debugger;
  $("#REMARKS_TBODY").html("");
  var serial = 0;
  $.getAllComplex("GET_REMARKS_HISTORY", [], function (headers, complexData) {
    if (complexData.length > 0) {
      for (var item in complexData) {
        console.log(complexData);
        var row = complexData[item];
        for (var i in row) {
          console.log(row[i]);
          if (row[i] === null || row[i] === "" || row[i] === "null") {
            row[i] = "";
          }
        }
        var dateFinal;
        if (row[3] !== null && row[3] !== "" && row[3] !== "null") {
          var date = new Date(row[3]);
          dateFinal = date.toStringObject("dd-mm-yy");
        } else {
          dateFinal = "";
        }

        var row1 =
          "<tr > <td >" +
          (serial + 1) +
          "</td>\n\\n\\n\
                                   <td >" +
          row[0] +
          "</td>\n\
                                   <td >" +
          row[1] +
          "</td>\n\
                                   <td style = 'word-break: break-word;'>" +
          row[2] +
          "</td>\n\\n\
                                   <td >" +
          row[3] +
          "</td>\n\\n</tr>";
        $("#REMARKS_TBODY").append(row1);
        serial++;
      }
    }
  });
  $("#REMARKS_DIALOG").dialog("open");
}

function genderTitleValidation(gender, title) {
  //debugger;
  var titleVal = $("#" + title).val();
  var genderVal = $("#" + gender).val();
  if (titleVal === "MR." && genderVal === "FEMALE") {
    document.getElementById("GENDER_TITLE_SPAN").innerHTML =
      "Title and Gender does not match";
  } else if (titleVal === "MRS." && genderVal === "MALE") {
    document.getElementById("GENDER_TITLE_SPAN").innerHTML =
      "Title and Gender does not match";
  } else if (titleVal === "MASTER" && genderVal === "FEMALE") {
    document.getElementById("GENDER_TITLE_SPAN").innerHTML =
      "Title and Gender does not match";
  } else if (titleVal === "MS." && genderVal === "MALE") {
    document.getElementById("GENDER_TITLE_SPAN").innerHTML =
      "Title and Gender does not match";
  } else {
    document.getElementById("GENDER_TITLE_SPAN").innerHTML = "";
  }
}

function getReqBranchName(idNameToPass, idNameToAppend) {
  //debugger;
  try {
    $.getMaster(
      "GET_BRANCH_NAME",
      [$("#" + idNameToPass).val()],
      function (headers, masterData) {
        if (masterData.length > 0) {
          // $("#BRANCH_NAME").append("<option id=" + masterData[i] + " value=" + masterData[i] + ">" + masterData[i] + "</option>");
          $("#" + idNameToAppend).val(masterData);
        } else {
          $("#" + idNameToAppend).val("");
        }
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }

  if (
    $("#" + idNameToAppend).val() !== null &&
    $("#" + idNameToAppend).val() !== "" &&
    $("#" + idNameToAppend).val() !== "undefined"
  ) {
    var spanName = idNameToAppend + "_SPAN";
    document.getElementById(spanName).innerHTML = "";
    $("#" + idNameToAppend).addClass("changed");
  }
}

function manageDatepicker() {
  //debugger;
  //DATE PICKER UPTO TODAYS DATE
  $(".dateParameter").each(function () {
    var idName = $(this).attr("id");
    var obj = $("#" + idName);
    $(obj).datepicker("option", "changeMonth", true);
    $(obj).datepicker("option", "autoHide", true);
    $(obj).datepicker("option", "changeYear", true);
    $(obj).datepicker("option", "yearRange", "1900:+0");
    $(obj).datepicker("option", "dateFormat", "dd-mm-yy");
    $(obj).datepicker("option", "maxDate", "+0m +0w");
  });
  //    $(".dateParameter").blur(function() {
  //        //debugger;
  //       var newDate = $(this).val();
  //        if (!moment(newDate, 'DD/MM/YYYY', true).isValid()) {
  //            $(this).val(null);
  ////            console.log("Error");
  //        }
  //
  //    });

  //NORMAL DATE PICKER
  $(".dateParameterNormal").each(function () {
    var idName = $(this).attr("id");
    var obj = $("#" + idName);
    $(obj).datepicker("option", "changeMonth", true);
    $(obj).datepicker("option", "autoHide", true);
    $(obj).datepicker("option", "changeYear", true);
    $(obj).datepicker("option", "yearRange", "1930:2050");
    $(obj).datepicker("option", "dateFormat", "dd-mm-yy");
  });
  //    $(".dateParameterNormal").blur(function() {
  //        //debugger;
  //       var newDate = $(this).val();
  //        if (!moment(newDate, 'DD/MM/YYYY', true).isValid()) {
  //            $(this).val(null);
  ////            console.log("Error");
  //        }
  //
  //    });
  //
}

function calculateAge(dob, age) {
  //debugger;
  if (
    $("#" + dob).val() !== null &&
    $("#" + dob).val() !== "" &&
    $("#" + dob).val() !== "undefined" &&
    !($("#" + dob).val() === undefined)
  ) {
    var start = $("#" + dob).datepicker("getDate");
    var end = new Date();
    var age_year = Math.floor((end - start) / 31536000000);
    var age_month = Math.floor(((end - start) % 31536000000) / 2628000000);
    var age_day = Math.floor(
      (((end - start) % 31536000000) % 2628000000) / 86400000
    );
    console.log(age_year);
    $("#" + age).val(age_year);
    $("#" + age).addClass("changed");
  } else {
    $("#" + age).val("");
  }

  conditionalValidationForMinor(dob, age, age_year);
}

function conditionalValidationForMinor(dob, age, age_year) {
  //debugger;
  if ($.isInActivities("ACO_Maker")) {
    if (age_year !== null && age_year !== "undefined" && age_year < 18) {
      $("#M1_NI_NOMINATIONDET_ISMINOR").val("Yes").prop("disabled", true);
      if (
        $("#M1_NI_NOMINATIONDET_MINORGUARDIAN").val() === null ||
        $("#M1_NI_NOMINATIONDET_MINORGUARDIAN").val() === ""
      ) {
        document.getElementById(
          "M1_NI_NOMINATIONDET_MINORGUARDIAN_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_NOMINATIONDET_MINORGUARDIAN")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#M1_NI_NOMINATIONDET_GUARRELNMINOR").val() === null ||
        $("#M1_NI_NOMINATIONDET_GUARRELNMINOR").val() === ""
      ) {
        document.getElementById(
          "M1_NI_NOMINATIONDET_GUARRELNMINOR_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_NOMINATIONDET_GUARRELNMINOR")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#M1_NI_NOMINATIONDET_GUARDIANADDR").val() === null ||
        $("#M1_NI_NOMINATIONDET_GUARDIANADDR").val() === ""
      ) {
        document.getElementById(
          "M1_NI_NOMINATIONDET_GUARDIANADDR_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_NOMINATIONDET_GUARDIANADDR")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#M1_NI_NOMINATIONDET_GUARDIANAGE").val() === null ||
        $("#M1_NI_NOMINATIONDET_GUARDIANAGE").val() === ""
      ) {
        document.getElementById(
          "M1_NI_NOMINATIONDET_GUARDIANAGE_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_NOMINATIONDET_GUARDIANAGE")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
    } else if (age_year >= 18) {
      $("#M1_NI_NOMINATIONDET_ISMINOR").val("No").prop("disabled", true);
      document.getElementById(
        "M1_NI_NOMINATIONDET_MINORGUARDIAN_SPAN"
      ).innerHTML = "";
      $("#M1_NI_NOMINATIONDET_MINORGUARDIAN")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById(
        "M1_NI_NOMINATIONDET_GUARRELNMINOR_SPAN"
      ).innerHTML = "";
      $("#M1_NI_NOMINATIONDET_GUARRELNMINOR")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById(
        "M1_NI_NOMINATIONDET_GUARDIANADDR_SPAN"
      ).innerHTML = "";
      $("#M1_NI_NOMINATIONDET_GUARDIANADDR")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById(
        "M1_NI_NOMINATIONDET_GUARDIANAGE_SPAN"
      ).innerHTML = "";
      $("#M1_NI_NOMINATIONDET_GUARDIANAGE")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
    }
  }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (age_year !== null && age_year !== "undefined" && age_year < 18) {
      $("#NI_NOMINATIONDET_ISMINOR").val("Yes").prop("disabled", true);
      if (
        $("#NI_NOMINATIONDET_MINORGUARDIAN").val() === null ||
        $("#NI_NOMINATIONDET_MINORGUARDIAN").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_MINORGUARDIAN_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#NI_NOMINATIONDET_MINORGUARDIAN")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARRELNMINOR").val() === null ||
        $("#NI_NOMINATIONDET_GUARRELNMINOR").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_GUARRELNMINOR_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#NI_NOMINATIONDET_GUARRELNMINOR")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARDIANADDR").val() === null ||
        $("#NI_NOMINATIONDET_GUARDIANADDR").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_GUARDIANADDR_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#NI_NOMINATIONDET_GUARDIANADDR")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARDIANAGE").val() === null ||
        $("#NI_NOMINATIONDET_GUARDIANAGE").val() === ""
      ) {
        document.getElementById("NI_NOMINATIONDET_GUARDIANAGE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_NOMINATIONDET_GUARDIANAGE")
          .addClass("requiredIndiMaker")
          .prop("disabled", false);
      }
    } else if (age_year >= 18) {
      $("#NI_NOMINATIONDET_ISMINOR").val("No").prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_MINORGUARDIAN_SPAN").innerHTML =
        "";
      $("#NI_NOMINATIONDET_MINORGUARDIAN")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARRELNMINOR_SPAN").innerHTML =
        "";
      $("#NI_NOMINATIONDET_GUARRELNMINOR")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARDIANADDR_SPAN").innerHTML =
        "";
      $("#NI_NOMINATIONDET_GUARDIANADDR")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARDIANAGE_SPAN").innerHTML =
        "";
      $("#NI_NOMINATIONDET_GUARDIANAGE")
        .removeClass("requiredIndiMaker")
        .prop("disabled", true);
    }
  }

  if ($.isInActivities("ACO_QC")) {
    if (age_year !== null && age_year !== "undefined" && age_year < 18) {
      $("#NI_NOMINATIONDET_ISMINOR").val("Yes").prop("disabled", true);
      if (
        $("#NI_NOMINATIONDET_MINORGUARDIAN").val() === null ||
        $("#NI_NOMINATIONDET_MINORGUARDIAN").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_MINORGUARDIAN_SPAN"
        ).innerHTML = "Field cannot be empty";
        //$("#NI_NOMINATIONDET_MINORGUARDIAN").addClass("requiredIndiMaker").prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARRELNMINOR").val() === null ||
        $("#NI_NOMINATIONDET_GUARRELNMINOR").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_GUARRELNMINOR_SPAN"
        ).innerHTML = "Field cannot be empty";
        //$("#NI_NOMINATIONDET_GUARRELNMINOR").addClass("requiredIndiMaker").prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARDIANADDR").val() === null ||
        $("#NI_NOMINATIONDET_GUARDIANADDR").val() === ""
      ) {
        document.getElementById(
          "NI_NOMINATIONDET_GUARDIANADDR_SPAN"
        ).innerHTML = "Field cannot be empty";
        //$("#NI_NOMINATIONDET_GUARDIANADDR").addClass("requiredIndiMaker").prop("disabled", false);
      }
      if (
        $("#NI_NOMINATIONDET_GUARDIANAGE").val() === null ||
        $("#NI_NOMINATIONDET_GUARDIANAGE").val() === ""
      ) {
        document.getElementById("NI_NOMINATIONDET_GUARDIANAGE_SPAN").innerHTML =
          "Field cannot be empty";
        //$("#NI_NOMINATIONDET_GUARDIANAGE").addClass("requiredIndiMaker").prop("disabled", false);
      }
    } else if (age_year >= 18) {
      $("#NI_NOMINATIONDET_ISMINOR").val("No").prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_MINORGUARDIAN_SPAN").innerHTML =
        "";
      //$("#NI_NOMINATIONDET_MINORGUARDIAN").removeClass("requiredIndiMaker").prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARRELNMINOR_SPAN").innerHTML =
        "";
      //$("#NI_NOMINATIONDET_GUARRELNMINOR").removeClass("requiredIndiMaker").prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARDIANADDR_SPAN").innerHTML =
        "";
      //$("#NI_NOMINATIONDET_GUARDIANADDR").removeClass("requiredIndiMaker").prop("disabled", true);
      document.getElementById("NI_NOMINATIONDET_GUARDIANAGE_SPAN").innerHTML =
        "";
      //$("#NI_NOMINATIONDET_GUARDIANAGE").removeClass("requiredIndiMaker").prop("disabled", true);
    }
  }
}

function errorMsgValidate(idName) {
  //debugger;
  var idValue = $("#" + idName).val();
  var spanName = idName + "_ERR";
  if (idName === "IND_CKYC_NUMBER" && idValue !== "" && idValue !== null) {
    var regex = "^[0-9]{14}$";
    if (!idValue.match(regex)) {
      document.getElementById(spanName).innerHTML = "Enter 14 digit number";
      return false;
    } else {
      document.getElementById(spanName).innerHTML = "";
    }
  }

  if (idName === "IND_EMAIL") {
    if ($("#IND_EMAIL").val() !== null && $("#IND_EMAIL").val() !== "") {
      document.getElementById("IND_EMAIL_SPAN").innerHTML = "";
    }
  }

  if (
    (idName === "IND_EMAIL" ||
      idName === "M1_NI_CONTACT_EMAIL" ||
      idName === "NI_CONTACT_EMAIL") &&
    idValue !== "" &&
    idValue !== null
  ) {
    var regex = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
    if (!idValue.match(regex)) {
      document.getElementById(spanName).innerHTML = "Enter valid email id";
      return false;
    } else {
      document.getElementById(spanName).innerHTML = "";
    }
  }

  if (idName === "IND_AADHAR_NUMBER" && idValue !== "" && idValue !== null) {
    var regex = "^[0-9]{12}$";
    if (!idValue.match(regex)) {
      document.getElementById(spanName).innerHTML = "Enter valid aadhar number";
      return false;
    } else {
      document.getElementById(spanName).innerHTML = "";
    }
  }

  if (idName === "IND_PASSPORT" && idValue !== "" && idValue !== null) {
    if ($("#FORM_TYPE").val() !== "NRI" && tableLoader.FORM_TYPE !== "NRI") {
      if (
        $("#IND_PASSPORT").val() !== null &&
        $("#IND_PASSPORT").val() !== ""
      ) {
        var patt = new RegExp("^([A-Z a-z]){1}([0-9]){7}$");
        if (patt.test(idValue)) {
          $("#" + spanName).html("");
          return true;
        } else {
          $("#" + spanName).html("Enter valid passport Number");
          return false;
        }
      } else {
        $("#" + spanName).html("");
        return true;
      }
    } else {
      $("#" + spanName).html("");
      return true;
    }
  }

  if (idName === "IND_PAN_NUMBER" && idValue !== "" && idValue !== null) {
    if (
      $("#IND_PAN_NUMBER").val() !== null &&
      $("#IND_PAN_NUMBER").val() !== ""
    ) {
      var patt = new RegExp("^[A-Z]{5}[0-9]{4}[A-Z]{1}$");
      if ($("#OTHERDETAILS_FORM_SIXTY").prop("checked")) {
        $("#" + spanName).html("");
        return true;
      } else {
        if (patt.test(idValue)) {
          $("#" + spanName).html("");
          return true;
        } else {
          $("#" + spanName).html("Enter Valid PAN Number");
          return false;
        }
      }
    } else {
      $("#" + spanName).html("");
      return true;
    }
  }
}

function removeError(clickedIdName) {
  //debugger;
  var clickedVal = $("#" + clickedIdName).val();
  //=================================ACCOUNT NUMBER AND TYPE OF WELCOME KIT====================================
  if (clickedIdName === "ACCOUNT_NUMBER") {
    var spanName = clickedIdName + "_SPAN";
    if (clickedVal !== null && clickedVal !== "" && clickedVal !== "Select") {
      document.getElementById(spanName).innerHTML = "";
      $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
    } else {
      document.getElementById(spanName).innerHTML = "Field cannot be empty";
      $("#ACCOUNT_NUMBER").addClass("requiredIndi");
    }
  }

  //=============================PASSPORT AND RESIDENTIAL STATUS ======================================
  if (clickedIdName === "IND_PASSPORT") {
    if (
      $("#" + clickedIdName).val() !== null &&
      $("#" + clickedIdName).val() !== ""
    ) {
      if (
        $("#IND_PASSPORT_ISSUE_DATE").val() === null ||
        $("#IND_PASSPORT_ISSUE_DATE").val() === "" ||
        $("#IND_PASSPORT_ISSUE_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_PASSPORT_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_PASSPORT_ISSUE_DATE").addClass("requiredIndiCustTableDVU");
      }
      if (
        $("#IND_PASSPORT_EXPIRY_DATE").val() === null ||
        $("#IND_PASSPORT_EXPIRY_DATE").val() === "" ||
        $("#IND_PASSPORT_EXPIRY_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_PASSPORT_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_PASSPORT_EXPIRY_DATE").addClass("requiredIndiCustTableDVU");
      }
    } else if (
      $("#" + clickedIdName).val() === null ||
      $("#" + clickedIdName).val() === ""
    ) {
      document.getElementById("IND_PASSPORT_ISSUE_DATE_SPAN").innerHTML = "";
      $("#IND_PASSPORT_ISSUE_DATE").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_PASSPORT_EXPIRY_DATE_SPAN").innerHTML = "";
      $("#IND_PASSPORT_EXPIRY_DATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  if (clickedIdName === "IND_PASSPORT_ISSUE_DATE") {
    if ($("#IND_PASSPORT").val() === null && $("#IND_PASSPORT").val() === "") {
      document.getElementById("IND_PASSPORT_ISSUE_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_PASSPORT_ISSUE_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  if (clickedIdName === "IND_PASSPORT_EXPIRY_DATE") {
    if ($("#IND_PASSPORT").val() === null && $("#IND_PASSPORT").val() === "") {
      document.getElementById("IND_PASSPORT_EXPIRY_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_PASSPORT_EXPIRY_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  //========================RATION CARD ISSUE AND EXPIRY ERROR MESSAGE REMOVING==========================

  if (clickedIdName === "IND_RATION_CARD") {
    if (
      $("#" + clickedIdName).val() !== null &&
      $("#" + clickedIdName).val() !== ""
    ) {
      if (
        $("#IND_RATIONCARD_ISSUE_DATE").val() === null ||
        $("#IND_RATIONCARD_ISSUE_DATE").val() === "" ||
        $("#IND_RATIONCARD_ISSUE_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_RATIONCARD_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_RATIONCARD_ISSUE_DATE").addClass("requiredIndiCustTableDVU");
      }
      if (
        $("#IND_RATIONCARD_EXPIRY_DATE").val() === null ||
        $("#IND_RATIONCARD_EXPIRY_DATE").val() === "" ||
        $("#IND_RATIONCARD_EXPIRY_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_RATIONCARD_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_RATIONCARD_EXPIRY_DATE").addClass("requiredIndiCustTableDVU");
      }
    } else if (
      $("#" + clickedIdName).val() === null ||
      $("#" + clickedIdName).val() === ""
    ) {
      document.getElementById("IND_RATIONCARD_ISSUE_DATE_SPAN").innerHTML = "";
      $("#IND_RATIONCARD_ISSUE_DATE").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_RATIONCARD_EXPIRY_DATE_SPAN").innerHTML = "";
      $("#IND_RATIONCARD_EXPIRY_DATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  if (clickedIdName === "IND_RATIONCARD_ISSUE_DATE") {
    if (
      $("#IND_RATION_CARD").val() === null &&
      $("#IND_RATION_CARD").val() === ""
    ) {
      document.getElementById("IND_RATIONCARD_ISSUE_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_RATIONCARD_ISSUE_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  if (clickedIdName === "IND_RATIONCARD_EXPIRY_DATE") {
    if (
      $("#IND_RATION_CARD").val() === null &&
      $("#IND_RATION_CARD").val() === ""
    ) {
      document.getElementById("IND_RATIONCARD_EXPIRY_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_RATIONCARD_EXPIRY_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  //========================NREGA ISSUE AND EXPIRY ERROR MESSAGE REMOVING==========================

  if (clickedIdName === "IND_NREGA_CARD") {
    if (
      $("#" + clickedIdName).val() !== null &&
      $("#" + clickedIdName).val() !== ""
    ) {
      if (
        $("#IND_NREGA_ISSUE_DATE").val() === null ||
        $("#IND_NREGA_ISSUE_DATE").val() === "" ||
        $("#IND_NREGA_ISSUE_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_NREGA_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_NREGA_ISSUE_DATE").addClass("requiredIndiCustTableDVU");
      }
      if (
        $("#IND_NREGA_EXPIRY_DATE").val() === null ||
        $("#IND_NREGA_EXPIRY_DATE").val() === "" ||
        $("#IND_NREGA_EXPIRY_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_NREGA_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_NREGA_EXPIRY_DATE").addClass("requiredIndiCustTableDVU");
      }
    } else if (
      $("#" + clickedIdName).val() === null ||
      $("#" + clickedIdName).val() === ""
    ) {
      document.getElementById("IND_NREGA_ISSUE_DATE_SPAN").innerHTML = "";
      $("#IND_NREGA_ISSUE_DATE").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_NREGA_EXPIRY_DATE_SPAN").innerHTML = "";
      $("#IND_NREGA_EXPIRY_DATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  if (clickedIdName === "IND_NREGA_ISSUE_DATE") {
    if (
      $("#IND_NREGA_CARD").val() === null &&
      $("#IND_NREGA_CARD").val() === ""
    ) {
      document.getElementById("IND_NREGA_ISSUE_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_NREGA_ISSUE_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  if (clickedIdName === "IND_NREGA_EXPIRY_DATE") {
    if (
      $("#IND_NREGA_CARD").val() === null &&
      $("#IND_NREGA_CARD").val() === ""
    ) {
      document.getElementById("IND_NREGA_EXPIRY_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_NREGA_EXPIRY_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  //========================DRIVING LICENSE ISSUE AND EXPIRY ERROR MESSAGE REMOVING==========================

  if (clickedIdName === "IND_DRIVING_LICENSE") {
    if (
      $("#" + clickedIdName).val() !== null &&
      $("#" + clickedIdName).val() !== ""
    ) {
      if (
        $("#IND_DRLICENSE_ISSUE_DATE").val() === null ||
        $("#IND_DRLICENSE_ISSUE_DATE").val() === "" ||
        $("#IND_DRLICENSE_ISSUE_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_DRLICENSE_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_DRLICENSE_ISSUE_DATE").addClass("requiredIndiCustTableDVU");
      }
      if (
        $("#IND_DRLICENSE_EXPIRY_DATE").val() === null ||
        $("#IND_DRLICENSE_EXPIRY_DATE").val() === "" ||
        $("#IND_DRLICENSE_EXPIRY_DATE").val() === "undefined"
      ) {
        document.getElementById("IND_DRLICENSE_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_DRLICENSE_EXPIRY_DATE").addClass("requiredIndiCustTableDVU");
      }
    } else if (
      $("#" + clickedIdName).val() === null ||
      $("#" + clickedIdName).val() === ""
    ) {
      document.getElementById("IND_DRLICENSE_ISSUE_DATE_SPAN").innerHTML = "";
      $("#IND_DRLICENSE_ISSUE_DATE").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_DRLICENSE_EXPIRY_DATE_SPAN").innerHTML = "";
      $("#IND_DRLICENSE_EXPIRY_DATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  if (clickedIdName === "IND_DRLICENSE_ISSUE_DATE") {
    if (
      $("#IND_DRIVING_LICENSE").val() === null &&
      $("#IND_DRIVING_LICENSE").val() === ""
    ) {
      document.getElementById("IND_DRLICENSE_ISSUE_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_DRLICENSE_ISSUE_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }

  if (clickedIdName === "IND_DRLICENSE_EXPIRY_DATE") {
    if (
      $("#IND_DRIVING_LICENSE").val() === null &&
      $("#IND_DRIVING_LICENSE").val() === ""
    ) {
      document.getElementById("IND_DRLICENSE_EXPIRY_DATE_SPAN").innerHTML = "";
    } else {
      document.getElementById("IND_DRLICENSE_EXPIRY_DATE_SPAN").innerHTML =
        "Field cannot be empty";
    }
  }
  //=====================================================================================================================
}

function radioUncheckTwo() {
  $(":radio").mousedown(function (e) {
    var $self = $(this);
    if ($self.is(":checked")) {
      var uncheck = function () {
        setTimeout(function () {
          $self.removeAttr("checked");
        }, 0);
      };
      var unbind = function () {
        $self.unbind("mouseup", up);
      };
      var up = function () {
        uncheck();
        unbind();
      };
      $self.bind("mouseup", up);
      $self.one("mouseout", unbind);
    }
  });
}

function validateFormRD(idName) {
  //debugger;
  var idValue = $("#" + idName).val();
  var spanName = idName + "_SPAN";
  if ($.isInActivities("ACO_Maker")) {
    if (idName === "M1_NI_RD_AMTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#M1_NI_RD_SSFBBANKACC").val() === null ||
          $("#M1_NI_RD_SSFBBANKACC").val() === ""
        ) {
          document.getElementById("M1_NI_RD_SSFBBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_RD_SSFBBANKACC").addClass("requiredIndiMaker");
        }
        $("#M1_NI_RD_SSFBBANKACC").prop("readonly", false);
      } else {
        document.getElementById("M1_NI_RD_SSFBBANKACC_SPAN").innerHTML = "";
        $("#M1_NI_RD_SSFBBANKACC").removeClass("requiredIndiMaker");
        $("#M1_NI_RD_SSFBBANKACC").val("").prop("readonly", true);
      }
      //====================================================================================================
      if ($("#" + idName).val() === "2") {
        if (
          $("#M1_NI_RD_BRANCH").val() === null ||
          $("#M1_NI_RD_BRANCH").val() === ""
        ) {
          document.getElementById("M1_NI_RD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_RD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_RD_IFSC").val() === null ||
          $("#M1_NI_RD_IFSC").val() === ""
        ) {
          document.getElementById("M1_NI_RD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_RD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_RD_OTHERBANKACC").val() === null ||
          $("#M1_NI_RD_OTHERBANKACC").val() === ""
        ) {
          document.getElementById("M1_NI_RD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_RD_OTHERBANKACC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_RD_EXTACCTRANSFERTYPE").val() === null ||
          $("#M1_NI_RD_EXTACCTRANSFERTYPE").val() === ""
        ) {
          document.getElementById(
            "M1_NI_RD_EXTACCTRANSFERTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_RD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_RD_BENEFICIARYACCTYPE").val() === null ||
          $("#M1_NI_RD_BENEFICIARYACCTYPE").val() === ""
        ) {
          document.getElementById(
            "M1_NI_RD_BENEFICIARYACCTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_RD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#M1_NI_RD_BRANCH").prop("readonly", false);
        $("#M1_NI_RD_IFSC").prop("readonly", false);
        $("#M1_NI_RD_OTHERBANKACC").prop("readonly", false);
        $("#M1_NI_RD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#M1_NI_RD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else {
        document.getElementById("M1_NI_RD_BRANCH_SPAN").innerHTML = "";
        $("#M1_NI_RD_BRANCH").removeClass("requiredIndiMaker");
        document.getElementById("M1_NI_RD_IFSC_SPAN").innerHTML = "";
        $("#M1_NI_RD_IFSC").removeClass("requiredIndiMaker");
        document.getElementById("M1_NI_RD_OTHERBANKACC_SPAN").innerHTML = "";
        $("#M1_NI_RD_OTHERBANKACC").removeClass("requiredIndiMaker");
        document.getElementById("M1_NI_RD_EXTACCTRANSFERTYPE_SPAN").innerHTML =
          "";
        $("#M1_NI_RD_EXTACCTRANSFERTYPE").removeClass("requiredIndiMaker");
        document.getElementById("M1_NI_RD_BENEFICIARYACCTYPE_SPAN").innerHTML =
          "";
        $("#M1_NI_RD_BENEFICIARYACCTYPE").removeClass("requiredIndiMaker");
        $("#M1_NI_RD_BRANCH").val("").prop("readonly", true);
        $("#M1_NI_RD_IFSC").val("").prop("readonly", true);
        $("#M1_NI_RD_OTHERBANKACC").val("").prop("readonly", true);
        $("#M1_NI_RD_EXTACCTRANSFERTYPE").val("Select").attr("disabled", true);
        $("#M1_NI_RD_BENEFICIARYACCTYPE").val("Select").attr("disabled", true);
      }
    }
  }

  //   if($.isInActivities("ACO_Checker")){
  //   if(idName === "NI_RD_AMTONMATURITY"){
  //     if($("#"+idName).find('option:selected').text() === "Transfer To SSFB Account"){
  //       if($("#NI_RD_SSFBBANKACC").val() ===  null || $("#NI_RD_SSFBBANKACC").val() === ""){
  //        document.getElementById("NI_RD_SSFBBANKACC_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_SSFBBANKACC").addClass("requiredIndiChecker");}
  //     }else{
  //      document.getElementById("NI_RD_SSFBBANKACC_SPAN").innerHTML = "";
  //       $("#NI_RD_SSFBBANKACC").removeClass("requiredIndiChecker");
  //     }
  // //====================================================================================================
  //     if($("#"+idName).find('option:selected').text() === "Transfer To Another Account"){
  //       if($("#NI_RD_BRANCH").val() ===  null || $("#NI_RD_BRANCH").val() === ""){
  //        document.getElementById("NI_RD_BRANCH_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_BRANCH").addClass("requiredIndiChecker");}
  //       if($("#NI_RD_IFSC").val() ===  null || $("#NI_RD_IFSC").val() === ""){
  //        document.getElementById("NI_RD_IFSC_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_IFSC").addClass("requiredIndiChecker");}
  //       if($("#NI_RD_OTHERBANKACC").val() ===  null || $("#NI_RD_OTHERBANKACC").val() === ""){
  //        document.getElementById("NI_RD_OTHERBANKACC_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_OTHERBANKACC").addClass("requiredIndiChecker");}
  //        if($("#NI_RD_EXTACCTRANSFERTYPE").val() ===  null || $("#NI_RD_EXTACCTRANSFERTYPE").val() === ""){
  //        document.getElementById("NI_RD_EXTACCTRANSFERTYPE_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_EXTACCTRANSFERTYPE").addClass("requiredIndiChecker");}
  //       if($("#NI_RD_BENEFICIARYACCTYPE").val() ===  null || $("#NI_RD_BENEFICIARYACCTYPE").val() === ""){
  //        document.getElementById("NI_RD_BENEFICIARYACCTYPE_SPAN").innerHTML = "Field cannot be empty";
  //        $("#NI_RD_BENEFICIARYACCTYPE").addClass("requiredIndiChecker");}
  //
  //     }else{
  //      document.getElementById("NI_RD_BRANCH_SPAN").innerHTML = "";
  //       $("#NI_RD_BRANCH").removeClass("requiredIndiChecker");
  //       document.getElementById("NI_RD_IFSC_SPAN").innerHTML = "";
  //       $("#NI_RD_IFSC").removeClass("requiredIndiChecker");
  //       document.getElementById("NI_RD_OTHERBANKACC_SPAN").innerHTML = "";
  //       $("#NI_RD_OTHERBANKACC").removeClass("requiredIndiChecker");
  //       document.getElementById("NI_RD_EXTACCTRANSFERTYPE_SPAN").innerHTML = "";
  //       $("#NI_RD_EXTACCTRANSFERTYPE").removeClass("requiredIndiChecker");
  //       document.getElementById("NI_RD_BENEFICIARYACCTYPE_SPAN").innerHTML = "";
  //       $("#NI_RD_BENEFICIARYACCTYPE").removeClass("requiredIndiChecker");
  //     }
  //
  //
  //   }
  //   }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "NI_RD_AMTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#NI_RD_SSFBBANKACC").val() === null ||
          $("#NI_RD_SSFBBANKACC").val() === ""
        ) {
          document.getElementById("NI_RD_SSFBBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_SSFBBANKACC").addClass("requiredIndiMaker");
        }
        $("#NI_RD_SSFBBANKACC").prop("readonly", false);
      } else {
        document.getElementById("NI_RD_SSFBBANKACC_SPAN").innerHTML = "";
        $("#NI_RD_SSFBBANKACC").removeClass("requiredIndiMaker").val("");
        $("#NI_RD_SSFBBANKACC").prop("readonly", true);
      }
      //====================================================================================================
      if ($("#" + idName).val() === "2") {
        if (
          $("#NI_RD_BRANCH").val() === null ||
          $("#NI_RD_BRANCH").val() === ""
        ) {
          document.getElementById("NI_RD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_BRANCH").addClass("requiredIndiMaker");
        }
        if ($("#NI_RD_IFSC").val() === null || $("#NI_RD_IFSC").val() === "") {
          document.getElementById("NI_RD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_RD_OTHERBANKACC").val() === null ||
          $("#NI_RD_OTHERBANKACC").val() === ""
        ) {
          document.getElementById("NI_RD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_OTHERBANKACC").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_RD_EXTACCTRANSFERTYPE").val() === null ||
          $("#NI_RD_EXTACCTRANSFERTYPE").val() === ""
        ) {
          document.getElementById("NI_RD_EXTACCTRANSFERTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_RD_BENEFICIARYACCTYPE").val() === null ||
          $("#NI_RD_BENEFICIARYACCTYPE").val() === ""
        ) {
          document.getElementById("NI_RD_BENEFICIARYACCTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_RD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#NI_RD_BRANCH").prop("readonly", false);
        $("#NI_RD_IFSC").prop("readonly", false);
        $("#NI_RD_OTHERBANKACC").prop("readonly", false);
        $("#NI_RD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#NI_RD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else {
        document.getElementById("NI_RD_BRANCH_SPAN").innerHTML = "";
        $("#NI_RD_BRANCH").removeClass("requiredIndiMaker").val("");
        document.getElementById("NI_RD_IFSC_SPAN").innerHTML = "";
        $("#NI_RD_IFSC").removeClass("requiredIndiMaker").val("");
        document.getElementById("NI_RD_OTHERBANKACC_SPAN").innerHTML = "";
        $("#NI_RD_OTHERBANKACC").removeClass("requiredIndiMaker").val("");
        document.getElementById("NI_RD_EXTACCTRANSFERTYPE_SPAN").innerHTML = "";
        $("#NI_RD_EXTACCTRANSFERTYPE").removeClass("requiredIndiMaker").val("");
        document.getElementById("NI_RD_BENEFICIARYACCTYPE_SPAN").innerHTML = "";
        $("#NI_RD_BENEFICIARYACCTYPE").removeClass("requiredIndiMaker").val("");
        $("#NI_RD_BRANCH").prop("readonly", true);
        $("#NI_RD_IFSC").prop("readonly", true);
        $("#NI_RD_OTHERBANKACC").prop("readonly", true);
        $("#NI_RD_EXTACCTRANSFERTYPE").attr("disabled", true);
        $("#NI_RD_BENEFICIARYACCTYPE").attr("disabled", true);
      }
    }
  }
}

function titleGenderValidation(genderId) {
  //debugger;
  var tiltleMatchingGender = $("#TITLE").find("option:selected").attr("id");
  var tiltleMatchingGenderSplit;
  //   if(tiltleMatchingGender){
  //    tiltleMatchingGenderSplit = tiltleMatchingGender.split("/");
  //   }
  if (tiltleMatchingGender) {
    if (!tiltleMatchingGender.includes($("#" + genderId).val())) {
      document.getElementById("GENDER_TITLE_SPAN").innerHTML =
        "Title and Gender does not match";
    } else {
      document.getElementById("GENDER_TITLE_SPAN").innerHTML = "";
    }
  }
}

function minorMajorValidation(idName, cifNumber) {
  //debugger;
  var spanName = cifNumber + "_SPAN";
  if ($("#" + idName).prop("checked")) {
    document.getElementById(spanName).innerHTML = "Field cannot be empty";
    $("#" + cifNumber).addClass("requiredIndiCustTableDVU");
  } else {
    document.getElementById(spanName).innerHTML = "";
    $("#" + cifNumber).removeClass("requiredIndiCustTableDVU");
  }
}

function validateFormDepositTypes(idName) {
  debugger;
  var idValue = $("#" + idName).val();
  var spanName = idName + "_SPAN";
  if ($.isInActivities("ACO_Maker")) {
    //====================================================================================================================
    if (idName === "M1_NI_FD_TYPE") {
      if (idValue === "FD") {
        if (
          $("#M1_NI_FD_INTERESTONMATURITY").val() === null ||
          $("#M1_NI_FD_INTERESTONMATURITY").val() === "" ||
          $("#M1_NI_FD_INTERESTONMATURITY").val() === "Select"
        ) {
          $("#M1_NI_FD_INTERESTONMATURITY_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_INTERESTONMATURITY")
            .val("Select")
            .prop("disabled", false)
            .addClass("changed");
          $("#M1_NI_FD_INTERESTONMATURITY").addClass("requiredIndiMaker");
        } else {
          $("#M1_NI_FD_INTERESTONMATURITY_SPAN").html("");
          $("#M1_NI_FD_INTERESTONMATURITY")
            .val("Select")
            .prop("disabled", false)
            .addClass("changed");
          $("#M1_NI_FD_INTERESTONMATURITY").removeClass("requiredIndiMaker");
        }
      } else if (idValue === "CD") {
        $("#M1_NI_FD_INTERESTONMATURITY")
          .val("0")
          .prop("disabled", true)
          .addClass("changed");
        $("#M1_NI_FD_INTERESTONMATURITY_SPAN").html("");
        $("#M1_NI_FD_INTERESTONMATURITY").removeClass("requiredIndiMaker");
      } else {
        $("#M1_NI_FD_INTERESTONMATURITY")
          .val("Select")
          .prop("disabled", false)
          .addClass("changed");
      }
      //================================================================================================================

      if (idValue === "FD" || idValue === "CD") {
        if (
          $("#M1_NI_FD_PERIOD_YEARS").val() === null ||
          $("#M1_NI_FD_PERIOD_YEARS").val() === ""
        ) {
          $("#M1_NI_FD_PERIOD_YEARS_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_PERIOD_YEARS").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_PERIOD_MON").val() === null ||
          $("#M1_NI_FD_PERIOD_MON").val() === ""
        ) {
          $("#M1_NI_FD_PERIOD_MON_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_PERIOD_MON").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_PERIOD_DAYS").val() === null ||
          $("#M1_NI_FD_PERIOD_DAYS").val() === ""
        ) {
          $("#M1_NI_FD_PERIOD_DAYS_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_PERIOD_DAYS").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_AMTONMATURITY").val() === null ||
          $("#M1_NI_FD_AMTONMATURITY").val() === "" ||
          $("#M1_NI_FD_AMTONMATURITY").val() === "Select"
        ) {
          $("#M1_NI_FD_AMTONMATURITY_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_AMTONMATURITY").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_DEPOSITAMT").val() === null ||
          $("#M1_NI_FD_DEPOSITAMT").val() === ""
        ) {
          $("#M1_NI_FD_DEPOSITAMT_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_DEPOSITAMT").addClass("requiredIndiMaker");
        }
      } else {
        $("#M1_NI_FD_PERIOD_YEARS_SPAN").html("");
        $("#M1_NI_FD_PERIOD_YEARS").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_PERIOD_MON_SPAN").html("");
        $("#M1_NI_FD_PERIOD_MON").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_PERIOD_DAYS_SPAN").html("");
        $("#M1_NI_FD_PERIOD_DAYS").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_AMTONMATURITY_SPAN").html("");
        $("#M1_NI_FD_AMTONMATURITY").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_DEPOSITAMT_SPAN").html("");
        $("#M1_NI_FD_DEPOSITAMT").removeClass("requiredIndiMaker");
      }
    }
    //=============================SSFB ACCOUNT =====================================================================
    if (idName === "M1_NI_FD_AMTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#M1_NI_FD_SSFBPRICIPALACCNO").val() === null ||
          $("#M1_NI_FD_SSFBPRICIPALACCNO").val() === "" ||
          $("#M1_NI_FD_SSFBPRICIPALACCNO").val() === "Select"
        ) {
          $("#M1_NI_FD_SSFBPRICIPALACCNO_SPAN").html("Field cannot be empty");
          $("#M1_NI_FD_SSFBPRICIPALACCNO").prop("readonly", false);
          $("#M1_NI_FD_SSFBPRICIPALACCNO").addClass("requiredIndiMaker");
        }
      } else {
        $("#M1_NI_FD_SSFBPRICIPALACCNO_SPAN").html("");
        $("#M1_NI_FD_SSFBPRICIPALACCNO").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_SSFBPRICIPALACCNO").prop("readonly", true).val("");
      }
    }

    //=======================================================================================================================
    if (
      idName === "M1_NI_FD_AMTONMATURITY" ||
      idName === "M1_NI_FD_INTERESTONMATURITY"
    ) {
      if (
        $("#M1_NI_FD_AMTONMATURITY").val() === "2" &&
        $("#M1_NI_FD_INTERESTONMATURITY").val() === "2"
      ) {
        if (
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === null ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "" ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_EXTACCTRANSFERTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_OTHERBANKACC").val() === null ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "" ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_OTHERBANKACC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BRANCH").val() === null ||
          $("#M1_NI_FD_BRANCH").val() === "" ||
          $("#M1_NI_FD_BRANCH").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_IFSC").val() === null ||
          $("#M1_NI_FD_IFSC").val() === "" ||
          $("#M1_NI_FD_IFSC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === null ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "" ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_BENEFICIARYACCTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#M1_NI_FD_OTHERBANKACC").prop("readonly", false);
        $("#M1_NI_FD_BRANCH").prop("readonly", false);
        $("#M1_NI_FD_IFSC").prop("readonly", false);
        $("#M1_NI_FD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#M1_NI_FD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else if (
        $("#M1_NI_FD_AMTONMATURITY").val() === "2" &&
        $("#M1_NI_FD_INTERESTONMATURITY").val() === "0"
      ) {
        if (
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === null ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "" ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_EXTACCTRANSFERTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_OTHERBANKACC").val() === null ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "" ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_OTHERBANKACC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BRANCH").val() === null ||
          $("#M1_NI_FD_BRANCH").val() === "" ||
          $("#M1_NI_FD_BRANCH").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_IFSC").val() === null ||
          $("#M1_NI_FD_IFSC").val() === "" ||
          $("#M1_NI_FD_IFSC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === null ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "" ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_BENEFICIARYACCTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#M1_NI_FD_OTHERBANKACC").prop("readonly", false);
        $("#M1_NI_FD_BRANCH").prop("readonly", false);
        $("#M1_NI_FD_IFSC").prop("readonly", false);
        $("#M1_NI_FD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#M1_NI_FD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else if (
        $("#M1_NI_FD_AMTONMATURITY").val() === "3" &&
        $("#M1_NI_FD_INTERESTONMATURITY").val() === "2"
      ) {
        if (
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === null ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "" ||
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_EXTACCTRANSFERTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_OTHERBANKACC").val() === null ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "" ||
          $("#M1_NI_FD_OTHERBANKACC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_OTHERBANKACC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BRANCH").val() === null ||
          $("#M1_NI_FD_BRANCH").val() === "" ||
          $("#M1_NI_FD_BRANCH").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_IFSC").val() === null ||
          $("#M1_NI_FD_IFSC").val() === "" ||
          $("#M1_NI_FD_IFSC").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === null ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "" ||
          $("#M1_NI_FD_BENEFICIARYACCTYPE").val() === "Select"
        ) {
          document.getElementById(
            "M1_NI_FD_BENEFICIARYACCTYPE_SPAN"
          ).innerHTML = "Field cannot be empty";
          $("#M1_NI_FD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#M1_NI_FD_OTHERBANKACC").prop("readonly", false);
        $("#M1_NI_FD_BRANCH").prop("readonly", false);
        $("#M1_NI_FD_IFSC").prop("readonly", false);
        $("#M1_NI_FD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#M1_NI_FD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else {
        $("#M1_NI_FD_EXTACCTRANSFERTYPE_SPAN").html("");
        $("#M1_NI_FD_EXTACCTRANSFERTYPE").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_OTHERBANKACC_SPAN").html("");
        $("#M1_NI_FD_OTHERBANKACC").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_BRANCH_SPAN").html("");
        $("#M1_NI_FD_BRANCH").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_IFSC_SPAN").html("");
        $("#M1_NI_FD_IFSC").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_BENEFICIARYACCTYPE_SPAN").html("");
        $("#M1_NI_FD_BENEFICIARYACCTYPE").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_OTHERBANKACC").prop("readonly", true).val("");
        $("#M1_NI_FD_BRANCH").prop("readonly", true).val("");
        $("#M1_NI_FD_IFSC").prop("readonly", true).val("");
        $("#M1_NI_FD_EXTACCTRANSFERTYPE").attr("disabled", true).val("");
        $("#M1_NI_FD_BENEFICIARYACCTYPE").attr("disabled", true).val("");
      }
    }

    //======================================================================================================================
    if (idName === "M1_NI_FD_INTERESTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#M1_NI_FD_SSFBINTERESTACCNO").val() === null ||
          $("#M1_NI_FD_SSFBINTERESTACCNO").val() === "" ||
          $("#M1_NI_FD_SSFBINTERESTACCNO").val() === "Select"
        ) {
          document.getElementById("M1_NI_FD_SSFBINTERESTACCNO_SPAN").innerHTML =
            "Field cannot be empty";
          $("#M1_NI_FD_SSFBINTERESTACCNO").addClass("requiredIndiMaker");
          $("#M1_NI_FD_SSFBINTERESTACCNO").prop("readonly", false);
        }
      } else {
        $("#M1_NI_FD_SSFBINTERESTACCNO_SPAN").html("");
        $("#M1_NI_FD_SSFBINTERESTACCNO").removeClass("requiredIndiMaker");
        $("#M1_NI_FD_SSFBINTERESTACCNO").prop("readonly", true).val("");
      }
    }
  }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    //====================================================================================================================
    if (idName === "NI_FD_TYPE") {
      if (idValue === "FD") {
        if (
          $("#NI_FD_INTERESTONMATURITY").val() === null ||
          $("#NI_FD_INTERESTONMATURITY").val() === "" ||
          $("#NI_FD_INTERESTONMATURITY").val() === "Select"
        ) {
          document.getElementById("NI_FD_INTERESTONMATURITY_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_INTERESTONMATURITY").val("Select").prop("disabled", false);
          $("#NI_FD_INTERESTONMATURITY").addClass("requiredIndiMaker");
        } else {
          $("#NI_FD_INTERESTONMATURITY_SPAN").html("");
          $("#NI_FD_INTERESTONMATURITY")
            .val("Select")
            .prop("disabled", false)
            .addClass("changed");
          $("#NI_FD_INTERESTONMATURITY").removeClass("requiredIndiMaker");
        }
      } else if (idValue === "CD") {
        $("#NI_FD_INTERESTONMATURITY")
          .val("0")
          .prop("disabled", true)
          .addClass("changed");
        $("#NI_FD_INTERESTONMATURITY_SPAN").html("");
        $("#NI_FD_INTERESTONMATURITY").removeClass("requiredIndiMaker");
      } else {
        $("#NI_FD_INTERESTONMATURITY")
          .val("Select")
          .prop("disabled", false)
          .addClass("changed");
      }
      //================================================================================================================

      if (idValue === "FD" || idValue === "CD") {
        if (
          $("#NI_FD_PERIOD_YEARS").val() === null ||
          $("#NI_FD_PERIOD_YEARS").val() === ""
        ) {
          document.getElementById("NI_FD_PERIOD_YEARS_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_PERIOD_YEARS").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_PERIOD_MON").val() === null ||
          $("#NI_FD_PERIOD_MON").val() === ""
        ) {
          document.getElementById("NI_FD_PERIOD_MON_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_PERIOD_MON").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_PERIOD_DAYS").val() === null ||
          $("#NI_FD_PERIOD_DAYS").val() === ""
        ) {
          document.getElementById("NI_FD_PERIOD_DAYS_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_PERIOD_DAYS").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_AMTONMATURITY").val() === null ||
          $("#NI_FD_AMTONMATURITY").val() === "" ||
          $("#NI_FD_AMTONMATURITY").val() === "Select"
        ) {
          document.getElementById("NI_FD_AMTONMATURITY_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_AMTONMATURITY").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_DEPOSITAMT").val() === null ||
          $("#NI_FD_DEPOSITAMT").val() === ""
        ) {
          document.getElementById("NI_FD_DEPOSITAMT_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_DEPOSITAMT").addClass("requiredIndiMaker");
        }
      } else {
        $("#NI_FD_PERIOD_YEARS_SPAN").html("");
        $("#NI_FD_PERIOD_YEARS").removeClass("requiredIndiMaker");
        $("#NI_FD_PERIOD_MON_SPAN").html("");
        $("#NI_FD_PERIOD_MON").removeClass("requiredIndiMaker");
        $("#NI_FD_PERIOD_DAYS_SPAN").html("");
        $("#NI_FD_PERIOD_DAYS").removeClass("requiredIndiMaker");
        $("#NI_FD_AMTONMATURITY_SPAN").html("");
        $("#NI_FD_AMTONMATURITY").removeClass("requiredIndiMaker");
        $("#NI_FD_DEPOSITAMT_SPAN").html("");
        $("#NI_FD_DEPOSITAMT").removeClass("requiredIndiMaker");
      }
    }
    //=============================SSFB ACCOUNT =====================================================================
    if (idName === "NI_FD_AMTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#NI_FD_SSFBPRICIPALACCNO").val() === null ||
          $("#NI_FD_SSFBPRICIPALACCNO").val() === "" ||
          $("#NI_FD_SSFBPRICIPALACCNO").val() === "Select"
        ) {
          document.getElementById("NI_FD_SSFBPRICIPALACCNO_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_SSFBPRICIPALACCNO").prop("readonly", false);
          $("#NI_FD_SSFBPRICIPALACCNO").addClass("requiredIndiMaker");
        }
      } else {
        $("#NI_FD_SSFBPRICIPALACCNO_SPAN").html("");
        $("#NI_FD_SSFBPRICIPALACCNO").removeClass("requiredIndiMaker");
        $("#NI_FD_SSFBPRICIPALACCNO").val("").prop("readonly", true);
      }
    }

    //=======================================================================================================================
    if (
      idName === "NI_FD_AMTONMATURITY" ||
      idName === "NI_FD_INTERESTONMATURITY"
    ) {
      if (
        $("#NI_FD_AMTONMATURITY").val() === "2" &&
        ($("#NI_FD_INTERESTONMATURITY").val() === "2" ||
          $("#NI_FD_INTERESTONMATURITY").val() === "0")
      ) {
        if (
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === null ||
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === "" ||
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === "Select"
        ) {
          document.getElementById("NI_FD_EXTACCTRANSFERTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_OTHERBANKACC").val() === null ||
          $("#NI_FD_OTHERBANKACC").val() === "" ||
          $("#NI_FD_OTHERBANKACC").val() === "Select"
        ) {
          document.getElementById("NI_FD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_OTHERBANKACC").addClass(
            "requireNI_RD_EXTACCTRANSFERTYPEdIndiMaker"
          );
        }
        if (
          $("#NI_FD_BRANCH").val() === null ||
          $("#NI_FD_BRANCH").val() === "" ||
          $("#NI_FD_BRANCH").val() === "Select"
        ) {
          document.getElementById("NI_FD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_IFSC").val() === null ||
          $("#NI_FD_IFSC").val() === "" ||
          $("#NI_FD_IFSC").val() === "Select"
        ) {
          document.getElementById("NI_FD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_BENEFICIARYACCTYPE").val() === null ||
          $("#NI_FD_BENEFICIARYACCTYPE").val() === "" ||
          $("#NI_FD_BENEFICIARYACCTYPE").val() === "Select"
        ) {
          document.getElementById("NI_FD_BENEFICIARYACCTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#NI_FD_OTHERBANKACC").prop("readonly", false);
        $("#NI_FD_BRANCH").prop("readonly", false);
        $("#NI_FD_IFSC").prop("readonly", false);
        $("#NI_FD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#NI_FD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else if (
        $("#NI_FD_AMTONMATURITY").val() === "3" &&
        $("#NI_FD_INTERESTONMATURITY").val() === "2"
      ) {
        if (
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === null ||
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === "" ||
          $("#NI_FD_EXTACCTRANSFERTYPE").val() === "Select"
        ) {
          document.getElementById("NI_FD_EXTACCTRANSFERTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_EXTACCTRANSFERTYPE").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_OTHERBANKACC").val() === null ||
          $("#NI_FD_OTHERBANKACC").val() === "" ||
          $("#NI_FD_OTHERBANKACC").val() === "Select"
        ) {
          document.getElementById("NI_FD_OTHERBANKACC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_OTHERBANKACC").addClass(
            "requireNI_RD_EXTACCTRANSFERTYPEdIndiMaker"
          );
        }
        if (
          $("#NI_FD_BRANCH").val() === null ||
          $("#NI_FD_BRANCH").val() === "" ||
          $("#NI_FD_BRANCH").val() === "Select"
        ) {
          document.getElementById("NI_FD_BRANCH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_BRANCH").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_IFSC").val() === null ||
          $("#NI_FD_IFSC").val() === "" ||
          $("#NI_FD_IFSC").val() === "Select"
        ) {
          document.getElementById("NI_FD_IFSC_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_IFSC").addClass("requiredIndiMaker");
        }
        if (
          $("#NI_FD_BENEFICIARYACCTYPE").val() === null ||
          $("#NI_FD_BENEFICIARYACCTYPE").val() === "" ||
          $("#NI_FD_BENEFICIARYACCTYPE").val() === "Select"
        ) {
          document.getElementById("NI_FD_BENEFICIARYACCTYPE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_BENEFICIARYACCTYPE").addClass("requiredIndiMaker");
        }

        $("#NI_FD_OTHERBANKACC").prop("readonly", false);
        $("#NI_FD_BRANCH").prop("readonly", false);
        $("#NI_FD_IFSC").prop("readonly", false);
        $("#NI_FD_EXTACCTRANSFERTYPE").attr("disabled", false);
        $("#NI_FD_BENEFICIARYACCTYPE").attr("disabled", false);
      } else {
        $("#NI_FD_EXTACCTRANSFERTYPE_SPAN").html("");
        $("#NI_FD_EXTACCTRANSFERTYPE").removeClass("requiredIndiMaker");
        $("#NI_FD_OTHERBANKACC_SPAN").html("");
        $("#NI_FD_OTHERBANKACC").removeClass("requiredIndiMaker");
        $("#NI_FD_BRANCH_SPAN").html("");
        $("#NI_FD_BRANCH").removeClass("requiredIndiMaker");
        $("#NI_FD_IFSC_SPAN").html("");
        $("#NI_FD_IFSC").removeClass("requiredIndiMaker");
        $("#NI_FD_BENEFICIARYACCTYPE_SPAN").html("");
        $("#NI_FD_BENEFICIARYACCTYPE").removeClass("requiredIndiMaker");
        $("#NI_FD_OTHERBANKACC").val("").prop("readonly", true);
        $("#NI_FD_BRANCH").val("").prop("readonly", true);
        $("#NI_FD_IFSC").val("").prop("readonly", true);
        $("#NI_FD_EXTACCTRANSFERTYPE").val("Select").attr("disabled", true);
        $("#NI_FD_BENEFICIARYACCTYPE").val("Select").attr("disabled", true);
      }
    }

    //======================================================================================================================
    if (idName === "NI_FD_INTERESTONMATURITY") {
      if ($("#" + idName).val() === "102") {
        if (
          $("#NI_FD_SSFBINTERESTACCNO").val() === null ||
          $("#NI_FD_SSFBINTERESTACCNO").val() === "" ||
          $("#NI_FD_SSFBINTERESTACCNO").val() === "Select"
        ) {
          document.getElementById("NI_FD_SSFBINTERESTACCNO_SPAN").innerHTML =
            "Field cannot be empty";
          $("#NI_FD_SSFBINTERESTACCNO").addClass("requiredIndiMaker");
          $("#NI_FD_SSFBINTERESTACCNO").prop("readonly", false);
        }
      } else {
        $("#NI_FD_SSFBINTERESTACCNO_SPAN").html("");
        $("#NI_FD_SSFBINTERESTACCNO").removeClass("requiredIndiMaker");
        $("#NI_FD_SSFBINTERESTACCNO").val("").prop("readonly", true);
      }
    }
  }
}

function clearErrorMsg(idName) {
  var idNameVal = $("#" + idName).val();
  var spanName = idName + "_SPAN";
  if (
    idNameVal !== "" &&
    idNameVal !== null &&
    idNameVal !== "Select" &&
    idNameVal !== "undefined"
  ) {
    document.getElementById(spanName).innerHTML = "";
  }
}

function getAccRelationshipCodeNew(typeOfAcc) {
  debugger;
  try {
    var masterToCall = new Object();
    masterToCall["ACCOUNT_RELN_CODE"] = $(
      "#" + typeOfAcc + " option:selected"
    ).attr("id");
    var formType = $("#FORM_TYPE").val();
    var addFormType = $("#ADDNL_FORM_TYPE").val();
    $.ajax({
      type: "POST",
      url: "../ACO/MasterDataFetch",
      data: "masterToCall=" + encodeURIComponent(JSON.stringify(masterToCall)),
      async: false,
      success: function (data) {
        //console.log(data);

        //masterToLoad = data;
        console.log("MASTERDATA " + data);
        $("#ACCOUNT_RELN_CODE").html("");
        $("#ACCOUNT_RELN_CODE").html(
          "<option selected='' value='''>Select</option>"
        );
        for (var i in data) {
          var idName = i;
          var idVal = data[i];
          if (formType === "NRI" && addFormType === "Savings") {
            for (var j in idVal) {
              if (j === "A" || j === "B" || j === "MI") {
                $("#" + idName).append(
                  "<option id=" +
                    j +
                    " value='" +
                    j +
                    "'>" +
                    idVal[j] +
                    "</option>"
                );
              }
            }
          } else {
            for (var j in idVal) {
              $("#" + idName).append(
                "<option id=" +
                  j +
                  " value='" +
                  j +
                  "'>" +
                  idVal[j] +
                  "</option>"
              );
            }
          }
        }
        $("#" + idName).val(tableLoader[idName]);
      },
    });
  } catch (e) {
    console.log("Error");
  }
}

function getAccRelationshipCode(typeOfAcc) {
  //debugger;
  try {
    var condition = $("#" + typeOfAcc + " option:selected").attr("id");
    $("#ACCOUNT_RELN_CODE").html("");
    $("#ACCOUNT_RELN_CODE").append(
      "<option selected = '' value=''>Select</option>"
    );
    $.getMaster(
      "ACO_GET_ACCRELATIONCODE",
      [condition],
      function (headers, masterData) {
        if (masterData) {
          if (masterData[0] && masterData[0][3] !== "undefined") {
            for (var i in masterData) {
              $("#ACCOUNT_RELN_CODE").append(
                "<option id=" +
                  masterData[i][1] +
                  " value='" +
                  masterData[i][1] +
                  "'>" +
                  masterData[i][3] +
                  "</option>"
              );
            }
          }
        } else {
          try {
            var condition = $("#" + typeOfAcc + " option:selected").attr("id");
            $("#ACCOUNT_RELN_CODE").html("");
            $("#ACCOUNT_RELN_CODE").append(
              "<option selected = '' value=''>Select</option>"
            );
            $.getMaster(
              "ACO_GET_ACCRELATIONCODE",
              [condition],
              function (headers, masterData) {
                if (masterData) {
                  for (var i in masterData) {
                    $("#ACCOUNT_RELN_CODE").append(
                      "<option id=" +
                        masterData[i][1] +
                        " value='" +
                        masterData[i][1] +
                        "'>" +
                        masterData[i][3] +
                        "</option>"
                    );
                  }
                }
                $("#ACCOUNT_RELN_CODE").val(tableLoader.ACCOUNT_RELN_CODE);
              }
            );
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        $("#ACCOUNT_RELN_CODE").val(tableLoader.ACCOUNT_RELN_CODE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function checkDuplicateBarcode(barcodeId) {
  //debugger;
  var barcodeValue = $("#" + barcodeId).val();
  if (barcodeValue && barcodeValue !== null && barcodeValue !== "") {
    $.getMaster(
      "VALIDATE_BARCODE",
      [barcodeValue],
      function (headers, masterData) {
        if (
          masterData &&
          masterData !== null &&
          masterData !== "" &&
          masterData.length > 0
        ) {
          alert(
            "Barcode Number already exist.Please enter valid barcode Number"
          );
          $("#" + barcodeId).val("");
        }
      }
    );
  }
}

function businessManadtory(occupationId, natuteOfBussId) {
  var occVal = $("#" + occupationId).val();
  var spanName = natuteOfBussId + "_SPAN";
  var className = "";
  if ($.getActivity() === "ACO_Maker") {
    className = "requiredIndiCustTableMakerSave";
  } else if ($.getActivity() === "ACO_Checker") {
    className = "requiredIndiCustTableCheckerSave";
  }

  if (occVal === "B" || occVal === "BW") {
    document.getElementById(spanName).innerHTML = "Field cannot be empty";
    $("#" + natuteOfBussId).addClass(className);
  } else {
    document.getElementById(spanName).innerHTML = "";
    $("#" + natuteOfBussId)
      .removeClass(className)
      .val("");
  }
}

function zoomIn(idName) {
  //debugger;
  $("#zoomIn").click();
  $("#zoomIn").click();
}

function zoomOut(idName) {
  //debugger;
  $("#zoomOut").click();
  $("#zoomOut").click();
}

function validateFormIndi(idName) {
  //debugger;
  var idNameVal = $("#" + idName).val();
  var spanName = idName + "_SPAN";
  //=========================MOBILE NUMBER====================================================
  if (
    idName === "IND_MOBILE" ||
    idName === "M1_NI_CONTACT_MOB" ||
    idName === "NI_CONTACT_MOB"
  ) {
    if ($("#FORM_TYPE").val() !== "NRI") {
      var regex = "^[0-9]{10}$";
      if (!idNameVal.match(regex)) {
        document.getElementById(spanName).innerHTML =
          "Enter valid mobile number.";
        $("#" + idName).val("");
        return false;
      } else if (
        $("#" + idName)
          .val()
          .startsWith("0") ||
        $("#" + idName)
          .val()
          .startsWith("1") ||
        $("#" + idName)
          .val()
          .startsWith("2") ||
        $("#" + idName)
          .val()
          .startsWith("3") ||
        $("#" + idName)
          .val()
          .startsWith("4") ||
        $("#" + idName)
          .val()
          .startsWith("5")
      ) {
        document.getElementById(spanName).innerHTML =
          "Enter valid mobile number.";
        $("#" + idName).val("");
        return false;
      } else {
        document.getElementById(spanName).innerHTML = "";
      }
    }

    if ($("#FORM_TYPE").val() === "NRI") {
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        document.getElementById(spanName).innerHTML = "Field cannot be empty";
      } else {
        document.getElementById(spanName).innerHTML = "";
      }
    }
  }

  //=========================KYC ID PROOF AND ADDRESS PROOF============================================

  //=======================MANDATORY FIELDS IN ALL CASES=============================================================
  else {
    if (
      idNameVal === null ||
      idNameVal === "" ||
      idNameVal === "Select" ||
      idNameVal === "undefined"
    ) {
      //            document.getElementById(spanName).innerHTML = "Field cannot be empty";
      $("#" + spanName).html("Field cannot be empty");
    } else {
      //            document.getElementById(spanName).innerHTML = "";
      $("#" + spanName).html("");
    }
  }
}

function fatcaNonIndiChange(fatcaNIId) {
  var idVal = $("#" + fatcaNIId).val();
  if (idVal === "1") {
    $(".fatcaNonIndi").each(function () {
      $("#" + $(this).attr("id")).attr("disabled", false);
    });
  } else {
    $(".fatcaNonIndi").each(function () {
      $("#" + $(this).attr("id"))
        .attr("disabled", true)
        .val("");
      if ($.getActivity() === "ACO_Maker") {
        document.getElementById("M1_NI_FATCA_PIN_errmsg").innerHTML = "";
      }
      if ($.getActivity() === "ACO_Checker") {
        document.getElementById("NI_FATCA_PIN_errmsg").innerHTML = "";
      }
    });
  }
}

function validateNonIndiPanNumber(panIdNI) {
  //debugger;
  var regex = new RegExp("^[A-Z]{3}[CHFATBLJG]{1}[A-Z]{1}[0-9]{4}[A-Z]{1}$");
  var regexSoleProp = new RegExp("^[A-Z]{3}[P]{1}[A-Z]{1}[0-9]{4}[A-Z]{1}$");
  var panNIVal = $("#NI_PAN_NUMBER").val();
  if ($("#CONSTITUTION").val() === "1") {
    if (!panNIVal.match(regexSoleProp)) {
      document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML =
        "Enter valid Pan Number";
    } else {
      document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML = "";
    }
  } else {
    if (!panNIVal.match(regex)) {
      document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML =
        "Enter valid Pan Number";
    } else {
      document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML = "";
    }
  }
}

function PanCardMandateNI(formFortyNineId, NIPanNumberId) {
  //debugger;
  // alert("hi");
  if (
    $("#" + formFortyNineId).is(":checked") ||
    $("#NI_PAN_LINK").is(":checked")
  ) {
    $("#" + NIPanNumberId)
      .removeClass("requiredNonIndiDVU")
      .val("")
      .attr("disabled", true);
    //$("#NI_NONIND_PAN_RESULT").removeClass("requiredNonIndiDVU").val("");
    document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML = "";
    document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML = "";
  } else {
    $("#" + NIPanNumberId)
      .addClass("requiredNonIndiDVU")
      .attr("disabled", false);
    //$("#NI_NONIND_PAN_RESULT").addClass("requiredNonIndiDVU");
    document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML =
      "Field cannot be empty";
    document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML =
      "Field cannot be empty";
  }
}

function conditionalValidation(idName) {
  debugger;
  var idVal = $("#" + idName).val();
  if ($.isInActivities("ACO_Maker")) {
    var className = "requiredIndiCustTableMaker";
  } else if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    var className = "requiredIndiCustTableChecker";
  }

  //===========================CIF NUMBER==============================================================

  if (idName === "IND_IS_EXISTING") {
    if (idVal === "Existing") {
      if (
        $("#IND_CIF_NUMBER").val() === null ||
        $("#IND_CIF_NUMBER").val() === ""
      ) {
        document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML =
          "Field cannot be empty";
        // $("#IND_CIF_NUMBER").prop("disabled",false);
        $("#IND_CIF_NUMBER").addClass("requiredIndiCustTable");
        //                document.getElementById("CUSTDETAILS_MODIFY").addEventListener("click", customerModification);
      }
    } else {
      document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML = "";
      //  $("#IND_CIF_NUMBER").prop("disabled",true).val("");
      $("#IND_CIF_NUMBER").removeClass("requiredIndiCustTable");
    }
  }

  if (
    idName === "IND_IS_EXISTING" &&
    $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")
  ) {
    if (idVal === "Existing") {
      if (
        $("#IND_CIF_NUMBER").val() === null ||
        $("#IND_CIF_NUMBER").val() === ""
      ) {
        // document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML = "Field cannot be empty";
        $("#IND_CIF_NUMBER").prop("disabled", false);
        //  $("#IND_CIF_NUMBER").addClass("requiredIndiCustTable");
        //                document.getElementById("CUSTDETAILS_MODIFY").addEventListener("click", customerModification);
      }
    } else {
      // document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML = "";
      $("#IND_CIF_NUMBER").prop("disabled", true).val("");
      // $("#IND_CIF_NUMBER").removeClass("requiredIndiCustTable");
    }
  }

  if (idName === "NI_EXISTING_CUST") {
    if (idVal === "Existing") {
      if (
        $("#NI_CIF_NUMBER").val() === null ||
        $("#NI_CIF_NUMBER").val() === ""
      ) {
        document.getElementById("NI_CIF_NUMBER_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_CIF_NUMBER").addClass("requiredNonIndi");
        //                document.getElementById("CUSTDETAILS_MODIFY").addEventListener("click", customerModification);
      }
      $("#NI_LEI_CODE").attr("disabled", true);
    } else {
      document.getElementById("NI_CIF_NUMBER_SPAN").innerHTML = "";
      $("#NI_CIF_NUMBER").removeClass("requiredNonIndi");
      $("#NI_LEI_CODE").attr("disabled", false);
    }
  }
  //=================================NON INDI PAN NUMBER=======================================================

  if (idName === "NI_PAN_NUMBER") {
    if (idVal !== null && idVal !== "" && idVal !== "undefined") {
      if (
        $("#NI_NONIND_PAN_RESULT").val() === null ||
        $("#NI_NONIND_PAN_RESULT").val() === "" ||
        $("#NI_NONIND_PAN_RESULT").val() === "Select"
      ) {
        document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_NONIND_PAN_RESULT").addClass("requiredNonIndiDVU");
      }
    } else {
      document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML = "";
      $("#NI_NONIND_PAN_RESULT").removeClass("requiredNonIndiDVU");
    }
  }

  //================================PASSPORT AND RESIDENTIAL STATUS CONDITION============================================
  if (idName === "IND_RESIDENTIAL_STATUS") {
    if (
      $("#IND_RESIDENTIAL_STATUS").val() === "0" ||
      $("#IND_RESIDENTIAL_STATUS").val() === "3" ||
      $("#IND_RESIDENTIAL_STATUS").val() === "4"
    ) {
      if (
        $("#IND_PASSPORT").val() === "" ||
        $("#IND_PASSPORT").val() === null ||
        $("#IND_PASSPORT").val() === "undefined"
      ) {
        document.getElementById("IND_PASSPORT_SPAN").innerHTML =
          "Field cannot be empty";
        $("#IND_PASSPORT").addClass("requiredIndiCustTableDVU");
      }
    } else {
      document.getElementById("IND_PASSPORT_SPAN").innerHTML = "";
      $("#IND_PASSPORT").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_PASSPORT_ISSUE_DATE_SPAN").innerHTML = "";
      $("#IND_PASSPORT_ISSUE_DATE").removeClass("requiredIndiCustTableDVU");
      document.getElementById("IND_PASSPORT_EXPIRY_DATE_SPAN").innerHTML = "";
      $("#IND_PASSPORT_EXPIRY_DATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  //==============================KYC ID PROOF===============================================================
  if (idName === "KYC_NAME_ID_PROOF") {
    if (idVal === "PASSPORT" || idVal === "DRIVING LICENSE") {
      if (
        $("#KYC_EXPIRYDATE").val() === null ||
        $("#KYC_EXPIRYDATE").val() === "" ||
        $("#KYC_EXPIRYDATE").val() === "undefined"
      ) {
        document.getElementById("KYC_EXPIRYDATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#KYC_EXPIRYDATE").addClass("requiredIndiCustTableDVU");
      }
    } else {
      document.getElementById("KYC_EXPIRYDATE_SPAN").innerHTML = "";
      $("#KYC_EXPIRYDATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  //==============================KYC ADDRESS PROOF===============================================================
  if (idName === "KYC_NAME_ADDR_PROOF") {
    if (idVal === "PASSPT" || idVal === "DRIVLI") {
      if (
        $("#KYC_ADDPROOF_EXPDATE").val() === null ||
        $("#KYC_ADDPROOF_EXPDATE").val() === "" ||
        $("#KYC_ADDPROOF_EXPDATE").val() === "undefined"
      ) {
        document.getElementById("KYC_ADDPROOF_EXPDATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#KYC_ADDPROOF_EXPDATE").addClass("requiredIndiCustTableDVU");
      }
    } else {
      document.getElementById("KYC_ADDPROOF_EXPDATE_SPAN").innerHTML = "";
      $("#KYC_ADDPROOF_EXPDATE").removeClass("requiredIndiCustTableDVU");
    }
  }

  //=====================FUNDING DETAILS====================================================================
  if ($.isInActivities("ACO_Maker")) {
    if (idName === "M1_NI_INITIALPAYMENT_MADE") {
      if (idVal === "Yes") {
        $(".initPayment").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", false);
        });
        document.getElementById("M1_NI_INITIALPAYMENT_TRANSID_SPAN").innerHTML =
          "Field cannot be empty";
        $("#M1_NI_INITIALPAYMENT_TRANSID").addClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_INITIALPAYMENT_TRANSDATE_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_INITIALPAYMENT_TRANSDATE").addClass("requiredIndiMaker"); //M1_NI_INITIALPAYMENT_VALUEDATE
        //Amir Change
        document.getElementById(
          "M1_NI_INITIALPAYMENT_VALUEDATE_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_INITIALPAYMENT_VALUEDATE").addClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_INITIALPAYMENT_TRANSAMT_SPAN"
        ).innerHTML = "Field cannot be empty";
        $("#M1_NI_INITIALPAYMENT_TRANSAMT").addClass("requiredIndiMaker");
        //document.getElementById("M1_NI_INITIALPAYMENT_FUNDACC_SPAN").innerHTML = "Field cannot be empty";
        $("#M1_NI_INITIALPAYMENT_FUNDACC")
          .val("270210020001")
          .addClass("changed");
      } else {
        $(".initPayment").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", true);
        });
        document.getElementById("M1_NI_INITIALPAYMENT_TRANSID_SPAN").innerHTML =
          "";
        $("#M1_NI_INITIALPAYMENT_TRANSID").removeClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_INITIALPAYMENT_TRANSDATE_SPAN"
        ).innerHTML = "";
        $("#M1_NI_INITIALPAYMENT_TRANSDATE").removeClass("requiredIndiMaker");
        //Amir Change
        document.getElementById(
          "M1_NI_INITIALPAYMENT_VALUEDATE_SPAN"
        ).innerHTML = "";
        $("#M1_NI_INITIALPAYMENT_VALUEDATE").removeClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_INITIALPAYMENT_TRANSAMT_SPAN"
        ).innerHTML = "";
        $("#M1_NI_INITIALPAYMENT_TRANSAMT").removeClass("requiredIndiMaker");
        //document.getElementById("M1_NI_INITIALPAYMENT_FUNDACC_SPAN").innerHTML = "";
        //$("#M1_NI_INITIALPAYMENT_FUNDACC").removeClass("requiredIndiMaker");
      }
    }
  }
  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "NI_INITIALPAYMENT_MADE") {
      if (idVal === "Yes") {
        $(".initPayment").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", false);
        });
        document.getElementById("NI_INITIALPAYMENT_TRANSID_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_INITIALPAYMENT_TRANSID").addClass("requiredIndiChecker");
        document.getElementById("NI_INITIALPAYMENT_TRANSDATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_INITIALPAYMENT_TRANSDATE").addClass("requiredIndiChecker"); //NI_INITIALPAYMENT_VALUEDATE
        //Amir Change
        document.getElementById("NI_INITIALPAYMENT_VALUEDATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_INITIALPAYMENT_VALUEDATE").addClass("requiredIndiChecker");
        document.getElementById("NI_INITIALPAYMENT_TRANSAMT_SPAN").innerHTML =
          "Field cannot be empty";
        $("#NI_INITIALPAYMENT_TRANSAMT").addClass("requiredIndiChecker");
        //document.getElementById("NI_INITIALPAYMENT_FUNDACC_SPAN").innerHTML = "Field cannot be empty";
        $("#NI_INITIALPAYMENT_FUNDACC").val("270210020001").addClass("changed");
      } else {
        $(".initPayment").each(function () {
          var id = $(this).attr("id");
          $("#" + id)
            .attr("disabled", true)
            .val("");
        });
        document.getElementById("NI_INITIALPAYMENT_TRANSID_SPAN").innerHTML =
          "";
        $("#NI_INITIALPAYMENT_TRANSID").removeClass("requiredIndiChecker");
        document.getElementById("NI_INITIALPAYMENT_TRANSDATE_SPAN").innerHTML =
          "";
        $("#NI_INITIALPAYMENT_TRANSDATE").removeClass("requiredIndiChecker");
        //Amir Change
        document.getElementById("NI_INITIALPAYMENT_VALUEDATE_SPAN").innerHTML =
          "";
        $("#NI_INITIALPAYMENT_VALUEDATE").removeClass("requiredIndiChecker");
        document.getElementById("NI_INITIALPAYMENT_TRANSAMT_SPAN").innerHTML =
          "";
        $("#NI_INITIALPAYMENT_TRANSAMT").removeClass("requiredIndiChecker");
        //document.getElementById("NI_INITIALPAYMENT_FUNDACC_SPAN").innerHTML = "";
        //$("#NI_INITIALPAYMENT_FUNDACC").removeClass("requiredIndiChecker");
      }
    }
  }

  //=============================NOMINATION DETAILS===========================================================
  if ($.isInActivities("ACO_Maker")) {
    if (idName === "M1_NI_IS_NOMINATION_AVAILED") {
      if (idVal === "Yes") {
        if (
          $("#M1_NI_NOMINATIONDET_FIRST_NAME").val() === null ||
          $("#M1_NI_NOMINATIONDET_FIRST_NAME").val() === ""
        ) {
          $("#M1_NI_NOMINATIONDET_FIRST_NAME_SPAN").html(
            "Field cannot be empty"
          );
          $("#M1_NI_NOMINATIONDET_FIRST_NAME").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_NOMINATIONDET_LAST_NAME").val() === null ||
          $("#M1_NI_NOMINATIONDET_LAST_NAME").val() === ""
        ) {
          $("#M1_NI_NOMINATIONDET_LAST_NAME_SPAN").html(
            "Field cannot be empty"
          );
          $("#M1_NI_NOMINATIONDET_LAST_NAME").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_NOMINATIONDET_ADD1").val() === null ||
          $("#M1_NI_NOMINATIONDET_ADD1").val() === ""
        ) {
          $("#M1_NI_NOMINATIONDET_ADD1_SPAN").html("Field cannot be empty");
          $("#M1_NI_NOMINATIONDET_ADD1").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_NOMINATIONDET_RELNWDEPOSITOR").val() === null ||
          $("#M1_NI_NOMINATIONDET_RELNWDEPOSITOR").val() === ""
        ) {
          $("#M1_NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN").html(
            "Field cannot be empty"
          );
          $("#M1_NI_NOMINATIONDET_RELNWDEPOSITOR").addClass(
            "requiredIndiMaker"
          );
        }
        if (
          $("#M1_NI_NOMINATIONDET_DOB").val() === null ||
          $("#M1_NI_NOMINATIONDET_DOB").val() === "" ||
          $("#M1_NI_NOMINATIONDET_DOB").val() === "undefined"
        ) {
          $("#M1_NI_NOMINATIONDET_DOB_SPAN").html("Field cannot be empty");
          $("#M1_NI_NOMINATIONDET_DOB").addClass("requiredIndiMaker");
        }
        if (
          $("#M1_NI_NOMINATIONDET_NAMEPRINTED").val() === null ||
          $("#M1_NI_NOMINATIONDET_NAMEPRINTED").val() === ""
        ) {
          $("#M1_NI_NOMINATIONDET_NAMEPRINTED_SPAN").html(
            "Field cannot be empty"
          );
          $("#M1_NI_NOMINATIONDET_NAMEPRINTED").addClass("requiredIndiMaker");
        }

        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", false);
        });
      } else {
        document.getElementById(
          "M1_NI_NOMINATIONDET_FIRST_NAME_SPAN"
        ).innerHTML = "";
        $("#M1_NI_NOMINATIONDET_FIRST_NAME").removeClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_NOMINATIONDET_LAST_NAME_SPAN"
        ).innerHTML = "";
        $("#M1_NI_NOMINATIONDET_LAST_NAME").removeClass("requiredIndiMaker");
        document.getElementById("M1_NI_NOMINATIONDET_ADD1_SPAN").innerHTML = "";
        $("#M1_NI_NOMINATIONDET_ADD1").removeClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN"
        ).innerHTML = "";
        $("#M1_NI_NOMINATIONDET_RELNWDEPOSITOR").removeClass(
          "requiredIndiMaker"
        );
        document.getElementById("M1_NI_NOMINATIONDET_DOB_SPAN").innerHTML = "";
        $("#M1_NI_NOMINATIONDET_DOB").removeClass("requiredIndiMaker");
        document.getElementById(
          "M1_NI_NOMINATIONDET_NAMEPRINTED_SPAN"
        ).innerHTML = "";
        $("#M1_NI_NOMINATIONDET_NAMEPRINTED").removeClass("requiredIndiMaker");
        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", true);
        });
      }
    }
  }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "NI_IS_NOMINATION_AVAILED") {
      if (idVal === "Yes") {
        if (
          $("#NI_NOMINATIONDET_FIRST_NAME").val() === null ||
          $("#NI_NOMINATIONDET_FIRST_NAME").val() === ""
        ) {
          $("#NI_NOMINATIONDET_FIRST_NAME_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_FIRST_NAME").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_LAST_NAME").val() === null ||
          $("#NI_NOMINATIONDET_LAST_NAME").val() === ""
        ) {
          $("#NI_NOMINATIONDET_LAST_NAME_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_LAST_NAME").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_ADD1").val() === null ||
          $("#NI_NOMINATIONDET_ADD1").val() === ""
        ) {
          $("#NI_NOMINATIONDET_ADD1_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_ADD1").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").val() === null ||
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").val() === ""
        ) {
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN").html(
            "Field cannot be empty"
          );
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_DOB").val() === null ||
          $("#NI_NOMINATIONDET_DOB").val() === "" ||
          $("#NI_NOMINATIONDET_DOB").val() === "undefined"
        ) {
          $("#NI_NOMINATIONDET_DOB_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_DOB").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_NAMEPRINTED").val() === null ||
          $("#NI_NOMINATIONDET_NAMEPRINTED").val() === ""
        ) {
          $("#NI_NOMINATIONDET_NAMEPRINTED_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_NAMEPRINTED").addClass("requiredIndiChecker");
        }

        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", false);
        });
      } else {
        document.getElementById("NI_NOMINATIONDET_FIRST_NAME_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_FIRST_NAME").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_LAST_NAME_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_LAST_NAME").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_ADD1_SPAN").innerHTML = "";
        $("#NI_NOMINATIONDET_ADD1").removeClass("requiredIndiChecker");
        document.getElementById(
          "NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN"
        ).innerHTML = "";
        $("#NI_NOMINATIONDET_RELNWDEPOSITOR").removeClass(
          "requiredIndiChecker"
        );
        document.getElementById("NI_NOMINATIONDET_DOB_SPAN").innerHTML = "";
        $("#NI_NOMINATIONDET_DOB").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_NAMEPRINTED_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_NAMEPRINTED").removeClass("requiredIndiChecker");
        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", true);
        });
      }
    }
  }

  if ($.isInActivities("ACO_QC")) {
    if (idName === "NI_IS_NOMINATION_AVAILED") {
      if (idVal === "Yes") {
        if (
          $("#NI_NOMINATIONDET_FIRST_NAME").val() === null ||
          $("#NI_NOMINATIONDET_FIRST_NAME").val() === ""
        ) {
          $("#NI_NOMINATIONDET_FIRST_NAME_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_FIRST_NAME").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_LAST_NAME").val() === null ||
          $("#NI_NOMINATIONDET_LAST_NAME").val() === ""
        ) {
          $("#NI_NOMINATIONDET_LAST_NAME_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_LAST_NAME").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_ADD1").val() === null ||
          $("#NI_NOMINATIONDET_ADD1").val() === ""
        ) {
          $("#NI_NOMINATIONDET_ADD1_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_ADD1").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").val() === null ||
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").val() === ""
        ) {
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN").html(
            "Field cannot be empty"
          );
          $("#NI_NOMINATIONDET_RELNWDEPOSITOR").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_DOB").val() === null ||
          $("#NI_NOMINATIONDET_DOB").val() === "" ||
          $("#NI_NOMINATIONDET_DOB").val() === "undefined"
        ) {
          $("#NI_NOMINATIONDET_DOB_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_DOB").addClass("requiredIndiChecker");
        }
        if (
          $("#NI_NOMINATIONDET_NAMEPRINTED").val() === null ||
          $("#NI_NOMINATIONDET_NAMEPRINTED").val() === ""
        ) {
          $("#NI_NOMINATIONDET_NAMEPRINTED_SPAN").html("Field cannot be empty");
          $("#NI_NOMINATIONDET_NAMEPRINTED").addClass("requiredIndiChecker");
        }

        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", false);
        });
      } else {
        document.getElementById("NI_NOMINATIONDET_FIRST_NAME_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_FIRST_NAME").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_LAST_NAME_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_LAST_NAME").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_ADD1_SPAN").innerHTML = "";
        $("#NI_NOMINATIONDET_ADD1").removeClass("requiredIndiChecker");
        document.getElementById(
          "NI_NOMINATIONDET_RELNWDEPOSITOR_SPAN"
        ).innerHTML = "";
        $("#NI_NOMINATIONDET_RELNWDEPOSITOR").removeClass(
          "requiredIndiChecker"
        );
        document.getElementById("NI_NOMINATIONDET_DOB_SPAN").innerHTML = "";
        $("#NI_NOMINATIONDET_DOB").removeClass("requiredIndiChecker");
        document.getElementById("NI_NOMINATIONDET_NAMEPRINTED_SPAN").innerHTML =
          "";
        $("#NI_NOMINATIONDET_NAMEPRINTED").removeClass("requiredIndiChecker");
        $(".nominationDetails").each(function () {
          var id = $(this).attr("id");
          $("#" + id).attr("disabled", true);
        });
      }
    }
  }

  //====================FATCA VALIDATION================================================================

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "FATCA_APPLICABLE") {
      if (idVal === "1") {
        if (
          $("#CITYOFBIRTH").val() === null ||
          $("#CITYOFBIRTH").val() === ""
        ) {
          document.getElementById("CITYOFBIRTH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#CITYOFBIRTH").addClass(className);
        }

        if (
          $("#COUNTRYOFBIRTH").val() === null ||
          $("#COUNTRYOFBIRTH").val() === "" ||
          $("#COUNTRYOFBIRTH").val() === "Select"
        ) {
          document.getElementById("COUNTRYOFBIRTH_SPAN").innerHTML =
            "Field cannot be empty";
          $("#COUNTRYOFBIRTH").addClass(className);
        }

        if (
          $("#ADD_TYPE_FATCA").val() === null ||
          $("#ADD_TYPE_FATCA").val() === "" ||
          $("#ADD_TYPE_FATCA").val() === "Select"
        ) {
          document.getElementById("ADD_TYPE_FATCA_SPAN").innerHTML =
            "Field cannot be empty";
          $("#ADD_TYPE_FATCA").addClass(className);
        }

        if (
          $("#FATCA_ADD_1").val() === null ||
          $("#FATCA_ADD_1").val() === "" ||
          $("#FATCA_ADD_1").val() === "Select"
        ) {
          document.getElementById("FATCA_ADD_1_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_ADD_1").addClass(className);
        }

        if (
          $("#FATCA_CITY").val() === null ||
          $("#FATCA_CITY").val() === "" ||
          $("#FATCA_CITY").val() === "Select"
        ) {
          document.getElementById("FATCA_CITY_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_CITY").addClass(className);
        }

        if (
          $("#FATCA_COUNTRY").val() === null ||
          $("#FATCA_COUNTRY").val() === "" ||
          $("#FATCA_COUNTRY").val() === "Select"
        ) {
          document.getElementById("FATCA_COUNTRY_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_COUNTRY").addClass(className);
        }

        if (
          $("#FATCA_STATE").val() === null ||
          $("#FATCA_STATE").val() === "" ||
          $("#FATCA_STATE").val() === "Select"
        ) {
          document.getElementById("FATCA_STATE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_STATE").addClass(className);
        }

        if (
          $("#FATCA_PINCODE").val() === null ||
          $("#FATCA_PINCODE").val() === "" ||
          $("#FATCA_PINCODE").val() === "Select"
        ) {
          document.getElementById("FATCA_PINCODE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_PINCODE").addClass(className);
        }

        if (
          $("#FATCA_FATHERNAME").val() === null ||
          $("#FATCA_FATHERNAME").val() === "" ||
          $("#FATCA_FATHERNAME").val() === "Select"
        ) {
          document.getElementById("FATCA_FATHERNAME_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_FATHERNAME").addClass(className);
        }

        if (
          $("#FATCA_ADDRESS_TAX_PURPOSE").val() === null ||
          $("#FATCA_ADDRESS_TAX_PURPOSE").val() === "" ||
          $("#FATCA_ADDRESS_TAX_PURPOSE").val() === "Select"
        ) {
          document.getElementById("FATCA_ADDRESS_TAX_PURPOSE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#FATCA_ADDRESS_TAX_PURPOSE").addClass(className);
        }

        $(".fatcaIndi").each(function () {
          $("#" + $(this).attr("id")).attr("disabled", false);
        });
      } else {
        document.getElementById("CITYOFBIRTH_SPAN").innerHTML = "";
        $("#CITYOFBIRTH").removeClass(className);
        document.getElementById("COUNTRYOFBIRTH_SPAN").innerHTML = "";
        $("#COUNTRYOFBIRTH").removeClass(className);
        document.getElementById("ADD_TYPE_FATCA_SPAN").innerHTML = "";
        $("#ADD_TYPE_FATCA").removeClass(className);
        document.getElementById("FATCA_ADD_1_SPAN").innerHTML = "";
        $("#FATCA_ADD_1").removeClass(className);
        document.getElementById("FATCA_CITY_SPAN").innerHTML = "";
        $("#FATCA_CITY").removeClass(className);
        document.getElementById("FATCA_COUNTRY_SPAN").innerHTML = "";
        $("#FATCA_COUNTRY").removeClass(className);
        document.getElementById("FATCA_STATE_SPAN").innerHTML = "";
        $("#FATCA_STATE").removeClass(className);
        document.getElementById("FATCA_STATE_SPAN").innerHTML = "";
        $("#FATCA_STATE").removeClass(className);
        document.getElementById("FATCA_PINCODE_SPAN").innerHTML = "";
        $("#FATCA_PINCODE").removeClass(className);
        document.getElementById("FATCA_FATHERNAME_SPAN").innerHTML = "";
        $("#FATCA_FATHERNAME").removeClass(className);
        document.getElementById("FATCA_ADDRESS_TAX_PURPOSE_SPAN").innerHTML =
          "";
        $("#FATCA_ADDRESS_TAX_PURPOSE").removeClass(className);
        $(".fatcaIndi").each(function () {
          $("#" + $(this).attr("id"))
            .attr("disabled", true)
            .val("");
        });
      }
    }
  }

  //POA ISSUE MANADATORY FOR PASSPORT AND DRIVING LICENSE
  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "POA_TYPE") {
      if ($("#POA_TYPE").val() === "2" || $("#POA_TYPE").val() === "3") {
        document.getElementById("POA_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#POA_ISSUE_DATE").addClass(className);
        document.getElementById("POA_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty";
        $("#POA_EXPIRY_DATE").addClass(className);
      } else {
        document.getElementById("POA_ISSUE_DATE_SPAN").innerHTML = "";
        $("#POA_ISSUE_DATE").removeClass(className);
        document.getElementById("POA_EXPIRY_DATE_SPAN").innerHTML = "";
        $("#POA_EXPIRY_DATE").removeClass(className);
      }
    }
  }

  //====================STAFF CUSTOMER VALIDATION=================================================

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (idName === "SALARYACC_IS_STAFF") {
      if (idVal === "3") {
        $("#EMP_CODE").prop("disabled", false);
        $("#STAFF_ID").prop("disabled", false);
        if ($("#EMP_CODE").val() === null || $("#EMP_CODE").val() === "") {
          document.getElementById("EMP_CODE_SPAN").innerHTML =
            "Field cannot be empty";
          $("#EMP_CODE").addClass(className);
        }
        if ($("#STAFF_ID").val() === null || $("#STAFF_ID").val() === "") {
          document.getElementById("STAFF_ID_SPAN").innerHTML =
            "Field cannot be empty";
          $("#STAFF_ID").addClass(className);
        }
      } else {
        $("#EMP_CODE").prop("disabled", true).val("");
        $("#STAFF_ID").prop("disabled", true).val("");
        document.getElementById("EMP_CODE_SPAN").innerHTML = "";
        $("#EMP_CODE").removeClass(className);
        document.getElementById("STAFF_ID_SPAN").innerHTML = "";
        $("#STAFF_ID").removeClass(className);
      }
    }
  }
  //==========================OFFICE ADDRESS MANDATORY =================================================

  if (idName === "ADDRESS_TYPE") {
    if (idVal === "O") {
      if (
        $("#ADD_LINE1_OFF").val() === null ||
        $("#ADD_LINE1_OFF").val() === "" ||
        $("#ADD_LINE1_OFF").val() === undefined ||
        $("#ADD_LINE1_OFF").val() === "Select"
      ) {
        document.getElementById("ADD_LINE1_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#ADD_LINE1_OFF").addClass(className);
      }
    } else {
      document.getElementById("ADD_LINE1_OFF_SPAN").innerHTML = "";
      $("#ADD_LINE1_OFF").removeClass(className);
    }
  }
}

function fillDetails() {
  //debugger;
  //===========================KYC ID PROOF================================================
  if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "1") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_PASSPORT").val());
    $("#KYC_EXPIRYDATE").val($("#IND_PASSPORT_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "4") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_RATION_CARD").val());
    $("#KYC_EXPIRYDATE").val($("#IND_RATIONCARD_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "17") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_NREGA_CARD").val());
    $("#KYC_EXPIRYDATE").val($("#IND_NREGA_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "17") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_NREGA_CARD").val());
    $("#KYC_EXPIRYDATE").val($("#IND_NREGA_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "5") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_DRIVING_LICENSE").val());
    $("#KYC_EXPIRYDATE").val($("#IND_DRLICENSE_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "6") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_PAN_NUMBER").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "3") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_AADHAR_NUMBER").val());
  } else if ($("#KYC_NAME_ID_PROOF").val().toUpperCase() === "VOTER ID") {
    $("#KYC_NUM_ID_PROOF").val($("#IND_VOTERS_ID").val());
  }
  //===================KYC ADDRESS PROOF======================================================
  if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "PASSPT") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_PASSPORT").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_PASSPORT_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val() === "Ration") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_RATION_CARD").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_RATIONCARD_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "NREGA") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_NREGA_CARD").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_NREGA_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "DRIVLI") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_DRIVING_LICENSE").val());
    $("#KYC_ADDPROOF_EXPDATE").val($("#IND_DRLICENSE_EXPIRY_DATE").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "PAN") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_PAN_NUMBER").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "AADRCD") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_AADHAR_NUMBER").val());
  } else if ($("#KYC_NAME_ADDR_PROOF").val().toUpperCase() === "VTERID") {
    $("#KYC_NUM_ADDR_PROOF").val($("#IND_VOTERS_ID").val());
  }
}

function checkDuplicateCif(cifId) {
  //debugger;
  var cifValue = $("#" + cifId).val();
  $("#CUSTDETAILS_TBODY tr").each(function () {
    $(this)
      .find("td")
      .each(function (index) {
        if ($(this).attr("class") === "IND_CIF_NUMBER") {
          var cifNumber = $(this).text();
          if (cifNumber === cifValue) {
            alert(
              "Cif Number already exists in the table for Customer " +
                (index - 1)
            );
            $("#" + cifId).val("");
          }
        }
      });
  });
}

function linkForAuthorised(linkPanWithPropCust) {
  //debugger;
  if ($("#" + linkPanWithPropCust).is(":checked")) {
    if ($("#IND_RELATIONSHIP_CODE").val() !== "15") {
      $("#LINK_PAN_PROP_CUST_SPAN")
        .html("Field can be checked only for Authorised Signatory Cases")
        .show()
        .fadeOut(6000);
      //document.getElementById("LINK_PAN_PROP_CUST_SPAN").innerHTML = "Field can be checked for Authorised Signatory Cases";
      $("#" + linkPanWithPropCust).prop("checked", false);
    } else {
      document.getElementById("LINK_PAN_PROP_CUST_SPAN").innerHTML = "";
    }
  }
}

function NIPanNonMand(linkPanWithPropNI) {
  if (
    $("#" + linkPanWithPropNI).is(":checked") ||
    $("#FORM_FORTY_NINE_A").is(":checked")
  ) {
    $("#NI_PAN_NUMBER")
      .removeClass("requiredNonIndiDVU")
      .val("")
      .prop("disabled", true);
    $("#NI_NONIND_PAN_RESULT").removeClass("requiredNonIndiDVU").val("");
    document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML = "";
    document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML = "";
  } else {
    $("#NI_PAN_NUMBER").addClass("requiredNonIndiDVU").prop("disabled", false);
    $("#NI_NONIND_PAN_RESULT").addClass("requiredNonIndiDVU");
    document.getElementById("NI_PAN_NUMBER_SPAN").innerHTML =
      "Field cannot be empty";
    document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML =
      "Field cannot be empty";
  }
}

function removeErrorMsg(idName) {
  //debugger;
  var idVal = $("#" + idName).val();
  var spanName = idName + "_SPAN";
  var dob = $("#IND_DOB").val();
  if (
    idVal !== null &&
    idVal !== "" &&
    idVal !== "undefined" &&
    idVal !== "Select"
  ) {
    document.getElementById(spanName).innerHTML = "";
    if ($.isInActivities("ACO_DVU")) {
      $("#" + idName).removeClass("requiredIndiDVU");
      $("#" + idName).removeClass("requiredIndiCustTableDVU");
    }
    if ($.isInActivities("ACO_Maker")) {
      $("#" + idName).removeClass("requiredIndiMaker");
      $("#" + idName).removeClass("requiredIndiCustTableMaker");
    }
    if ($.isInActivities("ACO_Checker,ACO_Data_Correction")) {
      $("#" + idName).removeClass("requiredIndiChecker");
      $("#" + idName).removeClass("requiredIndiCustTableChecker");
    }
  }

  if (idName === "IND_LINK_PAN_GUARDIAN") {
    if (dob !== null && dob !== "" && dob) {
      var dobSplit = dob.split("-");
      var dobYear = dobSplit[2];
      var currentDate = new Date();
      var currentYear = currentDate.getFullYear();
      if (currentYear - dobYear < 18) {
        if (
          tableLoader.ACCOUNT_RELN_CODE !== "MA" ||
          tableLoader.SCHEME_CODE === "1016"
        ) {
          if (!$("#IND_LINK_PAN_GUARDIAN").is(":checked")) {
            document.getElementById("IND_LINK_PAN_GUARDIAN_SPAN").innerHTML =
              "Field should be checked for minor Customer";
            $("#IND_LINK_PAN_GUARDIAN").addClass("requiredIndiCustTableDVU");
            $("#IND_LINK_PAN_GUARDIAN").addClass(
              "requiredIndiCustTableDVUSave"
            );
          }
        }
      } else {
        if ($("#IND_LINK_PAN_GUARDIAN").is(":checked")) {
          document.getElementById("IND_LINK_PAN_GUARDIAN_SPAN").innerHTML =
            "Field should be checked for minor Customer";
          $("#IND_LINK_PAN_GUARDIAN").removeClass("requiredIndiCustTableDVU");
          $("#IND_LINK_PAN_GUARDIAN").removeClass(
            "requiredIndiCustTableDVUSave"
          );
        }
      }
    }
  }
}

function fnOpenSection(accSection) {
  //debugger;
  accSection.classList.toggle("active");
  var panel = accSection.nextElementSibling;
  if (panel.style.maxHeight) {
    panel.style.maxHeight = null;
  } else {
    panel.style.maxHeight = panel.scrollHeight + "px";
  }
}

function populateStateList(countryId, stateId, statePerm) {
  //debugger;
  var countryVal = $("#" + countryId + " option:selected").attr("id");
  //console.log("countryid : "+countryVal);
  $("#" + stateId).html("");
  $("#" + stateId).append(
    "<option selected = 'Select' value=''>Select</option>"
  );
  if (
    countryId === "M1_NIOFFC_COUNTRY" ||
    countryId === "NIOFFC_COUNTRY" ||
    countryId === "COUNTRY_RESI"
  ) {
    $("#" + statePerm).html("");
    $("#" + statePerm).append(
      "<option selected = 'Select' value=''>Select</option>"
    );
  }

  if (
    countryVal !== "" &&
    countryVal !== null &&
    countryVal !== "undefined" &&
    countryVal !== undefined
  ) {
    $.getMaster("GET_STATE_LIST", [countryVal], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
          if (
            countryId === "M1_NIOFFC_COUNTRY" ||
            countryId === "NIOFFC_COUNTRY" ||
            countryId === "COUNTRY_RESI" ||
            countryId === "M1_NI_NOMINATIONDET_COUNTRY"
          ) {
            $("#" + statePerm).append(
              "<option id='" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }

        $("#" + stateId).attr("readonly", false);
      }

      $("#" + stateId).val(tableLoader[stateId]);
    });
  }
}

var XMLData;
var x;
function parseXML(data) {
  //debugger;
  var process = jQuery(data);
  XMLData = process;
  var activity = process.find("activity[id='" + $.getActivity() + "']");
  var categoryListDemo = process.find("category-list");
  if ($.type(activity.attr("sub-categories")) !== "undefined") {
    var subCategoryList = $.trim(activity.attr("sub-categories"))
      .replace(/[ \n\t\r]+/g, "")
      .split(",");
    for (var i in subCategoryList) {
      if (subCategoryList[i] !== "" && subCategoryList[i] !== null) {
        var subCategory = subCategoryList[i];
        categoryListDemo.children("#" + subCategory).each(function () {
          var subPanel = $(this);
          var columnList = $.trim(subPanel.text())
            .replace(/[ \n\t\r]+/g, "")
            .split(",");
          x = columnList;
          for (var i in columnList) {
            if (subCategory !== "" && subCategory !== null) {
              $("#" + subCategory).append(
                "<option id = " +
                  subCategory +
                  " value= " +
                  columnList[i].replace(/_/g, " ") +
                  ">" +
                  columnList[i].replace(/_/g, " ") +
                  "</option>"
              );
            }
          }
        });
      }
    }
  }

  //------------------TO LOAD DATA ON ONLOAD IF CALLED FROM XML FILE-------------------------------------------------
  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_Maker,ACO_DVU,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    //debugger;
    // alert("hi");
    $("#ADDNL_FORM_TYPE").val(tableLoader.ADDNL_FORM_TYPE);
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER").val(
      tableLoader.OTHERDETAILS_TOTAL_ACC_HOLDER
    );
    $("#ACTIVATION_PRIORITY").val(tableLoader.ACTIVATION_PRIORITY);
    $("#CHANNEL").val(tableLoader.CHANNEL);
    $("#CUSTOMER_TYPE").val(tableLoader.CUSTOMER_TYPE);
    $("#IND_IS_EXISTING").val(tableLoader.IND_IS_EXISTING);
    $("#NI_CUSTOMER_TYPE").val(tableLoader.NI_CUSTOMER_TYPE);
    $("#OTHERDETAILS_VENDOR").val(tableLoader.OTHERDETAILS_VENDOR);
    $("#NI_EXISTING_CUST").val(tableLoader.NI_EXISTING_CUST);
  }
}

function getCustomerRelCode(AccountRelCode) {
  //debugger;
  try {
    $.getMaster(
      "ACO_GET_CUSTRELCODE_FINACLE",
      [$("#" + AccountRelCode).val()],
      function (headers, masterData) {
        if (masterData) {
          $("#IND_RELATIONSHIP_CODE").html("");
          $("#IND_RELATIONSHIP_CODE").html(
            "<option selected='' value=''>Select</option>"
          );
          for (var i in masterData) {
            //                    if (masterData[i][0] === "1") {
            //                        $("#" + custRelCode).append("<option id='" + masterData[i][0] + "'  value='" + masterData[i][0] + "' hidden>" + masterData[i][1] + "</option>");
            //                    } else {
            //                        $("#" + custRelCode).append("<option id='" + masterData[i][0] + "'  value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
            //
            //                    }
            if (
              $("#FORM_TYPE").val() === "Individual" ||
              $("#FORM_TYPE").val() === "NRI"
            ) {
              if ($("#" + AccountRelCode).val() === "B") {
                var custRelValue = masterData[i][0];
                var custRelName = masterData[i][1];
                //                            if (custRelValue === "1") {
                //                                custRelName = "JOINT ACCOUNT HOLDER PRIMARY";
                //                            } else if (custRelValue === "2") {
                //                                custRelName = "JOINT ACCOUNT HOLDER SECONDARY";
                //                            }

                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    custRelValue +
                    "'  value='" +
                    custRelValue +
                    "'>" +
                    custRelName +
                    "</option>"
                );
              } else {
                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            } else if ($("#FORM_TYPE").val() === "Non Individual") {
              if (masterData[i][0] === "1") {
                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "' >" +
                    masterData[i][1] +
                    "</option>"
                );
              } else {
                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          }
        }

        $("#IND_RELATIONSHIP_CODE").val(tableLoader.IND_RELATIONSHIP_CODE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getPoliticallyExposed() {
  //debugger;
  try {
    $.getMaster("GET_POLITICALLY_EXPOSED", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#IND_ISPOLITICALLY_EXPOSED").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster(
              "GET_POLITICALLY_EXPOSED",
              [],
              function (headers, masterData) {
                if (masterData) {
                  for (var i in masterData) {
                    $("#IND_ISPOLITICALLY_EXPOSED").append(
                      "<option id=" +
                        masterData[i][1] +
                        " value='" +
                        masterData[i][1] +
                        "'>" +
                        masterData[i][2] +
                        "</option>"
                    );
                  }

                  masterDataGlobal["GET_POLITICALLY_EXPOSED"] = masterData;
                }
              }
            );
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_POLITICALLY_EXPOSED"] = masterData;
      }
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getNriSavingsType(idName) {
  debugger;
  if ($("#FORM_TYPE").val() !== "NRI") {
    $("#nriSavingsTypeRow").attr("hidden", "hidden");
    $("#NRI_SAV_TYPE").val("");
    $("#NRI_SAV_TYPE").removeClass("requiredIndi");
    $("#NRI_SAV_TYPE").removeClass("requiredIndiDiscp");
    return;
  }

  var idVal = $("#" + idName).val();
  if (idVal === "Savings" && $("#FORM_TYPE").val() === "NRI") {
    $("#nriSavingsTypeRow").removeAttr("hidden", "hidden");
    $("#NRI_SAV_TYPE").addClass("requiredIndi");
    $("#NRI_SAV_TYPE").addClass("requiredIndiDiscp");
  } else {
    $("#nriSavingsTypeRow").attr("hidden", "hidden");
    $("#NRI_SAV_TYPE").val("");
    $("#NRI_SAV_TYPE").removeClass("requiredIndi");
    $("#NRI_SAV_TYPE").removeClass("requiredIndiDiscp");
  }
}

function getNriSavingsTypeOnLoad() {
  debugger;
  if (tableLoader.FORM_TYPE !== "NRI") {
    $("#nriSavingsTypeRow").attr("hidden", "hidden");
    $("#NRI_SAV_TYPE").removeClass("requiredIndi");
    $("#NRI_SAV_TYPE").removeClass("requiredIndiDiscp");
    return;
  }
  var idVal = tableLoader.ADDNL_FORM_TYPE;
  if (idVal === "Savings" && tableLoader.FORM_TYPE === "NRI") {
    $("#nriSavingsTypeRow").removeAttr("hidden", "hidden");
    $("#NRI_SAV_TYPE").addClass("requiredIndi");
    $("#NRI_SAV_TYPE").addClass("requiredIndiDiscp");
  } else {
    $("#nriSavingsTypeRow").attr("hidden", "hidden");
    $("#NRI_SAV_TYPE").removeClass("requiredIndi");
    $("#NRI_SAV_TYPE").removeClass("requiredIndiDiscp");
  }
}

function getProductType(addFormType) {
  debugger;
  var addtionalFormType = $("#" + addFormType).val();
  var condition = "";
  var schemeCondtion1 = "";
  var schemeCondtion2 = "";
  var schemeCondtion3 = "";
  var schemeCondtion4 = "";
  var schemeCondtion5 = "";
  var schemeCondtion6 = "";
  var schemeCondtion7 = "";
  var schemeCondtion8 = "";
  if (addtionalFormType === "FD" || addtionalFormType === "RD") {
    condition = "CD";
    if ($("#FORM_TYPE").val() === "Non Individual") {
      schemeCondtion1 = "3003";
      schemeCondtion2 = "3009";
      schemeCondtion3 = "3010";
      schemeCondtion4 = "3011";
      schemeCondtion5 = "3022";
      schemeCondtion6 = "3025";
      schemeCondtion7 = "3026";
      schemeCondtion8 = "3052";
    } else {
      schemeCondtion1 = "1007";
      schemeCondtion2 = "1007";
      schemeCondtion3 = "1007";
      schemeCondtion4 = "1007";
      schemeCondtion5 = "1007";
      schemeCondtion6 = "1007";
      schemeCondtion7 = "1007";
      schemeCondtion8 = "1007";
    }
  } else if (addtionalFormType === "Savings") {
    condition = "SAV";
    schemeCondtion1 = "1007";
    schemeCondtion2 = "1007";
    schemeCondtion3 = "1007";
    schemeCondtion4 = "1007";
    schemeCondtion5 = "1007";
    schemeCondtion6 = "1007";
    schemeCondtion7 = "1007";
    schemeCondtion8 = "1007";
  } else if (addtionalFormType === "Current") {
    condition = "DDA";
    schemeCondtion1 = "1007";
    schemeCondtion2 = "1007";
    schemeCondtion3 = "1007";
    schemeCondtion4 = "1007";
    schemeCondtion5 = "1007";
    schemeCondtion6 = "1007";
    schemeCondtion7 = "1007";
    schemeCondtion8 = "1007";
  }

  try {
    $.getMaster(
      "ACO_GET_PRODUCTTYPE",
      [
        condition,
        schemeCondtion1,
        schemeCondtion2,
        schemeCondtion3,
        schemeCondtion4,
        schemeCondtion5,
        schemeCondtion6,
        schemeCondtion7,
        schemeCondtion8,
      ],
      function (headers, masterData) {
        if (masterData) {
          $("#SCHEME_CODE").html("");
          $("#SCHEME_CODE").html(" <option  value=''>Select</option>");
          if (addtionalFormType === "FD") {
            for (var i in masterData) {
              var id = masterData[i][0];
              if (id.startsWith("3")) {
                if ($("#FORM_TYPE").val() === "NRI") {
                  if (
                    masterData[i][1].indexOf("NRO") >= 0 ||
                    masterData[i][1].indexOf("NRE") >= 0
                  ) {
                    $("#SCHEME_CODE").append(
                      "<option id=" +
                        masterData[i][2] +
                        " value='" +
                        masterData[i][0] +
                        "'>" +
                        masterData[i][1] +
                        "</option>"
                    );
                  }
                } else {
                  if (
                    !(
                      masterData[i][1].indexOf("NRO") >= 0 ||
                      masterData[i][1].indexOf("NRE") >= 0
                    )
                  ) {
                    $("#SCHEME_CODE").append(
                      "<option id=" +
                        masterData[i][2] +
                        " value='" +
                        masterData[i][0] +
                        "'>" +
                        masterData[i][1] +
                        "</option>"
                    );
                  }
                }
              }
            }
          } else if (addtionalFormType === "RD") {
            for (var i in masterData) {
              var id = masterData[i][0];
              if (id.startsWith("4")) {
                $("#SCHEME_CODE").append(
                  "<option id=" +
                    masterData[i][2] +
                    " value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          } else if (addtionalFormType === "Savings") {
            for (var i in masterData) {
              var id = masterData[i][0];
              var value = masterData[i][1];
              if ($("#FORM_TYPE").val() === "NRI") {
                if (value.startsWith("NRE") || value.startsWith("NRO")) {
                  $("#SCHEME_CODE").append(
                    "<option id=" +
                      masterData[i][2] +
                      " value='" +
                      masterData[i][0] +
                      "'>" +
                      masterData[i][1] +
                      "</option>"
                  );
                }
              } else {
                if (!(value.startsWith("NRE") || value.startsWith("NRO"))) {
                  $("#SCHEME_CODE").append(
                    "<option id=" +
                      masterData[i][2] +
                      " value='" +
                      masterData[i][0] +
                      "'>" +
                      masterData[i][1] +
                      "</option>"
                  );
                }
              }
            }
          } else {
            for (var i in masterData) {
              $("#SCHEME_CODE").append(
                "<option id=" +
                  masterData[i][2] +
                  " value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        }

        $("#SCHEME_CODE").val(tableLoader.SCHEME_CODE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }

  //    if(addtionalFormType === "Others"){
  //      condition = 'SAV';
  //      var condition1 = "DDA"
  //    try {
  //        $.getMaster("ACO_GET_PRODUCTTYPE1", [condition,condition1], function(headers, masterData) {
  //            if (masterData) {
  //                 $("#SCHEME_CODE").html("");
  //                   $("#SCHEME_CODE").html(" <option  value=''>Select</option>");
  //                for (var i in masterData) {
  //                    $("#SCHEME_CODE").append("<option id=" + masterData[i][2] + " value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
  //                }
  //            }
  //
  //            $("#SCHEME_CODE").val(tableLoader.SCHEME_CODE);
  //        });
  //    } catch (e) {
  //        alert(e + ": Error while loading master");
  //    }
  //    }
}

function getProductTypeOnLoad() {
  //debugger;
  var addtionalFormType = tableLoader.ADDNL_FORM_TYPE;
  var condition = "";
  var schemeCondtion1 = "";
  var schemeCondtion2 = "";
  var schemeCondtion3 = "";
  var schemeCondtion4 = "";
  var schemeCondtion5 = "";
  var schemeCondtion6 = "";
  var schemeCondtion7 = "";
  var schemeCondtion8 = "";
  if (addtionalFormType === "FD" || addtionalFormType === "RD") {
    condition = "CD";
    if (tableLoader.FORM_TYPE === "Non Individual") {
      schemeCondtion1 = "3003";
      schemeCondtion2 = "3009";
      schemeCondtion3 = "3010";
      schemeCondtion4 = "3011";
      schemeCondtion5 = "3022";
      schemeCondtion6 = "3025";
      schemeCondtion7 = "3026";
      schemeCondtion8 = "3052";
    } else {
      schemeCondtion1 = "1007";
      schemeCondtion2 = "1007";
      schemeCondtion3 = "1007";
      schemeCondtion4 = "1007";
      schemeCondtion5 = "1007";
      schemeCondtion6 = "1007";
      schemeCondtion7 = "1007";
      schemeCondtion8 = "1007";
    }
  } else if (addtionalFormType === "Savings") {
    condition = "SAV";
    schemeCondtion1 = "1007";
    schemeCondtion2 = "1007";
    schemeCondtion3 = "1007";
    schemeCondtion4 = "1007";
    schemeCondtion5 = "1007";
    schemeCondtion6 = "1007";
    schemeCondtion7 = "1007";
    schemeCondtion8 = "1007";
  } else if (addtionalFormType === "Current") {
    condition = "DDA";
    schemeCondtion1 = "1007";
    schemeCondtion2 = "1007";
    schemeCondtion3 = "1007";
    schemeCondtion4 = "1007";
    schemeCondtion5 = "1007";
    schemeCondtion6 = "1007";
    schemeCondtion7 = "1007";
    schemeCondtion8 = "1007";
  }

  // if(addtionalFormType !== null && addtionalFormType !== "" && !addtionalFormType){
  try {
    $.getMaster(
      "ACO_GET_PRODUCTTYPE",
      [
        condition,
        schemeCondtion1,
        schemeCondtion2,
        schemeCondtion3,
        schemeCondtion4,
        schemeCondtion5,
        schemeCondtion6,
        schemeCondtion7,
        schemeCondtion8,
      ],
      function (headers, masterData) {
        if (masterData) {
          $("#SCHEME_CODE").html("");
          $("#SCHEME_CODE").html(" <option  value=''>Select</option>");
          if (addtionalFormType === "FD") {
            for (var i in masterData) {
              var id = masterData[i][0];
              if (id.startsWith("3")) {
                $("#SCHEME_CODE").append(
                  "<option id=" +
                    masterData[i][2] +
                    " value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          } else if (addtionalFormType === "RD") {
            for (var i in masterData) {
              var id = masterData[i][0];
              if (id.startsWith("4")) {
                $("#SCHEME_CODE").append(
                  "<option id=" +
                    masterData[i][2] +
                    " value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          } else if (addtionalFormType === "Savings") {
            for (var i in masterData) {
              var id = masterData[i][0];
              var value = masterData[i][1];
              if ($("#FORM_TYPE").val() === "NRI") {
                if (value.startsWith("NRE") || value.startsWith("NRO")) {
                  $("#SCHEME_CODE").append(
                    "<option id=" +
                      masterData[i][2] +
                      " value='" +
                      masterData[i][0] +
                      "'>" +
                      masterData[i][1] +
                      "</option>"
                  );
                }
              } else {
                if (!(value.startsWith("NRE") || value.startsWith("NRO"))) {
                  $("#SCHEME_CODE").append(
                    "<option id=" +
                      masterData[i][2] +
                      " value='" +
                      masterData[i][0] +
                      "'>" +
                      masterData[i][1] +
                      "</option>"
                  );
                }
              }
            }
          } else {
            for (var i in masterData) {
              $("#SCHEME_CODE").append(
                "<option id=" +
                  masterData[i][2] +
                  " value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        }

        $("#SCHEME_CODE").val(tableLoader.SCHEME_CODE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }

  // }
}

function getAccRelationshipCodeOnLoad(typeOfAcc) {
  //debugger;
  try {
    var condition = tableLoader.SCHEME_CODE_ID;
    var formType = tableLoader.FORM_TYPE;
    if (condition) {
      $.getMaster(
        "ACO_GET_ACCRELATIONCODE",
        [condition],
        function (headers, masterData) {
          if (masterData) {
            if (formType === "NRI") {
              for (var i in masterData) {
                if (
                  masterData[i][1] === "A" ||
                  masterData[i][1] === "B" ||
                  masterData[i][1] === "MI"
                ) {
                  $("#ACCOUNT_RELN_CODE").append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][3] +
                      "</option>"
                  );
                }
              }
            } else {
              for (var i in masterData) {
                $("#ACCOUNT_RELN_CODE").append(
                  "<option id=" +
                    masterData[i][1] +
                    " value='" +
                    masterData[i][1] +
                    "'>" +
                    masterData[i][3] +
                    "</option>"
                );
              }
            }
          }

          $("#ACCOUNT_RELN_CODE").val(tableLoader.ACCOUNT_RELN_CODE);
        }
      );
    }
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getInstallmentDate() {
  //debugger;
  try {
    $.getMaster("GET_INSTALLMENT_DATE", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#M1_NI_RD_NEXTINSTALLMENTDATE,#NI_RD_NEXTINSTALLMENTDATE").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_INSTALLMENT_DATE"] = masterData;
      }

      $("#M1_NI_RD_NEXTINSTALLMENTDATE").val(
        tableLoader.M1_NI_RD_NEXTINSTALLMENTDATE
      );
      $("#NI_RD_NEXTINSTALLMENTDATE").val(
        tableLoader.NI_RD_NEXTINSTALLMENTDATE
      );
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getEntityType() {
  //debugger;
  try {
    $.getMaster("GET_ENTITY_TYPE", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#CONSTITUTION").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_ENTITY_TYPE"] = masterData;
        //$("#CONSTITUTION").val(tableLoader.CONSTITUTION);
      }
      $("#CONSTITUTION").val(tableLoader.CONSTITUTION);
      // $("#ENTITY_TYPE").val(tableLoader.ENTITY_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

//function checkGSTINMandatory(id) {
//    if ($.isInActivities("ACO_DVU")) {
//        if ($("#" + id).val() === "1" || $("#" + id).val() === "3" || $("#" + id).val() === "7" || $("#" + id).val() === "6") {
//            $("#NI_GSTIN_NUMBER_errmsg").html("Field is Mandatory");
//        } else {
//            $("#NI_GSTIN_NUMBER_errmsg").html("");
//        }
//    }
//}

function getVisaType() {
  try {
    $.getMaster("GET_VISA_TYPE", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#VISA_TYPE").append(
            "<option id=" +
              masterData[i] +
              " value='" +
              masterData[i] +
              "'>" +
              masterData[i] +
              "</option>"
          );
        }

        masterDataGlobal["GET_VISA_TYPE"] = masterData;
      }
      //  $("#NI_GST_STATE").val(tableLoader.NI_GST_STATE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getFullStateList() {
  try {
    $.getMaster("GET_FULL_STATE_LIST", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#NI_GST_STATE").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_FULL_STATE_LIST"] = masterData;
      }
      $("#NI_GST_STATE").val(tableLoader.NI_GST_STATE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getFullStateListInQC() {
  try {
    $.getMaster("GET_FULL_STATE_LIST", [], function (headers, masterData) {
      if (masterData) {
        $("#STATE_RESI,#STATE_PERM,#STATE_OFF,#FATCA_STATE").html("");
        $("#STATE_RESI,#STATE_PERM,#STATE_OFF,#FATCA_STATE").html(
          " <option selected='Select' value='''>Select</option>"
        );
        for (var i in masterData) {
          $("#STATE_RESI,#STATE_PERM,#STATE_OFF,#FATCA_STATE").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
      $("#STATE_RESI").val(tableLoader.STATE_RESI);
      $("#STATE_PERM").val(tableLoader.STATE_PERM);
      $("#STATE_OFF").val(tableLoader.STATE_OFF);
      $("#FATCA_STATE").val(tableLoader.FATCA_STATE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getStateForIndiNonIndi() {
  if (
    tableLoader.FORM_TYPE === "Individual" ||
    tableLoader.FORM_TYPE === "Non Individual"
  ) {
    $.getMaster("GET_INDIA_STATES", ["IN"], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $(
            "#STATE_RESI,#STATE_PERM,#M1_NIOFFC_STATE,#M1_NICORR_STATE,\n\
                    #NIOFFC_STATE,#NICORR_STATE,#M1_NI_NOMINATIONDET_STATE,#NI_NOMINATIONDET_STATE"
          ).append(
            "<option id=" +
              masterData[i][0] +
              "  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_INDIA_STATES"] = masterData;
      }

      $("#M1_NIOFFC_STATE").val(tableLoader.M1_NIOFFC_STATE);
      $("#M1_NICORR_STATE").val(tableLoader.M1_NICORR_STATE);
      $("#NIOFFC_STATE").val(tableLoader.NIOFFC_STATE);
      $("#NICORR_STATE").val(tableLoader.NICORR_STATE);
      $("#NI_NOMINATIONDET_STATE").val(tableLoader.NI_NOMINATIONDET_STATE);
      $("#M1_NI_NOMINATIONDET_STATE").val(
        tableLoader.M1_NI_NOMINATIONDET_STATE
      );
    });
  }
}

function getCountry() {
  try {
    if (
      tableLoader.FORM_TYPE === "Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      $.getMaster("GET_COUNTRY_INDIA", ["IN"], function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#COUNTRY_RESI").html("");
            $("#COUNTRY_PERM").html("");
            $("#COUNTRY_RESI,#COUNTRY_PERM").append(
              "<option id=" +
                masterData[i][0] +
                " selected = 'IN' value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }

        $("#COUNTRY_RESI").addClass("changed");
        $("#COUNTRY_PERM").addClass("changed");
      });
    } else {
      $.getMaster(
        "GET_COUNTRY_INCORPORATION",
        [],
        function (headers, masterData) {
          if (masterData) {
            for (var i in masterData) {
              $("#COUNTRY_RESI,#COUNTRY_PERM").append(
                "<option id=" +
                  masterData[i][0] +
                  " value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }

          $("#COUNTRY_RESI")
            .val(tableLoader.COUNTRY_RESI)
            .attr("readonly", false);
          $("#COUNTRY_PERM")
            .val(tableLoader.COUNTRY_PERM)
            .attr("readonly", false);
        }
      );
    }
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getState() {
  if (
    tableLoader.FORM_TYPE === "Individual" ||
    tableLoader.FORM_TYPE === "Non Individual"
  ) {
    $.getMaster("GET_INDIA_STATES", ["IN"], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#STATE_RESI,#STATE_PERM").append(
            "<option id=" +
              masterData[i][0] +
              "  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
    });
  }
}

function getVisaIssue() {
  try {
    $.getMaster(
      "GET_COUNTRY_INCORPORATION",
      [],
      function (headers, masterData) {
        if (masterData) {
          // console.log("GET_WELCOME_KIT master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
          for (var i in masterData) {
            $("#VISA_ISSUER,#VISA_ISSUE_PLACE,#PASSPORT_ISSUE_PLACE").append(
              "<option id=" +
                masterData[i][0] +
                " value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }

          masterDataGlobal["GET_COUNTRY_INCORPORATION"] = masterData;
        }

        $("#VISA_ISSUER").val(tableLoader.VISA_ISSUER);
        $("#VISA_ISSUE_PLACE").val(tableLoader.VISA_ISSUE_PLACE);
        $("#PASSPORT_ISSUE_PLACE").val(tableLoader.PASSPORT_ISSUE_PLACE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getCountryOfIncorporationM1() {
  //debugger;
  try {
    $.getMaster(
      "GET_COUNTRY_INCORPORATION",
      [],
      function (headers, masterData) {
        if (masterData) {
          // console.log("GET_WELCOME_KIT master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
          for (var i in masterData) {
            $(
              "#NI_COUNTRY_INCORPORATION,#M1_NIRESI_COUNTRY,\n\
            #NIOFFC_COUNTRY,#NICORR_COUNTRY,#NI_FATCA_COUNTRY,#COUNTRY_OFF,\n\
            #M1_NI_FATCA_COUNTRYINCORP,#M1_NI_FATCA_COUNTRY,#NI_FATCA_COUNTRYINCORP,\n\
            #M1_NI_TAXRESIDENCE_COUNTRY,#NI_GST_COUNTRY,\n\
            #COUNTRYOFBIRTH,#FATCA_COUNTRY,#TAX_RES_COUNTRY,#M1_NI_TAXRESIDENCE_COUNTRY,#NATIONALITY"
            ).append(
              "<option id=" +
                masterData[i][0] +
                " value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }

          masterDataGlobal["GET_COUNTRY_INCORPORATION"] = masterData;
        }
        $("#NI_COUNTRY_INCORPORATION").val(
          tableLoader.NI_COUNTRY_INCORPORATION
        );
        $("#M1_NIRESI_COUNTRY").val(tableLoader.M1_NIRESI_COUNTRY);
        $("#COUNTRY_OFF").val(tableLoader.COUNTRY_OFF);
        $("#NIOFFC_COUNTRY").val(tableLoader.NIOFFC_COUNTRY);
        $("#NICORR_COUNTRY").val(tableLoader.NICORR_COUNTRY);
        $("#M1_NI_FATCA_COUNTRYINCORP").val(
          tableLoader.M1_NI_FATCA_COUNTRYINCORP
        );
        $("#NI_FATCA_COUNTRYINCORP").val(tableLoader.NI_FATCA_COUNTRYINCORP);
        $("#M1_NI_FATCA_COUNTRY").val(tableLoader.M1_NI_FATCA_COUNTRY);
        $("#NI_FATCA_COUNTRY").val(tableLoader.NI_FATCA_COUNTRY);
        $("#M1_NI_TAXRESIDENCE_COUNTRY").val(
          tableLoader.M1_NI_TAXRESIDENCE_COUNTRY
        );
        $("#NI_GST_COUNTRY").val(tableLoader.NI_GST_COUNTRY);
        $("#COUNTRYOFBIRTH").val(tableLoader.COUNTRYOFBIRTH);
        $("#FATCA_COUNTRY").val(tableLoader.FATCA_COUNTRY);
        $("#TAX_RES_COUNTRY").val(tableLoader.TAX_RES_COUNTRY);
        $("#M1_NI_TAXRESIDENCE_COUNTRY").val(
          tableLoader.M1_NI_TAXRESIDENCE_COUNTRY
        );
        masterDataGlobal["GET_COUNTRY_INCORPORATION"] = masterData;
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getPortfolioMaster() {
  try {
    $.getMaster("GET_MFI_PORTFOLIO", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#MFI_PORTFOLIO").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][0] +
              "</option>"
          );
        }
      }
    });
  } catch (e) {
    console.log(e);
  }
}

function getSBRMaster() {
  try {
    $.getMaster(
      "GET_SBR_CLASSIFICATION_LAYER",
      [],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#SBR_CLASSIFICATION_LAYER").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][0] +
                "</option>"
            );
          }
        }
      }
    );
  } catch (e) {
    console.log(e);
  }
}

function getAMLScore() {
  //debugger;

  var entityType;
  var formType = tableLoader.FORM_TYPE;
  if (formType === "Individual" || formType === "NRI") {
    entityType = "1";
  } else if (formType === "Non-Individual") {
    entityType = "2";
  } else {
    entityType = "";
  }

  try {
    var custID = "";
    var firstName = "";
    var MiddleName = "";
    var LastName = "";
    var dob = "";
    var pan = "";
    var aadhar = "";
    var voter = "";
    var custIndex = $("#CUSTDETAILS_TABLE_TBODY input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (custIndex === -1) {
      alert("Please select Customer first");
      return;
    } else {
      var formType = tableLoader.FORM_TYPE;
      if ($.isInActivities("ACO_Compliance")) {
        formType = "Individual";
      }
      if (formType === "Individual" || formType === "NRI") {
        var row = $(
          "#CUSTDETAILS_TABLE_TBODY input[name=radio]:checked"
        ).closest("tr");
        $(row)
          .find("td")
          .each(function () {
            var idName = $(this).attr("class");
            if (idName === "IND_FIRST_NAME") {
              firstName = $(this).text();
            } else if (idName === "IND_MIDDLE_NAME") {
              MiddleName = $(this).text();
            } else if (idName === "IND_LAST_NAME") {
              LastName = $(this).text();
            } else if (idName === "IND_DOB") {
              dob = $(this).text();
            } else if (idName === "IND_PAN_NUMBER") {
              pan = $(this).text();
            } else if (idName === "IND_AADHAR_NUMBER") {
              aadhar = $(this).text();
            }
          });
        custID = "CUST_0" + custIndex;
      } else {
        custID = "APP01";
        LastName = tableLoader.NI_CUSTNAME;
        dob = tableLoader.NI_DATE_INCORPORATION;
        pan = tableLoader.NI_PAN_NUMBER;
      }
    }

    var referenceNo = $.getProcessInstanceId().replace(/-/g, "") + custID;
    console.log(referenceNo);
    var x = new Date();
    $body.addClass("loading");
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=sendAMLRequestNew" +
        "&entityType=" +
        entityType +
        "&firstName=" +
        firstName +
        "&MiddleName=" +
        MiddleName +
        "&PAN=" +
        pan +
        "&AADHAR=" +
        aadhar +
        "&VOTER=" +
        voter +
        "&LastName=" +
        LastName +
        "&dob=" +
        dob.split("-").reverse().join("-") +
        "&referenceNo=" +
        referenceNo +
        "&PINSTID=" +
        $.getProcessInstanceId() +
        "&APPLICANT_TYPE=CUSTOMER_1" +
        "&REQUEST_ID=" +
        (x.getDate().toString() +
          x.getMonth() +
          x.getFullYear() +
          x.getHours() +
          x.getMinutes() +
          x.getSeconds() +
          x.getMilliseconds()),
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          openWindow_AML(
            "../../ACO/ACO_AMLResponse.jsp",
            referenceNo,
            $("#IND_AML_RESULT"),
            data
          );
          $body.removeClass("loading");
        } else {
          alert("Something went wrong");
          $body.removeClass("loading");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

function countryMasterDefault() {
  try {
    if (
      tableLoader.FORM_TYPE === "Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      $.getMaster("GET_COUNTRY_INDIA", ["IN"], function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#COUNTRY_RESI").html("");
            $("#COUNTRY_PERM").html("");
            $("#M1_NIOFFC_COUNTRY").html("");
            $("#M1_NICORR_COUNTRY").html("");
            $("#M1_NI_NOMINATIONDET_COUNTRY").html("");
            $("#NI_NOMINATIONDET_COUNTRY").html("");
            $("#NIOFFC_COUNTRY").html("");
            $("#NICORR_COUNTRY").html("");
            $(
              "#COUNTRY_RESI,#COUNTRY_PERM,\n\
                #M1_NIOFFC_COUNTRY,#M1_NICORR_COUNTRY,\n\
                    #NIOFFC_COUNTRY,#NICORR_COUNTRY,#M1_NI_NOMINATIONDET_COUNTRY,#NI_NOMINATIONDET_COUNTRY"
            ).append(
              "<option id=" +
                masterData[i][0] +
                " selected = 'IN' value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }

        $("#COUNTRY_RESI").addClass("changed");
        $("#COUNTRY_PERM").addClass("changed");
        $("#M1_NIOFFC_COUNTRY").addClass("changed");
        $("#M1_NICORR_COUNTRY").addClass("changed");
        $("#M1_NI_NOMINATIONDET_COUNTRY").addClass("changed");
        $("#NI_NOMINATIONDET_COUNTRY").addClass("changed");
        $("#NIOFFC_COUNTRY").addClass("changed");
        $("#NICORR_COUNTRY").addClass("changed");
      });
    } else {
      $.getMaster(
        "GET_COUNTRY_INCORPORATION",
        [],
        function (headers, masterData) {
          if (masterData) {
            for (var i in masterData) {
              $(
                "#COUNTRY_RESI,#COUNTRY_PERM,\n\
                 #M1_NIOFFC_COUNTRY,#M1_NICORR_COUNTRY,#NIOFFC_COUNTRY,#NICORR_COUNTRY,#M1_NI_NOMINATIONDET_COUNTRY,#NI_NOMINATIONDET_COUNTRY"
              ).append(
                "<option id=" +
                  masterData[i][0] +
                  " value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }

          $("#COUNTRY_RESI")
            .val(tableLoader.COUNTRY_RESI)
            .attr("readonly", false);
          $("#COUNTRY_PERM")
            .val(tableLoader.COUNTRY_PERM)
            .attr("readonly", false);
          $("#M1_NIOFFC_COUNTRY")
            .val(tableLoader.COUNTRY_PERM)
            .attr("readonly", false);
          $("#M1_NICORR_COUNTRY")
            .val(tableLoader.COUNTRY_OFF)
            .attr("readonly", false);
          $("#NI_NOMINATIONDET_COUNTRY")
            .val(tableLoader.COUNTRY_OFF)
            .attr("readonly", false);
          $("#M1_NI_NOMINATIONDET_COUNTRY")
            .val(tableLoader.COUNTRY_OFF)
            .attr("readonly", false);
          $("#NIOFFC_COUNTRY")
            .val(tableLoader.COUNTRY_PERM)
            .attr("readonly", false);
          $("#NICORR_COUNTRY")
            .val(tableLoader.COUNTRY_OFF)
            .attr("readonly", false);
        }
      );
    }
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getCountryOfIncorporationM2() {
  try {
    $.getMaster(
      "GET_COUNTRY_INCORPORATION",
      [],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $(
              "#NI_COUNTRY_INCORPORATION,#NIRESI_COUNTRY,\n\
\n\
#NI_FATCA_COUNTRYINCORP,#NI_FATCA_COUNTRY,\n\
#NI_TAXRESIDENCE_COUNTRY,#NI_GST_COUNTRY,\n\
#COUNTRY_RESI,#COUNTRY_PERM,\n\
#COUNTRY_OFF,#COUNTRYOFBIRTH,#FATCA_COUNTRY,#TAX_RES_COUNTRY,\n\
#NI_TAXRESIDENCE_COUNTRY,#NATIONALITY,#M1_NI_TAXRESIDENCE_COUNTRY,#VISA_ISSUE_PLACE,#VISA_ISSUER,#PASSPORT_ISSUE_PLACE"
            ).append(
              "<option id=" +
                masterData[i][0] +
                " value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }

          masterDataGlobal["GET_COUNTRY_INCORPORATION"] = masterData;
        }

        $("#NI_COUNTRY_INCORPORATION").val(
          tableLoader.NI_COUNTRY_INCORPORATION
        );
        $("#M1_NIRESI_COUNTRY").val(tableLoader.M1_NIRESI_COUNTRY);
        $("#M1_NI_FATCA_COUNTRYINCORP").val(
          tableLoader.M1_NI_FATCA_COUNTRYINCORP
        );
        $("#NI_FATCA_COUNTRY").val(tableLoader.NI_FATCA_COUNTRY);
        $("#M1_NI_TAXRESIDENCE_COUNTRY").val(
          tableLoader.M1_NI_TAXRESIDENCE_COUNTRY
        );
        $("#NI_GST_COUNTRY").val(tableLoader.NI_GST_COUNTRY);
        $("#COUNTRY_RESI").val(tableLoader.COUNTRY_RESI);
        $("#COUNTRY_PERM").val(tableLoader.COUNTRY_PERM);
        $("#COUNTRY_OFF").val(tableLoader.COUNTRY_OFF);
        $("#COUNTRYOFBIRTH").val(tableLoader.COUNTRYOFBIRTH);
        $("#FATCA_COUNTRY").val(tableLoader.FATCA_COUNTRY);
        $("#TAX_RES_COUNTRY").val(tableLoader.TAX_RES_COUNTRY);
        $("#M1_NI_TAXRESIDENCE_COUNTRY").val(
          tableLoader.M1_NI_TAXRESIDENCE_COUNTRY
        );
        $("#PASSPORT_ISSUE_PLACE").val(tableLoader.PASSPORT_ISSUE_PLACE);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getGender() {
  try {
    $.getMaster("GET_GENDER", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_GENDER master loaded = " + masterData + " typeof mastedata = " + typeof masterData);

        for (var i in masterData) {
          $("#IND_GENDER").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_GENDER"] = masterData;
      }

      $("#IND_GENDER").val(tableLoader.IND_GENDER);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getWelcomeKit() {
  try {
    $.getMaster("GET_WELCOME_KIT", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#WCKIT_TYPE").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][2] +
              "</option>"
          );
        }
        masterDataGlobal["GET_WELCOME_KIT"] = masterData;
      }
      $("#WCKIT_TYPE").val(tableLoader.WCKIT_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getCountryCode() {
  $.getMaster("GET_COUNTRY_CODE", [], function (headers, masterData) {
    for (var i in masterData) {
      $("#IND_COUNTRY_CODE").append(
        "<option id='" +
          masterData[i][1] +
          "' value='" +
          masterData[i][1] +
          "'>" +
          masterData[i][0] +
          " (" +
          masterData[i][1] +
          ")" +
          "</option>"
      );
      //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
    }

    masterDataGlobal["GET_COUNTRY_CODE"] = masterData;
    $("#IND_COUNTRY_CODE").val(tableLoader.COUNTRY_CODE);
  });
}

function getMaritalStatus() {
  try {
    $.getMaster("GET_MARITAL_STATUS", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#IND_MARITAL_STATUS").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_MARITAL_STATUS"] = masterData;
      }
      $("#IND_MARITAL_STATUS").val(tableLoader.IND_MARITAL_STATUS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getCKYCAccType() {
  try {
    $.getMaster("GET_CKYC_ACC_TYPE", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#CKYC_ACC_TYPE").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster(
              "GET_CKYC_ACC_TYPE",
              [],
              function (headers, masterData) {
                if (masterData) {
                  for (var i in masterData) {
                    $("#CKYC_ACC_TYPE").append(
                      "<option id=" +
                        masterData[i][1] +
                        " value='" +
                        masterData[i][1] +
                        "'>" +
                        masterData[i][2] +
                        "</option>"
                    );
                  }

                  masterDataGlobal["GET_CKYC_ACC_TYPE"] = masterData;
                }
                $("#CKYC_ACC_TYPE").val(tableLoader.CKYC_ACC_TYPE);
              }
            );
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_CKYC_ACC_TYPE"] = masterData;
      }
      $("#CKYC_ACC_TYPE").val(tableLoader.CKYC_ACC_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getKYCOrgCode() {
  try {
    $.getMaster("GET_KYC_ORG_CODE", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#KYC_VERIFIER_ORG_CODE").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster("GET_KYC_ORG_CODE", [], function (headers, masterData) {
              if (masterData) {
                for (var i in masterData) {
                  $("#KYC_VERIFIER_ORG_CODE").append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][2] +
                      "</option>"
                  );
                }
                masterDataGlobal["GET_KYC_ORG_CODE"] = masterData;
              }

              $("#KYC_VERIFIER_ORG_CODE").val(
                tableLoader.KYC_VERIFIER_ORG_CODE
              );
            });
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_KYC_ORG_CODE"] = masterData;
      }

      $("#KYC_VERIFIER_ORG_CODE").val(tableLoader.KYC_VERIFIER_ORG_CODE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getKYCTypeOfDoc() {
  try {
    $.getMaster("GET_KYC_TYPE_OF_DOC", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            if (masterData[i][1] === "01") {
              $("#KYC_DOCUMENT").append(
                "<option id=" +
                  masterData[i][1] +
                  " value='" +
                  masterData[i][1] +
                  "'>" +
                  masterData[i][2] +
                  "</option>"
              );
            }
          }
        } else {
          try {
            $.getMaster(
              "GET_KYC_TYPE_OF_DOC",
              [],
              function (headers, masterData) {
                if (masterData) {
                  for (var i in masterData) {
                    if (masterData[i][1] === "01") {
                      $("#KYC_DOCUMENT").append(
                        "<option id=" +
                          masterData[i][1] +
                          " value='" +
                          masterData[i][1] +
                          "'>" +
                          masterData[i][2] +
                          "</option>"
                      );
                    }
                  }

                  masterDataGlobal["GET_KYC_TYPE_OF_DOC"] = masterData;
                }

                $("#KYC_DOCUMENT").val(tableLoader.KYC_DOCUMENT);
              }
            );
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_KYC_TYPE_OF_DOC"] = masterData;
      }

      $("#KYC_DOCUMENT").val(tableLoader.KYC_DOCUMENT);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getRelationWithMinor() {
  try {
    $.getMaster("GET_RELATION", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#PERSNL_RELN_WITH_MINOR").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_RELATION"] = masterData;
      }
      $("#PERSNL_RELN_WITH_MINOR").val(tableLoader.PERSNL_RELN_WITH_MINOR);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getIsStaff() {
  $.getMaster("GET_IS_STAFF", [], function (headers, masterData) {
    for (var i in masterData) {
      $("#SALARYACC_IS_STAFF").append(
        "<option id=" +
          masterData[i][0] +
          " value='" +
          masterData[i][0] +
          "'>" +
          masterData[i][1] +
          "</option>"
      );
      //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
    }

    masterDataGlobal["GET_IS_STAFF"] = masterData;
    $("#SALARYACC_IS_STAFF").val(tableLoader.SALARYACC_IS_STAFF);
  });
}

function getMasterData() {
  //    $.getMaster("GET_COUNTRY_CODE", [], function(headers, masterData) {
  //        for (var i in masterData) {
  //            $("#COUNTRY_CODE,").append("<option id='" + masterData[i][1] + "' value='" + masterData[i][1] + "'>" + masterData[i][0] + " (" + masterData[i][1] + ")" + "</option>");
  ////                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
  //        }
  //
  //           masterDataGlobal["GET_COUNTRY_CODE"] = masterData;
  //
  //        $("#COUNTRY_CODE").val(tableLoader.COUNTRY_CODE);
  //    });

  if (!$.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    $.getMaster("GET_IS_STAFF", [], function (headers, masterData) {
      for (var i in masterData) {
        $("#SALARYACC_IS_STAFF").append(
          "<option id=" +
            masterData[i][0] +
            " value='" +
            masterData[i][0] +
            "'>" +
            masterData[i][1] +
            "</option>"
        );
        //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
      }

      masterDataGlobal["GET_IS_STAFF"] = masterData;
      $("#SALARYACC_IS_STAFF").val(tableLoader.SALARYACC_IS_STAFF);
    });
  }

  if (!$.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    try {
      $.getMaster("GET_KYC_ORG_CODE", [], function (headers, masterData) {
        if (masterData) {
          if (masterData[0] && masterData[0] !== "undefined") {
            for (var i in masterData) {
              $("#KYC_VERIFIER_ORG_CODE").append(
                "<option id=" +
                  masterData[i][1] +
                  " value='" +
                  masterData[i][1] +
                  "'>" +
                  masterData[i][2] +
                  "</option>"
              );
            }
          } else {
            try {
              $.getMaster(
                "GET_KYC_ORG_CODE",
                [],
                function (headers, masterData) {
                  if (masterData) {
                    for (var i in masterData) {
                      $("#KYC_VERIFIER_ORG_CODE").append(
                        "<option id=" +
                          masterData[i][1] +
                          " value='" +
                          masterData[i][1] +
                          "'>" +
                          masterData[i][2] +
                          "</option>"
                      );
                    }
                    masterDataGlobal["GET_KYC_ORG_CODE"] = masterData;
                  }

                  $("#KYC_VERIFIER_ORG_CODE").val(
                    tableLoader.KYC_VERIFIER_ORG_CODE
                  );
                }
              );
            } catch (e) {
              alert(e + ": Error while loading master");
            }
          }

          masterDataGlobal["GET_KYC_ORG_CODE"] = masterData;
        }

        $("#KYC_VERIFIER_ORG_CODE").val(tableLoader.KYC_VERIFIER_ORG_CODE);
      });
    } catch (e) {
      alert(e + ": Error while loading master");
    }
  }

  //=======================================================
  if (!$.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    try {
      $.getMaster("GET_RELATION", [], function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#PERSNL_RELN_WITH_MINOR").append(
              "<option id=" +
                masterData[i][0] +
                " value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }

          masterDataGlobal["GET_RELATION"] = masterData;
        }
        $("#PERSNL_RELN_WITH_MINOR").val(tableLoader.PERSNL_RELN_WITH_MINOR);
      });
    } catch (e) {
      alert(e + ": Error while loading master");
    }
  }
  //================================================================
  if (!$.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    try {
      $.getMaster("GET_KYC_TYPE_OF_DOC", [], function (headers, masterData) {
        if (masterData) {
          if (masterData[0] && masterData[0] !== "undefined") {
            for (var i in masterData) {
              if (masterData[i][1] === "01") {
                $("#KYC_DOCUMENT").append(
                  "<option id=" +
                    masterData[i][1] +
                    " value='" +
                    masterData[i][1] +
                    "'>" +
                    masterData[i][2] +
                    "</option>"
                );
              }
            }
          } else {
            try {
              $.getMaster(
                "GET_KYC_TYPE_OF_DOC",
                [],
                function (headers, masterData) {
                  if (masterData) {
                    for (var i in masterData) {
                      if (masterData[i][1] === "01") {
                        $("#KYC_DOCUMENT").append(
                          "<option id=" +
                            masterData[i][1] +
                            " value='" +
                            masterData[i][1] +
                            "'>" +
                            masterData[i][2] +
                            "</option>"
                        );
                      }
                    }

                    masterDataGlobal["GET_KYC_TYPE_OF_DOC"] = masterData;
                  }

                  $("#KYC_DOCUMENT").val(tableLoader.KYC_DOCUMENT);
                }
              );
            } catch (e) {
              alert(e + ": Error while loading master");
            }
          }

          masterDataGlobal["GET_KYC_TYPE_OF_DOC"] = masterData;
        }

        $("#KYC_DOCUMENT").val(tableLoader.KYC_DOCUMENT);
      });
    } catch (e) {
      alert(e + ": Error while loading master");
    }
  }

  //==========================================
  if (!$.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    try {
      $.getMaster("GET_CKYC_ACC_TYPE", [], function (headers, masterData) {
        if (masterData) {
          if (masterData[0] && masterData[0] !== "undefined") {
            for (var i in masterData) {
              $("#CKYC_ACC_TYPE").append(
                "<option id=" +
                  masterData[i][1] +
                  " value='" +
                  masterData[i][1] +
                  "'>" +
                  masterData[i][2] +
                  "</option>"
              );
            }
          } else {
            try {
              $.getMaster(
                "GET_CKYC_ACC_TYPE",
                [],
                function (headers, masterData) {
                  if (masterData) {
                    for (var i in masterData) {
                      $("#CKYC_ACC_TYPE").append(
                        "<option id=" +
                          masterData[i][1] +
                          " value='" +
                          masterData[i][1] +
                          "'>" +
                          masterData[i][2] +
                          "</option>"
                      );
                    }

                    masterDataGlobal["GET_CKYC_ACC_TYPE"] = masterData;
                  }
                  $("#CKYC_ACC_TYPE").val(tableLoader.CKYC_ACC_TYPE);
                }
              );
            } catch (e) {
              alert(e + ": Error while loading master");
            }
          }

          masterDataGlobal["GET_CKYC_ACC_TYPE"] = masterData;
        }
        $("#CKYC_ACC_TYPE").val(tableLoader.CKYC_ACC_TYPE);
      });
    } catch (e) {
      alert(e + ": Error while loading master");
    }
  }

  //=========================================================

  try {
    $.getMaster("GET_WELCOME_KIT", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#WCKIT_TYPE").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster("GET_WELCOME_KIT", [], function (headers, masterData) {
              if (masterData) {
                for (var i in masterData) {
                  $("#WCKIT_TYPE").append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][2] +
                      "</option>"
                  );
                }

                masterDataGlobal["GET_WELCOME_KIT"] = masterData;
              }
              $("#WCKIT_TYPE").val(tableLoader.WCKIT_TYPE);
            });
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_WELCOME_KIT"] = masterData;
      }
      $("#WCKIT_TYPE").val(tableLoader.WCKIT_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }

  //======================================
  try {
    $.getMaster("GET_MARITAL_STATUS", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#IND_MARITAL_STATUS").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_MARITAL_STATUS"] = masterData;
      }
      $("#IND_MARITAL_STATUS").val(tableLoader.IND_MARITAL_STATUS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }

  //=====================================

  //    try {
  //        $.getMaster("GET_CUSTOMER_TYPE", [], function(headers, masterData) {
  //            if (masterData) {
  //
  //                for (var i in masterData) {
  //                    $("#CUSTOMER_TYPE").append("<option id=" + masterData[i][0] + " value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
  //                }
  //            }
  //            $("#CUSTOMER_TYPE").val(tableLoader.CUSTOMER_TYPE);
  //
  //        });
  //    } catch (e) {
  //        alert(e + ": Error while loading master");
  //    }

  //================================

  $.getMaster("GET_COUNTRY_CODE", [], function (headers, masterData) {
    for (var i in masterData) {
      $("#IND_COUNTRY_CODE").append(
        "<option id='" +
          masterData[i][1] +
          "' value='" +
          masterData[i][1] +
          "'>" +
          masterData[i][0] +
          " (" +
          masterData[i][1] +
          ")" +
          "</option>"
      );
      //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
    }

    masterDataGlobal["GET_COUNTRY_CODE"] = masterData;
    $("#IND_COUNTRY_CODE").val(tableLoader.COUNTRY_CODE);
  });
}
function getBRSThird() {
  try {
    $.getMaster("GET_BSR_FIRST", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#BSR_FIRST").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_BSR_FIRST"] = masterData;
      }

      $("#BSR_FIRST").val(tableLoader.BSR_FIRST);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getForm15G() {
  try {
    $.getMaster("GET_FORM15G", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#M1_NI_FD_ISFORM15ATTACHED,#NI_FD_ISFORM15ATTACHED").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster("GET_FORM15G", [], function (headers, masterData) {
              if (masterData) {
                for (var i in masterData) {
                  $(
                    "#M1_NI_FD_ISFORM15ATTACHED,#NI_FD_ISFORM15ATTACHED"
                  ).append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][2] +
                      "</option>"
                  );
                }

                masterDataGlobal["GET_FORM15G"] = masterData;
              }

              $("#GET_FORM15G").val(tableLoader.GET_FORM15G);
            });
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_FORM15G"] = masterData;
      }

      $("#GET_FORM15G").val(tableLoader.GET_FORM15G);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getAllPrefixes() {
  try {
    $.getMaster("GET_TITLE", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_TITLE master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $(
            "#IND_SPOUSE_PREFIX,#IND_SPOUSE_MIDDLE_NAME,#IND_MAIDEN_PREFIX,#IND_MOTHER_PREFIX,#IND_FATHER_PREFIX"
          )
            //here i change value='" + masterData[i][0] + "' to value='" + masterData[i][3] + "'
            .append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][3] +
                "'>" +
                masterData[i][0] +
                "</option>"
            );
        }

        masterDataGlobal["GET_TITLE"] = masterData;
      }

      $("#IND_SPOUSE_PREFIX").val(tableLoader.IND_SPOUSE_PREFIX);
      $("#IND_SPOUSE_MIDDLE_NAME").val(tableLoader.IND_SPOUSE_MIDDLE_NAME);
      $("#IND_MAIDEN_PREFIX").val(tableLoader.IND_MAIDEN_PREFIX);
      $("#IND_MOTHER_PREFIX").val(tableLoader.IND_MOTHER_PREFIX);
      $("#IND_FATHER_PREFIX").val(tableLoader.IND_FATHER_PREFIX);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getCategory() {
  try {
    $.getMaster("GET_CATEGORY", [], function (headers, masterData) {
      if (masterData) {
        // console.log("GET_CATEGORY master loaded = " + masterData + " typeof mastedata = " + typeof masterData);

        for (var i in masterData) {
          $("#IND_CATEGORY").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_CATEGORY"] = masterData;
      }

      $("#IND_CATEGORY").val(tableLoader.IND_CATEGORY);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getNationality() {
  try {
    $.getMaster("GET_NATIONALITY", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#NATIONALITY").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }

      $("#NATIONALITY").val(tableLoader.NATIONALITY);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getReligion() {
  try {
    $.getMaster("GET_RELIGION", [], function (headers, masterData) {
      if (masterData) {
        //  console.log("GET_RELIGION master loaded = " + masterData + " typeof mastedata = " + typeof masterData);

        for (var i in masterData) {
          $("#RELIGION").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_RELIGION"] = masterData;
      }
      $("#RELIGION").val(tableLoader.RELIGION);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getQualification() {
  try {
    $.getMaster("GET_QUALIFICATION", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_QUALIFICATION master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $("#PERSNL_QUALIFICATION").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_QUALIFICATION"] = masterData;
      }
      $("#PERSNL_QUALIFICATION").val(tableLoader.PERSNL_QUALIFICATION);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getOccupation() {
  try {
    $.getMaster("GET_OCCUPATION", [], function (headers, masterData) {
      if (masterData) {
        //   console.log("GET_OCCUPATION master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $("#OCCUPATION,#M1_IS_SELF_EMPLOYED,#IS_SELF_EMPLOYED").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_OCCUPATION"] = masterData;
      }

      $("#OCCUPATION").val(tableLoader.OCCUPATION);
      $("#M1_IS_SELF_EMPLOYED").val(tableLoader.M1_IS_SELF_EMPLOYED);
      $("#IS_SELF_EMPLOYED").val(tableLoader.IS_SELF_EMPLOYED);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getSalariedEmployedWith() {
  try {
    $.getMaster("GET_EMP_WORKING_SECTOR", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $(
            "#EMPLOYED_WITH,#PERSNL_NATURE_OF_BUSINESS,M1_NI_GST_NATUREOFBUSINESS,#NI_GST_NATUREOFBUSINESS"
          ).append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][0] +
              "</option>"
          );
        }

        masterDataGlobal["GET_EMP_WORKING_SECTOR"] = masterData;
      }
      $("#EMPLOYED_WITH").val(tableLoader.EMPLOYED_WITH);
      $("#PERSNL_NATURE_OF_BUSINESS").val(
        tableLoader.PERSNL_NATURE_OF_BUSINESS
      );
      $("#M1_NI_GST_NATUREOFBUSINESS").val(
        tableLoader.M1_NI_GST_NATUREOFBUSINESS
      );
      $("#NI_GST_NATUREOFBUSINESS").val(tableLoader.NI_GST_NATUREOFBUSINESS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getTitle() {
  $.getMaster("GET_TITLE", [], function (headers, masterData) {
    for (var i in masterData) {
      // alert(masterData[i]);
      $("#TITLE").append(
        "<option id=" +
          masterData[i][1] +
          " value='" +
          masterData[i][0] +
          "'>" +
          masterData[i][0] +
          "</option>"
      );
      //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
    }

    masterDataGlobal["GET_TITLE"] = masterData;
    $("#TITLE").val(tableLoader.TITLE);
  });
}

function getResidenceType() {
  try {
    $.getMaster("GET_RESIDENCE_TYPE", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#RESIDENCE_TYPE,#M1_NI_REG_ADD_TYPE,#NI_REG_ADD_TYPE").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_RESIDENCE_TYPE"] = masterData;
      }

      $("#RESIDENCE_TYPE").val(tableLoader.RESIDENCE_TYPE);
      $("#M1_NI_REG_ADD_TYPE").val(tableLoader.M1_NI_REG_ADD_TYPE);
      $("#NI_REG_ADD_TYPE").val(tableLoader.NI_REG_ADD_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getGrossIncome() {
  try {
    $.getMaster("GET_GROSS_INCOME", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#GROSS_INCOME").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_GROSS_INCOME"] = masterData;
      }

      $("#GROSS_INCOME").val(tableLoader.GROSS_INCOME);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getResidentialStatus() {
  try {
    $.getMaster("GET_RESIDENTIAL_STATUS", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_RESIDENTIAL_STATUS master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $("#IND_RESIDENTIAL_STATUS").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_RESIDENTIAL_STATUS"] = masterData;
      }
      $("#IND_RESIDENTIAL_STATUS").val(tableLoader.IND_RESIDENTIAL_STATUS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getKYCAddressProof() {
  try {
    $.getMaster("GET_KYC_ADD_PROOF", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_KYC_ADD_PROOF master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $("#KYC_NAME_ADDR_PROOF_COMP").append(
            "<option id='" +
              masterData[i][0] +
              "' value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_KYC_ADD_PROOF"] = masterData;
      }
      $("#KYC_NAME_ADDR_PROOF").val(tableLoader.KYC_NAME_ADDR_PROOF);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getKYCIDProof() {
  try {
    $.getMaster("GET_KYC_ID_PROOF", [], function (headers, masterData) {
      if (masterData) {
        //console.log("GET_KYC_ID_PROOF master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
        for (var i in masterData) {
          $(
            "#KYC_NAME_ID_PROOF_COMP,#M1_NI_TAXRESIDENCE_IDTYPE,#NI_TAXRESIDENCE_IDTYPE,#TAX_RES_ID_TYPE"
          ).append(
            "<option id='" +
              masterData[i][0] +
              "' value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_KYC_ID_PROOF"] = masterData;
      }

      $("#KYC_NAME_ID_PROOF").val(tableLoader.KYC_NAME_ID_PROOF);
      $("#M1_NI_TAXRESIDENCE_IDTYPE").val(
        tableLoader.M1_NI_TAXRESIDENCE_IDTYPE
      );
      $("#NI_TAXRESIDENCE_IDTYPE").val(tableLoader.NI_TAXRESIDENCE_IDTYPE);
      $("#TAX_RES_ID_TYPE").val(tableLoader.TAX_RES_ID_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getPOIType() {
  try {
    $.getMaster("GET_POI_TYPE", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#POI_TYPE").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster("GET_POI_TYPE", [], function (headers, masterData) {
              if (masterData[0] && masterData[0] !== "undefined") {
                for (var i in masterData) {
                  $("#POI_TYPE").append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][2] +
                      "</option>"
                  );
                }

                masterDataGlobal["GET_POI_TYPE"] = masterData;
              }
              $("#POI_TYPE").val(tableLoader.POI_TYPE);
            });
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_POI_TYPE"] = masterData;
      }
      $("#POI_TYPE").val(tableLoader.POI_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getPOAType() {
  try {
    $.getMaster("GET_POA_TYPE", [], function (headers, masterData) {
      if (masterData) {
        if (masterData[0] && masterData[0] !== "undefined") {
          for (var i in masterData) {
            $("#POA_TYPE").append(
              "<option id=" +
                masterData[i][1] +
                " value='" +
                masterData[i][1] +
                "'>" +
                masterData[i][2] +
                "</option>"
            );
          }
        } else {
          try {
            $.getMaster("GET_POA_TYPE", [], function (headers, masterData) {
              if (masterData) {
                for (var i in masterData) {
                  $("#POA_TYPE").append(
                    "<option id=" +
                      masterData[i][1] +
                      " value='" +
                      masterData[i][1] +
                      "'>" +
                      masterData[i][2] +
                      "</option>"
                  );
                }

                masterDataGlobal["GET_POA_TYPE"] = masterData;
              }
              $("#POA_TYPE").val(tableLoader.POA_TYPE);
            });
          } catch (e) {
            alert(e + ": Error while loading master");
          }
        }

        masterDataGlobal["GET_POA_TYPE"] = masterData;
      }
      $("#POA_TYPE").val(tableLoader.POA_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getPhysicalStatus() {
  try {
    $.getMaster("GET_PHYSICAL_STATUS", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#PHYSICAL_STATUS").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_PHYSICAL_STATUS"] = masterData;
      }
      $("#PHYSICAL_STATUS").val(tableLoader.PHYSICAL_STATUS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getEmailFrequency() {
  try {
    $.getMaster("GET_FREQ_EMAIL", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#FREQ_EMAIL,#M1_NI_FREQ_EMAIL,#NI_FREQ_EMAIL").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_FREQ_EMAIL"] = masterData;
      }

      $("#FREQ_EMAIL").val(tableLoader.FREQ_EMAIL);
      $("#M1_NI_FREQ_EMAIL").val(tableLoader.M1_NI_FREQ_EMAIL);
      $("#NI_FREQ_EMAIL").val(tableLoader.NI_FREQ_EMAIL);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}
function getPrincipalOnMaturity() {
  try {
    $.getMaster(
      "GET_ACO_MS_PAY_PRINC_MATURITY",
      [],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $(
              "#M1_NI_FD_AMTONMATURITY,#M1_NI_FD_INTERESTONMATURITY,#NI_FD_AMTONMATURITY,#NI_FD_INTERESTONMATURITY,#NI_RD_AMTONMATURITY,#M1_NI_RD_AMTONMATURITY"
            ).append(
              "<option id=" +
                masterData[i][0] +
                " value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }

          masterDataGlobal["GET_ACO_MS_PAY_PRINC_MATURITY"] = masterData;
        }

        $("#M1_NI_FD_AMTONMATURITY").val(tableLoader.M1_NI_FD_AMTONMATURITY);
        $("#M1_NI_FD_INTERESTONMATURITY").val(
          tableLoader.M1_NI_FD_INTERESTONMATURITY
        );
        $("#NI_FD_AMTONMATURITY").val(tableLoader.NI_FD_AMTONMATURITY);
        $("#NI_FD_INTERESTONMATURITY").val(
          tableLoader.NI_FD_INTERESTONMATURITY
        );
        $("#NI_RD_AMTONMATURITY").val(tableLoader.NI_RD_AMTONMATURITY);
        $("#M1_NI_RD_AMTONMATURITY").val(tableLoader.M1_NI_RD_AMTONMATURITY);
      }
    );
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getNatureOfBusiness() {
  try {
    $.getMaster("GET_NATURE_OF_BUSINESS", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $(
            "#M1_NATURE_OF_BUSINESS,#NATURE_OF_BUSINESS\n\
                        "
          ).append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_NATURE_OF_BUSINESS"] = masterData;
      }
      $("#M1_NATURE_OF_BUSINESS").val(tableLoader.M1_NATURE_OF_BUSINESS);
      $("#NATURE_OF_BUSINESS").val(tableLoader.NATURE_OF_BUSINESS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getNatureOfIndustry() {
  try {
    $.getMaster("GET_NATURE_OF_INDUSTRIES", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $(
            "#M1_NATURE_OF_INDUSTRY,#NATURE_OF_INDUSTRY\n\
                        "
          ).append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_NATURE_OF_BUSINESS"] = masterData;
      }
      $("#M1_NATURE_OF_INDUSTRY").val(tableLoader.M1_NATURE_OF_INDUSTRY);
      $("#NATURE_OF_INDUSTRY").val(tableLoader.NATURE_OF_INDUSTRY);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function getCountryList() {
  try {
    $.getMaster("GET_COUNTRY_LIST", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#M1_NIRESI_COUNTRY,#NATURE_OF_BUSINESS").append(
            "<option id=" +
              masterData[i][1] +
              " value='" +
              masterData[i][1] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }

      $("#M1_NIRESI_COUNTRY").val(tableLoader.M1_NIRESI_COUNTRY);
      $("#NATURE_OF_BUSINESS").val(tableLoader.NATURE_OF_BUSINESS);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function copyToDescription() {
  var exceptionVal = $("#EXCEPTION").val();
  if (
    exceptionVal !== null ||
    exceptionVal !== "" ||
    exceptionVal !== "Select As Default"
  ) {
    $("#DESCRIPTION").val($("#EXCEPTION").val());
  } else {
    $("#DESCRIPTION").val("");
  }
}

function getExceptionList() {
  //debugger;
  $.getMaster("ACO_GET_EXCEPTION_LIST", [], function (headers, masterData) {
    var j = 1;
    for (var i in masterData) {
      $("#EXCEPTION").append(
        "<option id=" +
          j +
          " value='" +
          masterData[i] +
          "'>" +
          masterData[i] +
          "</option>"
      );
      j++;
    }

    masterDataGlobal["ACO_GET_EXCEPTION_LIST"] = masterData;
    $("#EXCEPTION").val(tableLoader.EXCEPTION);
  });
}

function selectDepositType() {
  //debugger;
  $("#NI_DEPOSIT_TYPE").change(function () {
    if ($(this).val() === "FD") {
      $("#NIRecurringDepositHead").hide();
      $("#NIRecurringDepositBody").hide();
      $("#NIFDHead").show();
      $("#NIFDBody").show();
      $("#NIMaturityRenewalHead").show();
      $("#NIMaturityRenewalBody").show();
      $(".recurringDeposit").hide();
      $(".fixedDeposit").show();
      //            $("#maturityHead").show();
      //            $("#maturityBody").show();
    } else if ($(this).val() === "RD") {
      $("#NIFDHead").hide();
      $("#NIFDBody").hide();
      $("#NIRecurringDepositHead").show();
      $("#NIRecurringDepositBody").show();
      $("#NIMaturityRenewalHead").show();
      $("#NIMaturityRenewalBody").show();
      $(".recurringDeposit").show();
      $(".fixedDeposit").hide();
      //            $("#maturityHead").show();
      //            $("#maturityBody").show();
    } else {
      $("#NIFDHead").hide();
      $("#NIFDBody").hide();
      $("#NIRecurringDepositHead").hide();
      $("#NIRecurringDepositBody").hide();
      $("#NIMaturityRenewalHead").hide();
      $("#NIMaturityRenewalBody").hide();
      $(".recurringDeposit").hide();
      $(".fixedDeposit").hide();
      //            $("#maturityHead").hide();
      //            $("#maturityBody").hide();
    }
  });
  if (tableLoader.ADDNL_FORM_TYPE === "FD") {
    $(".fixedDeposit").show();
    $(".recurringDeposit").remove();
    $("#NIMaturityRenewalHead").show();
    $("#NIMaturityRenewalBody").show();
    //        $("#maturityHead").show();
    //        $("#maturityBody").show();
  } else if (tableLoader.ADDNL_FORM_TYPE === "RD") {
    $(".fixedDeposit").remove();
    $(".recurringDeposit").show();
    $("#NIMaturityRenewalHead").show();
    $("#NIMaturityRenewalBody").show();
    //        $("#maturityHead").show();
    //        $("#maturityBody").show();
  } else {
    $(".fixedDeposit").remove();
    $(".recurringDeposit").remove();
    $("#NIMaturityRenewalHead").remove();
    $("#NIMaturityRenewalBody").remove();
    //        $("#maturityHead").hide();
    //        $("#maturityBody").hide();
  }
}

function postLoadOverride() {}

function masterForStateBasedOnCountry(countryId, countryVal) {
  //debugger;
  var stateId;
  if (countryId === "COUNTRY_RESI") {
    stateId = "STATE_RESI";
  } else if (countryId === "COUNTRY_PERM") {
    stateId = "STATE_PERM";
  } else if (countryId === "COUNTRY_OFF") {
    stateId = "STATE_OFF";
  } else if (countryId === "FATCA_COUNTRY") {
    stateId = "FATCA_STATE";
  }

  if (countryVal) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryVal],
      function (headers, masterData) {
        $("#" + stateId).html("");
        $("#" + stateId).html(
          " <option selected='Select' value='''>Select</option>"
        );
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
    );
  }
}

function getBSRSecondLevelsMaster(bsrFirstId, bsrFirstValue) {
  //debugger;
  if (bsrFirstValue) {
    $.getMaster(
      "GET_BSR_SECOND",
      [bsrFirstValue],
      function (headers, masterData) {
        if (masterData) {
          $("#BSR_SECOND").html("");
          $("#BSR_SECOND").html("<option  value=''>Select</option>");
          for (var i in masterData) {
            $("#BSR_SECOND").append(
              "<option id='" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
  }
}

function getBSRThirdLevelsMaster(bsrSecondId, bsrSecondVal, bsrFirstVal) {
  if (bsrSecondVal && bsrFirstVal) {
    $.getMaster(
      "GET_BSR_THIRD",
      [bsrFirstVal, bsrSecondVal],
      function (headers, masterData) {
        if (masterData) {
          $("#BSR_THIRD").html("");
          $("#BSR_THIRD").html("<option  value=''>Select</option>");
          for (var i in masterData) {
            $("#BSR_THIRD").append(
              "<option id='" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
          //$("#" +bsrThird).val(tableLoader[bsrThird]);
        }
      }
    );
  }
}

function getCustomerRelationShip(custRelCode, custRelValue, accRelValue) {
  //debugger;
  if (accRelValue) {
    $.getMaster(
      "ACO_GET_CUSTRELCODE_FINACLE",
      [accRelValue],
      function (headers, masterData) {
        if (masterData) {
          $("#" + custRelCode).html("");
          $("#" + custRelCode).html("<option  value=''>Select</option>");
          for (var i in masterData) {
            //                    if (masterData[i][0] === "1") {
            //                        $("#" + custRelCode).append("<option id='" + masterData[i][0] + "'  value='" + masterData[i][0] + "' hidden>" + masterData[i][1] + "</option>");
            //                    } else {
            //                        $("#" + custRelCode).append("<option id='" + masterData[i][0] + "'  value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
            //
            //                    }
            if (
              $("#FORM_TYPE").val() === "Individual" ||
              $("#FORM_TYPE").val() === "NRI"
            ) {
              if (accRelValue === "B") {
                var custRelValue = masterData[i][0];
                var custRelName = masterData[i][1];
                //                            if (custRelValue === "1") {
                //                                custRelName = "JOINT ACCOUNT HOLDER PRIMARY";
                //                            } else if (custRelValue === "2") {
                //                                custRelName = "JOINT ACCOUNT HOLDER SECONDARY";
                //                            }

                $("#" + custRelCode).append(
                  "<option id='" +
                    custRelValue +
                    "'  value='" +
                    custRelValue +
                    "'>" +
                    custRelName +
                    "</option>"
                );
              } else {
                $("#" + custRelCode).append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            } else if ($("#FORM_TYPE").val() === "Non Individual") {
              if (masterData[i][0] === "1") {
                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "' hidden>" +
                    masterData[i][1] +
                    "</option>"
                );
              } else {
                $("#IND_RELATIONSHIP_CODE").append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          }
        }
      }
    );
  }
}

var POIPOAMap = new Object();
function fillFormFields(clickedRadio, event) {
  debugger;
  var element = clickedRadio.closest("tr");
  if (element[0] === undefined) {
    alert("Please Select a row");
    return;
    processField_CustType = "";
  }
  if ($("#CONSTITUTION").val() !== "10") {
    if (
      $.getValue("FORM_TYPE") === "Non Individual" &&
      $.getValue("NI_PAN_NUMBER") === ""
    ) {
      if (
        element.index() === 0 &&
        element.find(".IND_IS_EXISTING").text() === "Existing"
      ) {
        $.setValue("NI_PROPRIETOR_CIF", element.find(".IND_CIF_NUMBER").text());
      }
    }
  }

  processField_CustType = "CUST_" + (element.index() + 1);
  gridEleIndex = element.index();
  refreshDMS();
  if ($.isInActivities("ACO_DVU,ACO_Maker,ACO_Checker")) {
    if (docList) {
      zoningPerFormType("CUST_" + (element.index() + 1), docList);
    }
    //registerZoningFields();
  }

  if ($.isInActivities("ACO_QC")) {
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    getIndividualTaxResidence($.getActivity(), elementIndex);
    getDifferingData("GET_DIFFERING_DATA");
  }

  var bsrFirst;
  $(element)
    .find("td")
    .each(function () {
      var idName = $(this).attr("class");
      var spanName = idName + "_SPAN";
      if (idName === "IND_IS_EXISTING" && $(this).text() === "Existing") {
        $("#reKycDiv").show();
      } else if (idName === "IND_IS_EXISTING" && $(this).text() === "New") {
        $("#reKycDiv").hide();
      }

      if (
        idName === "COUNTRY_RESI" ||
        idName === "COUNTRY_PERM" ||
        idName === "COUNTRY_OFF" ||
        idName === "FATCA_COUNTRY"
      ) {
        masterForStateBasedOnCountry(idName, $(this).text());
      }

      if (idName === "BSR_FIRST") {
        bsrFirst = $(this).text();
        getBSRSecondLevelsMaster(idName, $(this).text());
      }

      if (idName === "BSR_SECOND") {
        getBSRThirdLevelsMaster(idName, $(this).text(), bsrFirst);
      }

      if (idName === "IND_RELATIONSHIP_CODE") {
        getCustomerRelationShip(
          idName,
          $(this).text(),
          tableLoader.ACCOUNT_RELN_CODE
        );
      }

      if (
        idName === "KYC_NAME_ID_PROOF" ||
        idName === "KYC_NUM_ID_PROOF" ||
        idName === "KYC_EXPIRYDATE" ||
        idName === "KYC_NAME_ADDR_PROOF" ||
        idName === "KYC_NUM_ADDR_PROOF" ||
        idName === "KYC_ADDPROOF_EXPDATE"
      ) {
        POIPOAMap[idName] = $(this).text();
      }

      if (
        $.isInActivities(
          "ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction"
        ) &&
        idName === "IND_AADHAR_NUMBER"
      ) {
        if ($(this).text() !== null && $(this).text() !== "") {
          $("#IND_AADHAR_NUMBER").css("-webkit-text-security", "");
        }
      }

      if (idName === "FATCA_APPLICABLE") {
        if ($(this).text() === "1") {
          $(".fatcaIndi").each(function () {
            $("#" + $(this).attr("id")).attr("disabled", false);
          });
        } else {
          $(".fatcaIndi").each(function () {
            $("#" + $(this).attr("id")).attr("disabled", true);
          });
        }
      }

      if ($(this).attr("typeCheck") === "checkBoxField") {
        if ($(this).text() === "Y" || $(this).text() === "checked") {
          $("#" + $(this).attr("class")).prop("checked", "checked");
          if (!$.isInActivities("ACO_QC,ACO_Checker,ACO_Maker")) {
            if ($("#OTHERDETAILS_FORM_SIXTY").prop("checked")) {
              //$("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
              $("#IND_PAN_NUMBER").prop("disabled", true);
            } else {
              //$("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVU");
              $("#IND_PAN_NUMBER").prop("disabled", false);
            }
          }
        } else {
          $("#" + $(this).attr("class")).prop("checked", false);
        }
      } else {
        $("#" + $(this).attr("class")).val($(this).text());
      }

      //NRI SAVINGS VALIDATION------------------------
      if ($.isInActivities("ACO_DVU") && idName === "IND_RESIDENTIAL_STATUS") {
        if (
          tableLoader.FORM_TYPE === "NRI" &&
          tableLoader.ADDNL_FORM_TYPE === "Savings" &&
          tableLoader.ACCOUNT_RELN_CODE === "A" &&
          $("#IND_RELATIONSHIP_CODE").val() === "2"
        ) {
          $("#IND_RESIDENTIAL_STATUS").val("1").prop("disabled", true);
        } else {
          $("#" + $(this).attr("class"))
            .val($(this).text())
            .prop("disabled", false);
        }
      }

      if ($(this).text() !== null && $(this).text() !== "") {
        if (document.getElementById(spanName)) {
          document.getElementById(spanName).innerHTML = "";
        }
      }

      //COUNTRY CODE INDIA FOR INDI AND NON INDI - code added
      if (idName === "IND_COUNTRY_CODE") {
        if (
          $("#FORM_TYPE").val() === "Individual" ||
          tableLoader.FORM_TYPE === "Individual" ||
          $("#FORM_TYPE").val() === "Non Individual" ||
          tableLoader.FORM_TYPE === "Non Individual"
        ) {
          $("#" + idName)
            .val("+91")
            .prop("disabled", true);
        } else {
          $("#" + idName)
            .val($(this).text())
            .prop("disabled", false);
        }
      }
    });
  //FORM 60 AND PAN NUMBER=======================================
  if (!$.isInActivities("ACO_QC,ACO_Checker,ACO_Maker")) {
    if ($(element).find(".OTHERDETAILS_FORM_SIXTY").text() === "Y") {
      $("#IND_PAN_NUMBER").prop("disabled", true);
    } else {
      $("#IND_PAN_NUMBER").prop("disabled", false);
    }
  }

  //============PERM AND RESIDENCE ADD============================
  if ($(element).find(".PERM_SAME_RES").text() === "Y") {
    $(".permAdd").each(function () {
      var id = $(this).attr("id");
      $("#" + id).prop("disabled", true);
    });
  } else {
    $(".permAdd").each(function () {
      var id = $(this).attr("id");
      $("#" + id).prop("disabled", false);
    });
  }

  //validateFormFromTable(clickedRadio);

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    getIndividualTaxResidence($.getActivity(), elementIndex);
  }

  minorDivHideShow();
  if (!$.isInActivities("ACO_QC")) {
    personalDetailsValidation();
  }

  fnCheckRadioBtn(
    clickedRadio,
    "CUSTDETAILS_TABLE",
    "CUSTDETAILS_ADD",
    element
  );
  if ($.isInActivities("ACO_Maker,ACO_Checker")) {
    getPOIValues("POI", POIPOAMap);
    getPOAValues("POA", POIPOAMap);
  }

  //SMILE ACCOUNT
  if (
    $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy") &&
    $("#SCHEME_CODE").val() === "1018"
  ) {
    $("#IND_RELATIONSHIP_CODE").val("1");
  }
  if ($.isInActivities("ACO_DVU") && $("#SCHEME_CODE").val() === "1018") {
    $("#IND_PAN_NUMBER").prop("disabled", false);
    $("#OTHERDETAILS_FORM_SIXTY").prop("disabled", true);
  }

  //MINOR ALONE ACCOUNT AND NEXT GEN ACCOUNT- PAN AND FORM SIXTY NOT MANDATORY==================================
  if (
    (tableLoader.ACCOUNT_RELN_CODE === "MA" ||
      tableLoader.SCHEME_CODE === "1016") &&
    $.isInActivities("ACO_DVU")
  ) {
    $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
    $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
    $("#OTHERDETAILS_FORM_SIXTY").removeClass("requiredIndiCustTableDVU");
    $("#OTHERDETAILS_FORM_SIXTY").removeClass("requiredIndiCustTableDVUSave");
    $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVU");
    $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
    $("#IND_LINK_PAN_GUARDIAN").removeClass("requiredIndiCustTableDVU");
    $("#IND_LINK_PAN_GUARDIAN").removeClass("requiredIndiCustTableDVUSave");
  }
  if (
    (tableLoader.ACCOUNT_RELN_CODE === "MI" ||
      tableLoader.ACCOUNT_RELN_CODE === "MG" ||
      tableLoader.ACCOUNT_RELN_CODE === "MS") &&
    $.isInActivities("ACO_DVU")
  ) {
    $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
    $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
    $("#OTHERDETAILS_FORM_SIXTY").removeClass("requiredIndiCustTableDVU");
    $("#OTHERDETAILS_FORM_SIXTY").removeClass("requiredIndiCustTableDVUSave");
    $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVU");
    $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if ($("#FORM_TYPE").val() === "NRI") {
      if (
        $("#ADDNL_FORM_TYPE").val() === "Savings" &&
        $("#ACCOUNT_RELN_CODE").val() === "A"
      ) {
        if ($("#IND_RELATIONSHIP_CODE").val() === "2") {
          $("#IND_COUNTRY_CODE").prop("disabled", true);
        } else {
          $("#IND_COUNTRY_CODE").prop("disabled", false);
        }
      } else {
        $("#IND_COUNTRY_CODE").prop("disabled", false);
      }
    } else {
      $("#IND_COUNTRY_CODE").prop("disabled", true);
    }
  }

  //CIF NUMBER DISABLED FOR NEW
  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if ($("#IND_IS_EXISTING").val() === "Existing") {
      $("#IND_CIF_NUMBER").prop("disabled", false);
    } else {
      $("#IND_CIF_NUMBER").prop("disabled", true);
    }
  }

  if ($.getActivity() === "ACO_QC") {
    if ($(".SALARYACC_IS_STAFF").text().charAt(gridEleIndex) === "3") {
      $("#IND_STAFF_DESIGNATION_div").show();
      $("#addEmployee").show();
      $("#IND_STAFF_DESIGNATION").attr("disabled", false);
      $("#IND_STAFF_DESIGNATION option").attr("disabled", false);
      $("#IND_STAFF_DESIGNATION").val(
        $("#IND_STAFF_DESIGNATION option:first").val()
      );
      $("#addEmployee").prop("disabled", false);
    } else {
      $("#IND_STAFF_DESIGNATION_div").hide();
      $("#addEmployee").hide();
      $("#IND_STAFF_DESIGNATION").prop("disabled", true);
      $("#addEmployee").prop("disabled", true);
    }
  } else {
    $("#IND_STAFF_DESIGNATION_div").hide();
    $("#addEmployee").hide();
    $("#IND_STAFF_DESIGNATION").prop("disabled", true);
    $("#addEmployee").prop("disabled", true);
  }
}

function complainceCheckBox() {
  //debugger;
  if ($("#DECISION_DVU").val() === "Compliance_Queue") {
    $("#OTHERDETAILS_DECISION_DVU_DIV").html("");
    $("#OTHERDETAILS_DECISION_DVU_DIV").show();
    if (complianceCheckboxCreationCount === 0) {
      createCheckboxForCompliance();
      complianceCheckboxCreationCount++;
    }
  } else {
    $("#OTHERDETAILS_DECISION_DVU_DIV").hide();
  }
}

function createCheckboxForCompliance() {
  if ($.getActivity() === "ACO_DVU") {
    //debugger;
    $("#OTHERDETAILS_DECISION_DVU_DIV").html("");
    for (var i = 0; i < complianceReasonList.length; i++) {
      var element = document.getElementById("OTHERDETAILS_DECISION_DVU_DIV");
      var checkbox = document.createElement("input");
      checkbox.type = "checkbox";
      checkbox.name = complianceReasonList[i];
      checkbox.value = complianceReasonList[i];
      checkbox.id = i + "_ID";
      var x = i + "_ID";
      checkbox.onclick = function () {
        saveCheckedValues(this.id, complianceReasonList);
      };
      var label = document.createElement("compliane_value");
      var linebreak = document.createElement("br");
      label.htmlFor = complianceReasonList[i];
      label.appendChild(document.createTextNode(" " + complianceReasonList[i]));
      element.appendChild(checkbox);
      element.appendChild(label);
      element.appendChild(linebreak);
    }
  }
}

function saveCheckedValues(checkBoxId, checkBoxNameList) {
  //debugger;
  if ($("#" + checkBoxId).prop("checked")) {
    var x = $("#" + checkBoxId).attr("name");
    complianceReasonSelectedList.push(x);
    if ($("#" + checkBoxId).val() === "OTHERS") {
      $("#otherValComp").show();
      $("#otherValCompLabel").show();
      if (
        $("#otherValComp").val() === null ||
        $("#otherValComp").val() === ""
      ) {
        document.getElementById("otherValComp_SPAN").innerHTML =
          "Field cannot be empty";
      }
    }
  } else {
    var x = $("#" + checkBoxId).attr("name");
    complianceReasonSelectedList.splice(
      $.inArray(x, complianceReasonSelectedList),
      1
    );
    if ($("#" + checkBoxId).val() === "OTHERS") {
      $("#otherValComp").hide();
      $("#otherValCompLabel").hide();
      document.getElementById("otherValComp_SPAN").innerHTML = "";
    }
  }
  //alert(complianceReasonSelectedList);
}

function fillCompCustDetails(clickedRadio, event) {
  //debugger;
  var element = clickedRadio.closest("tr");
  $(element)
    .find("td")
    .each(function () {
      var idName = $(this).attr("class");
      var kycId = idName + "_COMP";
      $("#" + kycId).val($(this).text());
    });
}

function getCustomerDetailsForCompliance() {
  var custDataForComp = new Object();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetCustomerDetailsForCompliance",
      data: "pInstId=" + pinstIdForSubmit,
      success: function (data) {
        //debugger;
        custDataForComp = JSON.parse(data);
        for (var i in custDataForComp) {
          var custData = custDataForComp[i];
          $("#CUSTDETAILS_TABLE_TBODY").append(
            "<tr>\n\
                                                         <td><input onclick = 'fillCompCustDetails($(this),event)' style = 'margin-left: 20px;' type='radio' name='radio'  class='radio'/></td>\n\
                                                         <td class = 'IND_FIRST_NAME' >" +
              (!custData["IND_FIRST_NAME"] ? "" : custData["IND_FIRST_NAME"]) +
              "</td>\n\
                                                         <td class = 'IND_MIDDLE_NAME' >" +
              (!custData["IND_MIDDLE_NAME"]
                ? ""
                : custData["IND_MIDDLE_NAME"]) +
              "</td>\n\
                                                         <td class  = 'IND_LAST_NAME' >" +
              (!custData["IND_LAST_NAME"] ? "" : custData["IND_LAST_NAME"]) +
              "</td>\n\
                                                         <td class = 'IND_DOB'>" +
              (!custData["IND_DOB"] ? "" : custData["IND_DOB"]) +
              "</td>\n\
                                                         <td class = 'IND_PAN_NUMBER' >" +
              (!custData["IND_PAN_NUMBER"] ? "" : custData["IND_PAN_NUMBER"]) +
              "</td>\n\\n\\n\
                                                        <td class = 'OTHERDETAILS_FORM_SIXTY' >" +
              (!custData["OTHERDETAILS_FORM_SIXTY"]
                ? ""
                : custData["OTHERDETAILS_FORM_SIXTY"]) +
              "</td>\n\\n\
                                                         <td class = 'IND_AADHAR_NUMBER' >" +
              (!custData["IND_AADHAR_NUMBER"]
                ? ""
                : custData["IND_AADHAR_NUMBER"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_NAME_ID_PROOF' >" +
              (!custData["KYC_NAME_ID_PROOF"]
                ? ""
                : custData["KYC_NAME_ID_PROOF"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_NUM_ID_PROOF' >" +
              (!custData["KYC_NUM_ID_PROOF"]
                ? ""
                : custData["KYC_NUM_ID_PROOF"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_OTHERIDPROOF' >" +
              (!custData["KYC_OTHERIDPROOF"]
                ? ""
                : custData["KYC_OTHERIDPROOF"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_EXPIRYDATE' >" +
              (!custData["KYC_EXPIRYDATE"] ? "" : custData["KYC_EXPIRYDATE"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_NAME_ADDR_PROOF' >" +
              (!custData["KYC_NAME_ADDR_PROOF"]
                ? ""
                : custData["KYC_NAME_ADDR_PROOF"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_NUM_ADDR_PROOF' >" +
              (!custData["KYC_NUM_ADDR_PROOF"]
                ? ""
                : custData["KYC_NUM_ADDR_PROOF"]) +
              "</td>\n\\n\
                    <td hidden class = 'KYC_OTHER_ADDRPROOF' >" +
              (!custData["KYC_OTHER_ADDRPROOF"]
                ? ""
                : custData["KYC_OTHER_ADDRPROOF"]) +
              "</td>\n\
                                                         <td hidden class = 'KYC_ADDPROOF_EXPDATE' >" +
              (!custData["KYC_ADDPROOF_EXPDATE"]
                ? ""
                : custData["KYC_ADDPROOF_EXPDATE"]) +
              "</td>\n\
                                                         </tr>"
          );
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception Occured deleting Exception values from DB" + e);
    $body.removeClass("loading");
    // alert("====Exception Occured deleting Exception values from DB======");
  }
}

function insertExceptionIntoAuditTable() {
  //debugger;
  $.registerCreateComplex("INSERT_INTO_ACO_EXCEPTION_DVU_AUDIT")
    .setData(function () {
      //debugger;
      var complexData = new Array();
      $("#exceptionBody tr").each(function () {
        var row = [];
        var dateToInsert = $(this).find("td:eq(5)").text();
        var dateToInsertSplit = dateToInsert.split("-");
        var dateToInsertFinal =
          dateToInsertSplit[2] +
          "-" +
          dateToInsertSplit[1] +
          "-" +
          dateToInsertSplit[0];
        if (
          dateToInsert !== null &&
          dateToInsert !== "" &&
          dateToInsert !== "undefined"
        ) {
          var date = new Date(dateToInsertFinal);
          var finalDate = date.toLocaleDateString();
          var fullDate = new Date();
          var twoDigitMonth =
            fullDate.getMonth().length + 1 === 1
              ? fullDate.getMonth() + 1
              : "0" + (fullDate.getMonth() + 1);
          // var currentDateTime = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
          row.push($.trim($(this).find("td:eq(4)").text()));
          row.push($.trim($(this).find("td:eq(1)").text()));
          row.push($.trim($(this).find("td:eq(2)").text()));
          row.push($.trim($(this).find("td:eq(3)").text()));
          row.push(finalDate);
          complexData.push(row);
        }
      });
      if (complexData.length > 0) {
        return complexData;
      } else {
        return null;
      }
    })
    .onComplete(function (generatedPrimaryKeyComplex) {
      console.log("completed");
    });
}
function newButtonFunction() {
  //debugger;
  $("#EXCEPTION").val("");
  $("#DESCRIPTION").val("");
  $("#DESC_COMMENTS").val("");
  $("#detailsMainDiv textarea").val("");
  document.getElementById("raiseException").disabled = false;
  document.getElementById("commitExceptionButton").disabled = false;
  document.getElementById("modifyException").disabled = true;
  document.getElementById("updateExceptionButton").disabled = true;
}

function fullExceptionPageFunctionality() {
  //debugger;
  if (exceptionCount === 0) {
    getExceptionDetailsFromDB();
    exceptionCount++;
  }

  if ($("#exceptionTable tr").length > 1) {
    $("#exceptionTable").show();
    $("#divExceptionTab").show();
  } else {
    $("#exceptionTable").hide();
    // $("#divExceptionTab").hide();
  }

  //copyToDescription();

  $("#DESC_COMMENTS").val("");
  $("#EXCEPTION").val("");
  document.getElementById("modifyException").disabled = true;
  document.getElementById("raiseException").disabled = false;
  document.getElementById("clearExceptionButton").disabled = true;
  document.getElementById("undoExceptionButton").disabled = true;
  document.getElementById("updateExceptionButton").disabled = true;
  $("#raiseException").click(function () {
    //debugger;
    // document.getElementById("updateExceptionButton").disabled = true;
    var comments = $("#DESC_COMMENTS").val();
    var exception = $("#EXCEPTION").val();
    if (
      exception !== null &&
      exception !== "" &&
      exception !== "Select As Default"
    ) {
      if (comments !== null && comments !== "") {
        $("#DESC_COMMENTS").attr("disabled", "true");
        $("#EXCEPTION").attr("disabled", "true");
        copyValuesToDescription();
      } else {
        alert("Please enter comments.");
      }
    } else {
      alert("Please select exception to be raised");
    }

    $("#clearExceptionButton").show();
  });
  $("#clearExceptionButton").click(function () {
    document.getElementById("undoExceptionButton").disabled = false;
    $('#exceptionBody :input[type="checkbox"]:checked').each(function () {
      var statusVal = $(this).parent().parent().find("td:nth-child(4)").html();
      //if (statusVal === "REPLIED") {
      $(this).parent().parent().hide();
      objectHidedRow = $('#exceptionTable :input[type="checkbox"]:checked')
        .parent()
        .parent()
        .hide();
      $(this).addClass("hidden1");
      hidedRow = "CL";
      // }
      //            else {
      //               // alert("Raised Exception cannot be cleared");
      //            }
    });
  });
  $("#undoExceptionButton").click(function () {
    document.getElementById("raiseException").disabled = false;
    if (hidedRow === "CL") {
      objectHidedRow.show();
      $(objectHidedRow).each(function () {
        $(
          "#" + $(this).find('input[type="checkbox"]:checked').attr("id")
        ).removeClass("hidden1");
      });
      hidedRow = "U";
    }
  });
  //COMMIT BUTTON
  $("#commitExceptionButton").click(function () {
    document.getElementById("clearExceptionButton").disabled = true;
    document.getElementById("undoExceptionButton").disabled = true;
    if (hidedRow === "CL") {
      objectHidedRow.remove();
    }
    //deleteExceptionFromDB();
    insertExceptionIntoAuditTable();
    alert("Exception committed successfully.");
  });
  $("#newButton").click(function () {
    //debugger;
    $("#DESC_COMMENTS").prop("disabled", false);
    $("#EXCEPTION").prop("disabled", false);
    newButtonFunction();
  });
  //MODIFY BUTTON
  $("#modifyException").click(function () {
    var modifyCount = 0;
    $('#exceptionTable :input[type="checkbox"]:checked').each(function () {
      if ($(this).attr("class") !== "hidden1") {
        modifyCount++;
      }
    });
    if (modifyCount > 1) {
      alert("Please select a single row to modify");
    } else if (modifyCount === 0) {
      alert("Please select a single row to modify");
    } else {
      $("#DESC_COMMENTS").prop("disabled", false);
      $("#EXCEPTION").prop("disabled", false);
      document.getElementById("updateExceptionButton").disabled = false;
    }
  });
  //UPDATE BUTTON
  $("#updateExceptionButton").click(function () {
    //debugger;
    var cb = "id_" + c;
    var rb = "rowId_" + c;
    $("#noExceptionDiv").hide();
    document.getElementById("commitExceptionButton").disabled = false;
    document.getElementById("updateExceptionButton").disabled = true;
    document.getElementById("modifyException").disabled = true;
    var userName = $.getUserName();
    var activityName = $.getActivity();
    var date = $.getCurrentDate().toStringObject("dd-mm-yy");
    var commentsVal = $("#DESC_COMMENTS").val();
    $("#detailsMainDiv textarea").val("");
    $("#detailsMainDiv textarea").val(
      "\n\nRaised by " +
        userName +
        " at " +
        activityName +
        " on " +
        date +
        "\nComments : " +
        commentsVal +
        " \n\n"
    );
    $("#exceptionTable").append(
      "<tr  id = '" +
        rb +
        "'" +
        "style='width:100% ; border: 1px solid black  class = '' ;'>\n\
         <td  ><input  type='checkbox'id =" +
        "'" +
        cb +
        "'" +
        "onclick='onCheckCopyTableValues(this.id," +
        '"' +
        rb +
        '"' +
        ")'/></td>" +
        "<td id = '" +
        $("#EXCEPTION option:selected").attr("id") +
        "'>" +
        $("#DESCRIPTION").val() +
        "</td>" +
        "<td id = 'comments' >" +
        $("#DESC_COMMENTS").val() +
        "</td>" +
        "<td>RAISED</td>" +
        "<td>" +
        $.getUserName() +
        "</td>" +
        "<td>" +
        date +
        "</td> " +
        c++ +
        "</tr>"
    );
    // +"<td id = 'detailsException' >" +  $("#detailsMainDiv textarea").val() +"</td>" + c++ +"</tr>");

    $("#exceptionTable input[type = checkbox]:checked")
      .parent()
      .parent()
      .remove();
    $("#DESC_COMMENTS").prop("disabled", true);
    $("#EXCEPTION").prop("disabled", true);
  });
}

function compliancePageCoding() {
  $("#otherValComp").hide();
  $("#otherValCompLabel").hide();
  $("#OTHERDETAILS_DECISION_DVU_DIV").hide();
  if ($.isInActivities("ACO_Compliance")) {
    insertComplianceDocDetailsInDB();
  }

  if ($.isInActivities("ACO_DVU")) {
    deleteCompDocDetailsfromDB("comp");
  }

  if ($.isInActivities("ACO_Compliance")) {
    //debugger;
    getCustomerDetailsForCompliance();
  }

  $("#divComplianceTab").hide();
  //=============================COMPLAINCE IN DVU =================================================================================

  if ($.getActivity() === "ACO_DVU") {
    if ($.getValue("DECISION_COMPLIANCE") === "Approve") {
      //debugger;
      $.addActivityToolButton(
        "ComplianceButtonID",
        "Compliance",
        "5",
        "border-radius:4px"
      );
      $("#ComplianceButtonID_Button").parent().css("width", "170px");
      $("#ComplianceButtonID_Button").parent().css("width", "100px");
      $("#ComplianceButtonID_Button").css("background", "rgb(4, 48, 97)");
      $("#ComplianceButtonID_Button").css("color", "white");
      $("#ComplianceButtonID_Button").css("border", "none");
      $("#ComplianceButtonID_Button").css("font-weight", "540");
    }

    $("#ComplianceButtonID_Button").click(function () {
      //debugger;
      $("#ComplianceButtonID_Button").toggleClass("DataClickCompliance");
      if (this.className === "DataClickCompliance") {
        var complianceReasons = $.getValue("DVU_COMPLIANCE_REASONS_SAVE");
        if (complianceReasons !== null && complianceReasons) {
          var reasonSplit = complianceReasons.split(",");
          if (complianceCount === 0) {
            for (var i = 0; i < reasonSplit.length; i++) {
              var element = document.getElementById("complianceReasons_DIV");
              var checkbox = document.createElement("input");
              checkbox.type = "checkbox";
              checkbox.name = reasonSplit[i];
              checkbox.value = reasonSplit[i];
              checkbox.id = i + "_ID";
              var idCH = i + "_ID";
              //checkbox.onclick = function(){ saveCheckedValues(this.id ,complianceReasonList);};
              var label = document.createElement("compliane_reason");
              var linebreak = document.createElement("br");
              label.htmlFor = reasonSplit[i];
              label.appendChild(document.createTextNode(" " + reasonSplit[i]));
              element.appendChild(checkbox);
              element.appendChild(label);
              element.appendChild(linebreak);
              $("#" + idCH).prop("checked", "checked");
            }

            getCustomerDetailsForCompliance();
            getComplianceDocDetailsFromDB();
            complianceCount++;
          }
        }
        $("#divComplianceTab").show();
      } else {
        $("#divComplianceTab").hide();
      }
    });
  }

  //+++++++++++++++++++++++++++++COMPLIANCE PAGE ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  if ($.getActivity() === "ACO_Compliance") {
    //debugger;
    var complianceReasons = $.getValue("DVU_COMPLIANCE_REASONS_SAVE");
    if (complianceReasons !== null && complianceReasons) {
      var reasonSplit = complianceReasons.split(",");
      for (var i = 0; i < reasonSplit.length; i++) {
        var element = document.getElementById("complianceReasons_DIV");
        var checkbox = document.createElement("input");
        checkbox.type = "checkbox";
        checkbox.name = reasonSplit[i];
        checkbox.value = reasonSplit[i];
        checkbox.id = i + "_ID";
        var idCH = i + "_ID";
        //checkbox.onclick = function(){ saveCheckedValues(this.id ,complianceReasonList);};
        var label = document.createElement("compliane_reason");
        var linebreak = document.createElement("br");
        label.htmlFor = reasonSplit[i];
        label.appendChild(document.createTextNode(" " + reasonSplit[i]));
        element.appendChild(checkbox);
        element.appendChild(label);
        element.appendChild(linebreak);
        $("#" + idCH).prop("checked", "checked");
      }

      var element1 = document.getElementById("remarksDVU_DIV");
      var textbox = document.createElement("input");
      textbox.type = "text";
      textbox.name = "REMARKS DVU";
      textbox.value = tableLoader.REMARKS_DVU;
      textbox.id = "REMARKS_DVU";
      textbox.style = "width: 300px;height: 40px;";
      var label1 = document.createElement("remarksDVU_Label");
      var linebreak1 = document.createElement("br");
      label1.htmlFor = "DVU REMARKS";
      label1.style = "color: black;font-weight: 700;font-family: cursive;";
      label1.appendChild(document.createTextNode("DVU REMARKS"));
      //label1.appendChild(document.createTextNode(' '));
      element1.appendChild(label1);
      element1.appendChild(linebreak1);
      element1.appendChild(textbox);
    }

    $("#divComplianceTab").show();
    $("#OTHER_REMARKS_COMP").val($.getValue("otherValComp"));
    $("#OTHER_REMARKS_COMP").addClass("changed");
    //=========================INSERTING MULTIPLE DOCUMENTS AND DATES INTO DB===================================
    //==========ADDING NEW ROW ON PLUS BUTTON====================

    getComplianceDocDetailsFromDB();
    if ($("#PendingDocDatesTableBody tr").length < 1) {
      //     $("#PendingDocDatesTableBody").append("<tr><td><input type = 'checkbox' id = 'compCheckBoxId_0'/></td>\n\
      //                                                    <td><input type = 'text' id = 'compDocNameId_0'/></td>\n\
      //                                                   <td><input class = 'datePickerDynamic' type = 'text'" + "onclick = 'selectDatePicker1('datePickerDynamic')'" + "id = 'compDocDateId_0' /></td>\n\</tr>")
      //
      $("#PendingDocDatesTableBody").append(
        "<tr><td><input type = 'checkbox' id = 'compCheckBoxId_0'/></td>\n\
                                                    <td><input type = 'text' id = 'compDocNameId_0'/></td>\n\
                                                   <td><input class = 'datePickerForComp' type = 'text'" +
          " " +
          " id = 'compDocDateId_0' /></td>\n</tr>"
      );
      var today = new Date();
      $(".datePickerForComp").datepicker({
        defaultDate: new Date(90, 0, 1), //set the default date to Jan 1st 1990
        changeMonth: true,
        changeYear: true,
        autoHide: true,
        yearRange: "1930:2050", //set the range of years
        dateFormat: "dd-mm-yy", //set the format of the date
        minDate: today,
      });
    }

    $("#complainceTableAddPlus").click(function () {
      //debugger;
      var compCheckBoxId = "compCheckBoxId_" + counter;
      var compDocNameId = "compDocNameId_" + counter;
      var compDocDateId = "compDocDateId_" + counter;
      $("#PendingDocDatesTableBody").append(
        "<tr><td><input type = 'checkbox' id = '" +
          compCheckBoxId +
          "'/></td>\n\
                                                    <td><input type = 'text' id = '" +
          compDocNameId +
          "'/></td>\n\
                                                   <td><input class = 'datePickerForComp' type = 'text'" +
          " " +
          " id = '" +
          compDocDateId +
          "' /></td>\n</tr>"
      );
      counter++;
    });
    var today1 = new Date();
    $("body").on("focus", ".datePickerForComp", function () {
      //debugger;
      $(this).datepicker({
        defaultDate: new Date(90, 0, 1), //set the default date to Jan 1st 1990
        changeMonth: true,
        changeYear: true,
        autoHide: true,
        yearRange: "1930:2050", //set the range of years
        dateFormat: "dd-mm-yy", //set the format of the date
        minDate: today1,
      });
    });
    $("#commitCompliance").click(function () {
      alert("Data committed successfully");
      // deleteCompDocDetailsfromDB('delete');
    });
    $("#clearCompliance").click(function () {
      $("#PendingDocDatesTable input[type = checkbox]:checked")
        .parent()
        .parent()
        .remove();
    });
  }
}

function exceptionPageCoding() {
  if ($.isInActivities("ACO_DVU,ACO_Discrepancy")) {
    insertExceptionIntoDB();
  }
  $("#divExceptionTab").hide();
  if ($.getActivity() === "ACO_DVU") {
    //EXCEPTION PAGE DISPLAY
    //debugger;
    $.addActivityToolButton(
      "ExceptionButtonID",
      "Exception",
      "1",
      "border-radius:4px"
    );
    $("#ExceptionButtonID_Button").parent().css("width", "100px");
    $("#ExceptionButtonID_Button").css("background", "rgb(4, 48, 97)");
    $("#ExceptionButtonID_Button").css("color", "white");
    $("#ExceptionButtonID_Button").css("border", "none");
    $("#ExceptionButtonID_Button").css("font-weight", "540");
    $("#divExceptionTab").hide();
    if (exceptionCount === 0) {
      getExceptionDetailsFromDB();
      exceptionCount++;
    }

    $("#checkBoxFullId").click(function (e) {
      $(this)
        .closest("table")
        .find("td input:checkbox")
        .prop("checked", this.checked);
      document.getElementById("clearExceptionButton").disabled = false;
      document.getElementById("undoExceptionButton").disabled = false;
    });
    if ($("#exceptionTable tr").length > 1) {
      if (
        tableLoader.DECISION_DISCREPANCY === "Send_To_DVU" ||
        tableLoader.DECISION_DISCREPANCY === "ReScan"
      ) {
        $("#resolveButton").show();
      } else {
        $("#resolveButton").hide();
      }

      $("#ExceptionButtonID_Button").hide();
      if (ExceptionOnLoadCount === 0) {
        $("#exceptionTable").show();
        $("#divExceptionTab").show();
        //---------------------FUNCTIONALITY --------------------------------------------------------

        $("#DESC_COMMENTS").val("");
        $("#EXCEPTION").val("");
        document.getElementById("modifyException").disabled = true;
        document.getElementById("raiseException").disabled = false;
        document.getElementById("clearExceptionButton").disabled = true;
        document.getElementById("undoExceptionButton").disabled = true;
        document.getElementById("updateExceptionButton").disabled = true;
        $("#resolveButton").click(function () {
          //debugger;
          $('#exceptionBody :input[type="checkbox"]:checked').each(function () {
            var status = $(this)
              .parent()
              .parent()
              .find("td:nth-child(4)")
              .html();
            if (status !== "REPLIED") {
              $(this)
                .parent()
                .parent()
                .find("td:nth-child(4)")
                .html("RESOLVED");
              $(this)
                .parent()
                .parent()
                .find("td:nth-child(4)")
                .css("color", "green");
            }
          });
        });
        $("#raiseException").click(function () {
          //debugger;
          // document.getElementById("updateExceptionButton").disabled = true;
          var comments = $("#DESC_COMMENTS").val();
          var exception = $("#EXCEPTION").val();
          if (
            exception !== null &&
            exception !== "" &&
            exception !== "Select As Default"
          ) {
            if (comments !== null && comments !== "") {
              $("#DESC_COMMENTS").attr("disabled", "true");
              $("#EXCEPTION").attr("disabled", "true");
              copyValuesToDescription();
            } else {
              alert("Please enter comments.");
            }
          } else {
            alert("Please select exception to be raised");
          }

          $("#clearExceptionButton").show();
        });
        $("#clearExceptionButton").click(function () {
          document.getElementById("undoExceptionButton").disabled = false;
          $('#exceptionBody :input[type="checkbox"]:checked').each(function () {
            var statusVal = $(this)
              .parent()
              .parent()
              .find("td:nth-child(4)")
              .html();
            //if (statusVal === "REPLIED") {

            $(this).parent().parent().hide();
            objectHidedRow = $('#exceptionBody :input[type="checkbox"]:checked')
              .parent()
              .parent()
              .hide();
            $(this).addClass("hidden1");
            hidedRow = "CL";
          });
        });
        $("#undoExceptionButton").click(function () {
          document.getElementById("raiseException").disabled = false;
          if (hidedRow === "CL") {
            objectHidedRow.show();
            $(objectHidedRow).each(function () {
              $(
                "#" + $(this).find('input[type="checkbox"]:checked').attr("id")
              ).removeClass("hidden1");
            });
            hidedRow = "U";
          }
        });
        //COMMIT BUTTON
        $("#commitExceptionButton").click(function () {
          document.getElementById("clearExceptionButton").disabled = true;
          document.getElementById("undoExceptionButton").disabled = true;
          if (hidedRow === "CL") {
            objectHidedRow.remove();
          }
          //deleteExceptionFromDB();
          insertExceptionIntoAuditTable();
          alert("Exception committed successfully.");
        });
        $("#newButton").click(function () {
          //debugger;
          $("#DESC_COMMENTS").prop("disabled", false);
          $("#EXCEPTION").prop("disabled", false);
          newButtonFunction();
        });
        //MODIFY BUTTON
        $("#modifyException").click(function () {
          var modifyCount = 0;
          $('#exceptionTable :input[type="checkbox"]:checked').each(
            function () {
              if ($(this).attr("class") !== "hidden1") {
                modifyCount++;
              }
            }
          );
          if (modifyCount > 1) {
            alert("Please select a single row to modify");
          } else if (modifyCount === 0) {
            alert("Please select a single row to modify");
          } else {
            $("#DESC_COMMENTS").prop("disabled", false);
            $("#EXCEPTION").prop("disabled", false);
            document.getElementById("updateExceptionButton").disabled = false;
          }
        });
        //UPDATE BUTTON
        $("#updateExceptionButton").click(function () {
          //debugger;
          var cb = "id_" + c;
          var rb = "rowId_" + c;
          $("#noExceptionDiv").hide();
          document.getElementById("commitExceptionButton").disabled = false;
          document.getElementById("updateExceptionButton").disabled = true;
          document.getElementById("modifyException").disabled = true;
          var userName = $.getUserName();
          var activityName = $.getActivity();
          var currentDateTimeFinal = new Date();
          var date = $.getCurrentDate().toStringObject("dd-mm-yy");
          var currentDateTime =
            currentDateTimeFinal.getDate() +
            "-" +
            (currentDateTimeFinal.getMonth() + 1) +
            "-" +
            currentDateTimeFinal.getFullYear();
          var commentsVal = $("#DESC_COMMENTS").val();
          $("#detailsMainDiv textarea").val("");
          $("#detailsMainDiv textarea").val(
            "\n\nRaised by " +
              userName +
              " at " +
              activityName +
              " on " +
              currentDateTime +
              "\nComments : " +
              commentsVal +
              " \n\n"
          );
          //        $("#exceptionTable input[type = checkbox]:checked")
          //                                        .parent().parent().remove();
          $("#exceptionTable").append(
            "<tr  id = '" +
              rb +
              "'" +
              "style='width:100% ; border: 1px solid black  class = '' ;'>\n\
         <td  ><input  type='checkbox'id =" +
              "'" +
              cb +
              "'" +
              "onclick='onCheckCopyTableValues(this.id," +
              '"' +
              rb +
              '"' +
              ")'/></td>" +
              "<td id = '" +
              $("#EXCEPTION option:selected").attr("id") +
              "'>" +
              $("#DESCRIPTION").val() +
              "</td>" +
              "<td id = 'comments' >" +
              $("#DESC_COMMENTS").val() +
              "</td>" +
              "<td>RAISED</td>" +
              "<td>" +
              $.getUserName() +
              "</td>" +
              "<td>" +
              date +
              "</td> " +
              c++ +
              "</tr>"
          );
          // +"<td id = 'detailsException' >" +  $("#detailsMainDiv textarea").val() +"</td>" + c++ +"</tr>");

          $("#exceptionTable input[type = checkbox]:checked")
            .parent()
            .parent()
            .remove();
          $("#DESC_COMMENTS").prop("disabled", true);
          $("#EXCEPTION").prop("disabled", true);
        });
        ExceptionOnLoadCount++;
      }
    } else {
      $("#exceptionTable").hide();
      // $("#divExceptionTab").hide();
    }

    //copyToDescription();

    //EXCEPTION BUTTON======================================= CLICK=======================
    $("#ExceptionButtonID_Button").click(function () {
      //debugger;
      $("#resolveButtonDiv").hide();
      $("#ExceptionButtonID_Button").toggleClass("DataClick");
      if (this.className === "DataClick") {
        $("#divExceptionTab").show();
        if (exceptionButtoncount === 0 || !exceptionButtoncount) {
          fullExceptionPageFunctionality();
          exceptionButtoncount++;
        }
      } else {
        $("#divExceptionTab").hide();
        exceptionButtoncount++;
      }
    });
  }

  //++++++++++++++++++++++++++++++++++ACO_DISCREPANCY CODING++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  if ($.getActivity() === "ACO_Discrepancy") {
    $("#exceptionHeader").text("EXCEPTIONS RAISED");
    document.getElementById("raiseException").disabled = true;
    document.getElementById("clearExceptionButton").disabled = true;
    document.getElementById("undoExceptionButton").disabled = true;
    //        $('#checkBoxFullId').click(function(e) {
    //            $(this).closest('table').find('td input:checkbox').prop('checked', this.checked);
    //            document.getElementById("clearExceptionButton").disabled = false;
    //            document.getElementById("undoExceptionButton").disabled = false;
    //        });

    $("#checkBoxFullId").remove();
    getExceptionDetailsFromDB();
    //deleteExceptionFromDB();
    $("#divExceptionTab").show();
    $("#EXCEPTION").val("");
    document.getElementById("modifyException").disabled = true;
    document.getElementById("updateExceptionButton").disabled = true;
    document.getElementById("clearExceptionButton").disabled = true;
    document.getElementById("undoExceptionButton").disabled = true;
    if ($("#exceptionTable tr").length > 1) {
      $("#exceptionTable").show();
    } else {
      $("#exceptionTable").hide();
    }

    $("#DESC_COMMENTS").val("");
    $("#EXCEPTION").val("");
    $("#clearExceptionButton").click(function () {
      document.getElementById("undoExceptionButton").disabled = false;
      $('#exceptionTable :input[type="checkbox"]:checked').each(function () {
        var statusVal = $(this)
          .parent()
          .parent()
          .find("td:nth-child(4)")
          .html();
        if (statusVal === "REPLIED") {
          $(this).parent().parent().hide();
          objectHidedRow = $('#exceptionBody :input[type="checkbox"]:checked')
            .parent()
            .parent();
          $(this).addClass("hidden1");
          hidedRow = "CL";
        } else {
          alert("Raised Exception cannot be cleared");
        }
      });
    });
    $("#undoExceptionButton").click(function () {
      //debugger;
      if (hidedRow === "CL") {
        objectHidedRow.show();
        $(objectHidedRow).each(function () {
          $(
            "#" + $(this).find('input[type="checkbox"]:checked').attr("id")
          ).removeClass("hidden1");
        });
        hidedRow = "U";
      }
    });
    //COMMIT BUTTON
    $("#commitExceptionButton").click(function () {
      document.getElementById("clearExceptionButton").disabled = true;
      document.getElementById("undoExceptionButton").disabled = true;
      if (hidedRow === "CL") {
        objectHidedRow.remove();
      }
      alert("Exception committed successfully.");
      //deleteExceptionFromDB();
      insertExceptionIntoAuditTable();
    });
    //MODIFY BUTTON
    $("#modifyException").click(function () {
      //debugger;
      var modifyCount = 0;
      $('#exceptionTable :input[type="checkbox"]:checked').each(function () {
        if ($(this).attr("class") !== "hidden1") {
          modifyCount++;
        }
      });
      if (modifyCount > 1) {
        alert("Please select a single  row to modify");
      } else if (modifyCount === 0) {
        alert("Please select a single row to modify");
      } else {
        $("#DESC_COMMENTS").prop("disabled", false);
        //$("#EXCEPTION").prop('disabled', false);
        document.getElementById("updateExceptionButton").disabled = false;
      }
    });
    //UPDATE BUTTON
    $("#updateExceptionButton").click(function () {
      //debugger;
      var cb = "idDiscp_" + c;
      var rb = "rowIdDiscp_" + c;
      // $("#noExceptionDiv").hide();
      document.getElementById("commitExceptionButton").disabled = false;
      document.getElementById("updateExceptionButton").disabled = true;
      document.getElementById("modifyException").disabled = true;
      var userName = $.getUserName();
      var activityName = $.getActivity();
      var currentDateTimeFinal = new Date();
      var date = $.getCurrentDate().toStringObject("dd-mm-yy");
      var commentsVal = $("#DESC_COMMENTS").val();
      var chkBoxException = $("#exceptionBody input:checked");
      if ($(chkBoxException).is(":checked")) {
        var row_index = $(chkBoxException).closest("tr").index();
        var trRow = $(chkBoxException).closest("tr");
        var d = new Date();
        var now = d.getTime();
        var valueToappend = $(trRow).find("td:eq(6)").text() + "_" + now;
        var statusVal = $(trRow).find("td:eq(3)").text();
        if (statusVal === "REPLIED") {
          trRow.remove();
          var rowToBeAdded =
            "<tr class = 'updated' id = '" +
            rb +
            "'" +
            "style='width:100% ; border: 1px solid black  class = '' ;'>\n\
                 <td  ><input   type='checkbox'  id =" +
            "'" +
            cb +
            "'" +
            "onclick='onCheckCopyTableValues(this.id," +
            '"' +
            rb +
            '"' +
            ")'/></td>" +
            "<td id = '" +
            $("#EXCEPTION option:selected").attr("id") +
            "'>" +
            $("#DESCRIPTION").val() +
            "</td>" +
            "<td id = 'comments' >" +
            $("#DESC_COMMENTS").val() +
            "</td>" +
            "<td style = 'color : red'>REPLIED</td>" +
            "<td>" +
            $.getUserName() +
            "</td>" +
            "<td>" +
            date +
            "</td> " +
            "<td class = 'hidden'>" +
            valueToappend +
            "</td> " +
            c++ +
            "</tr>";
          if (row_index === 0) {
            $("#exceptionTable > tbody > tr").eq(row_index).after(rowToBeAdded);
          } else {
            $("#exceptionTable > tbody > tr")
              .eq(row_index - 1)
              .after(rowToBeAdded);
          }
        } else {
          var rowToBeAdded =
            "<tr class = 'updated' id = '" +
            rb +
            "'" +
            "style='width:100% ; border: 1px solid black  class = '' ;'>\n\
                 <td  ><input   type='checkbox'  id =" +
            "'" +
            cb +
            "'" +
            "onclick='onCheckCopyTableValues(this.id," +
            '"' +
            rb +
            '"' +
            ")'/></td>" +
            "<td id = '" +
            $("#EXCEPTION option:selected").attr("id") +
            "'>" +
            $("#DESCRIPTION").val() +
            "</td>" +
            "<td id = 'comments' >" +
            $("#DESC_COMMENTS").val() +
            "</td>" +
            "<td style = 'color : red'>REPLIED</td>" +
            "<td>" +
            $.getUserName() +
            "</td>" +
            "<td>" +
            date +
            "</td> " +
            "<td class = 'hidden'>" +
            valueToappend +
            "</td> " +
            c++ +
            "</tr>";
          $("#exceptionTable > tbody > tr").eq(row_index).after(rowToBeAdded);
        }
      }

      //
      // +"<td id = 'detailsException' >" +  $("#detailsMainDiv textarea").val() +"</td>" + c++ +"</tr>");

      $("#DESC_COMMENTS").prop("disabled", true);
      $("#EXCEPTION").prop("disabled", true);
    });
  }
}

var test;
function deleteCompDocDetailsfromDB(param) {
  var pInstId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/DeleteCompDocDetailsFromDB",
      data: "pInstId=" + pInstId + "&param=" + param,
      success: function (data) {
        //debugger;
        if (param === "comp") {
          var finalData = JSON.parse(data);
          test = finalData;
          //console.log(finalData);
          if (finalData) {
            for (var i in finalData) {
              complianceReasonList.push(finalData[i]);
            }
          }

          if ($.getActivity() === "ACO_DVU") {
            //debugger;
            //alert("hi");

            var complianceReasons = $.getValue("DVU_COMPLIANCE_REASONS_SAVE");
            if ($("#DECISION_DVU").val() === "Compliance_Queue") {
              createCheckboxForCompliance();
              $("#OTHERDETAILS_DECISION_DVU_DIV").show();
              var x = complianceReasons;
              if (complianceReasons) {
                var splitArray = x.split(",");
                for (var i in splitArray) {
                  console.log(splitArray[i]);
                  $("#OTHERDETAILS_DECISION_DVU_DIV")
                    .find("input[type='checkbox']")
                    .each(function () {
                      if ($(this).attr("name") === splitArray[i]) {
                        $("#" + $(this).attr("id")).prop("checked", true);
                      }
                      if (splitArray[i] === "OTHERS") {
                        $("#otherValComp").show();
                        $("#otherValCompLabel").show();
                      }
                    });
                }
              }
            }

            $("#OTHER_REMARKS_COMP").val($.getValue("otherValComp"));
            $("#OTHER_REMARKS_COMP").addClass("changed");
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception Occured deleting Exception values from DB" + e);
    $body.removeClass("loading");
    //  alert("====Exception Occured deleting Exception values from DB======");
  }
}

function validateFormFromTable(tableRow) {
  //debugger;
  var element = tableRow.closest("tr");
  if (element[0] === undefined) {
    alert("Please Select a row");
    return;
  }

  $(element)
    .find("td")
    .each(function () {
      var tableId = $(this).attr("class");
      var tableValues = $("#" + tableId).val();
      if ($("#" + tableId).hasClass("requiredIndiCustTable")) {
        var spanName = tableId + "_SPAN";
        if (
          tableValues === null ||
          tableValues === "" ||
          tableValues === "Select"
        ) {
          document.getElementById(spanName).innerHTML = "Filed cannot be empty";
        } else {
          document.getElementById(spanName).innerHTML = "";
        }
      }
    });
}

function copyValuesToDescription() {
  //debugger;
  var cb = "id_" + c;
  var rb = "rowId_" + c;
  document.getElementById("raiseException").disabled = true;
  document.getElementById("commitExceptionButton").disabled = false;
  document.getElementById("updateExceptionButton").disabled = true;
  $("#exceptionTable").show();
  var comments = $("#DESC_COMMENTS").val();
  if (comments !== null && comments !== "") {
    var activityName = $.getActivity();
    var userName = $.getUserName();
    var currentDateTimeFinal = new Date();
    var date = $.getCurrentDate().toStringObject("dd-mm-yy");
    var currentDateTime =
      currentDateTimeFinal.getDate() +
      "-" +
      (currentDateTimeFinal.getMonth() + 1) +
      "-" +
      currentDateTimeFinal.getFullYear();
    $("#detailsMainDiv textarea").val("");
    $("#detailsMainDiv textarea").val(
      "\n\nRaised by " +
        userName +
        " at " +
        activityName +
        " on " +
        date +
        "\nComments : " +
        comments +
        " \n"
    );
    $("#exceptionTable").append(
      "<tr id = '" +
        rb +
        "'" +
        "style='width:100% ; border: 1px solid black class = '' ;'>\n\
         <td  ><input  type='checkbox' id =" +
        "'" +
        cb +
        "'" +
        " onclick='onCheckCopyTableValues(this.id," +
        '"' +
        rb +
        '"' +
        ")'/></td>" +
        "<td id = '" +
        $("#EXCEPTION option:selected").attr("id") +
        "'>" +
        $("#DESCRIPTION").val() +
        "</td>" +
        "<td id = 'comments' >" +
        $("#DESC_COMMENTS").val() +
        "</td>" +
        "<td>RAISED</td>" +
        "<td>" +
        $.getUserName() +
        "</td>" +
        "<td>" +
        date +
        "</td> " +
        c++ +
        "</tr>"
    );
    // +"<td id = 'detailsException' >" +  $("#detailsMainDiv textarea").val()

    //        $('td:nth-child(5)').hide();
    //        $('th:nth-child(5)').hide();
  }

  $("#newButton").show();
}

function getExceptionDetailsFromDB() {
  $("#EXCEPTION").val(" ");
  try {
    //debugger;
    $.getAllComplex(
      "GET_EXCEPTION_DETAILS_ACO",
      [],
      function (headers, complexData) {
        //var counter = 1;
        //var check = 0;
        if (complexData.length > 0) {
          for (var item in complexData) {
            var cb = "id_" + c;
            var rb = "rowId_" + c;
            var row = complexData[item];
            for (var i in row) {
              if (row[i] === null || row[i] === "null") row[i] = "";
            }
            var date = new Date(row[4]).toStringObject("dd-mm-yy");
            var status = row[2];
            if (status === "REPLIED") {
            }
            var row =
              "<tr id='" +
              rb +
              "' style = 'border: 1px solid black ;'  ><td  ><input  type='checkbox' id =" +
              "'" +
              cb +
              "'" +
              "onclick='onCheckCopyTableValues(this.id," +
              '"' +
              rb +
              '"' +
              ")'/></td>\n\
                                   <td >" +
              row[0] +
              "</td>\n\
                                   <td >" +
              row[1] +
              "</td>\n\
                                   <td class = " +
              status +
              ">" +
              status +
              "</td>\n\
                                   <td >" +
              row[3] +
              "</td>\n\
                                   <td >" +
              date +
              "</td>\n\
                                   <td class = 'hidden'>" +
              row[5] +
              "</td></tr>";
            c++;
            $("#exceptionBody").append(row);
            console.log(row);
          }
        } else {
        }
      }
    );
    $.getAllComplex(
      "GET_EXCEPTION_DETAILS_DISCREPANCY_ACO",
      [],
      function (headers, complexData) {
        if (complexData.length > 0) {
          for (var item in complexData) {
            var cb = "id_" + c;
            var rb = "rowId_" + c;
            var row = complexData[item];
            for (var i in row) {
              if (row[i] === null || row[i] === "null") row[i] = "";
            }

            //                    var rowFullDate = row[4].split("-");
            //                    var rowfinalDate = rowFullDate[2] + "-" +rowFullDate[1] + "-" +rowFullDate[0];

            var date = new Date(row[4]);
            var finalDate = date.toLocaleDateString();
            var fulDateSplit = finalDate.split("/");
            var dateToDisplay =
              fulDateSplit[1] + "-" + fulDateSplit[0] + "-" + fulDateSplit[2];
            // alert(row[0]);
            //                        alert("onclick='onCheckCopyTableValues(this.id, " +rb +"");
            var row =
              "<tr id='" +
              rb +
              "' style = 'border: 1px solid black ;'  ><td  ><input  type='checkbox' id =" +
              "'" +
              cb +
              "'" +
              "onclick='onCheckCopyTableValues(this.id," +
              '"' +
              rb +
              '"' +
              ")'/></td>\n\
                                   <td >" +
              row[0] +
              "</td>\n\
                                   <td >" +
              row[1] +
              "</td>\n\
                                   <td  style= 'color: red;'>" +
              row[2] +
              "</td>\n\
                                   <td >" +
              row[3] +
              "</td>\n\
                                   <td >" +
              dateToDisplay +
              "</td></tr>";
            c++;
            $("#exceptionBodyDiscrepancy").append(row);
            console.log(row);
          }
        } else {
        }
      }
    );
    $("#EXCEPTION").val(" ");
  } catch (e) {
    alert("manageException : " + e);
  }
}

function minorDivHideShow() {
  //debugger;
  var dob = $("#IND_DOB").val();
  if (dob) {
    if (dob !== null && dob !== "") {
      var currentDate = new Date();
      var dobStr = dob.split("-").reverse().join("-");
      var dobDate = new Date(dobStr);
      var age = currentDate.getFullYear() - dobDate.getFullYear();
      var monthDiffer = currentDate.getMonth() - dobDate.getMonth();
      if (
        monthDiffer < 0 ||
        (monthDiffer === 0 && currentDate.getDate() < dobDate.getDate())
      ) {
        age--;
      }
      if (age < 18) {
        $("#minorDetails").show();
        $("#majorDetails").hide();
        if (
          tableLoader.ACCOUNT_RELN_CODE !== "MA" ||
          tableLoader.SCHEME_CODE === "1016"
        ) {
          if (!$.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
            if (!$("#IND_LINK_PAN_GUARDIAN").is(":checked")) {
              document.getElementById("IND_LINK_PAN_GUARDIAN_SPAN").innerHTML =
                "Field should be checked for minor customer";
              $("#IND_LINK_PAN_GUARDIAN").addClass("requiredIndiCustTableDVU");
              $("#IND_LINK_PAN_GUARDIAN").addClass(
                "requiredIndiCustTableDVUSave"
              );
            } else {
              document.getElementById("IND_LINK_PAN_GUARDIAN_SPAN").innerHTML =
                "";
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVU"
              );
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVUSave"
              );
            }
          }
        }
      } else {
        $("#minorDetails").hide();
        $("#majorDetails").hide();
      }
    }
  } else {
    $("#minorDetails").hide();
    $("#majorDetails").hide();
  }

  //PAN WITH PROP SECTION DISPLAY
  if (
    tableLoader.FORM_TYPE === "Non Individual" &&
    tableLoader.ACCOUNT_RELN_CODE === "F"
  ) {
    $("#propDetailsDiv").show();
    if ($("#IND_RELATIONSHIP_CODE").val() === "3") {
    }
  } else {
    $("#propDetailsDiv").hide();
  }
}

function getStateListForGST(countryId, stateId, countryVal) {
  $("#" + stateId).html("");
  if (countryVal) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [countryVal],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
    );
  }
}

function fillGSTFields(clickedRadio) {
  //debugger;
  // $("#NI_GST_ADD").prop("disabled",true);
  var element = clickedRadio.closest("tr");
  if (element[0] === undefined) {
    alert("Please Select a row");
    return;
  }

  $(element)
    .find("td")
    .each(function () {
      if ($(this).attr("class") === "NI_GST_COUNTRY") {
        getStateListForGST("NI_GST_COUNTRY", "NI_GST_STATE", $(this).text());
      }

      $("#" + $(this).attr("class")).val($(this).text());
    });
  fnCheckRadioBtn(clickedRadio, "GST_TABLE", "NI_GST_ADD");
}

function addButtonDisable() {
  //debugger;
  var count = 0;
  $("#GST_TABLE input[type=radio]").each(function () {
    if ($(this).prop("checked")) {
      count++;
    }
  });
  if (count > 0) {
    $("#NI_GST_ADD").prop("disabled", true);
  } else {
    $("#NI_GST_ADD").prop("disabled", false);
  }
}

//$("#GST_TABLE input[type=radio]").click(function(){
//    //debugger;
//  var radioButton = $(this);
//  if(radioButton.prop("checked")){
//   $("#NI_GST_ADD").prop("disabled",true);
//   }else{
//   $("#NI_GST_ADD").prop("disabled",false);
//  }
//});

function masterForStateBasedOnCountryForQC(
  makerCountry,
  checkerCountry,
  countryId
) {
  //debugger;
  var stateId;
  if (countryId === "COUNTRY_RESI") {
    stateId = "STATE_RESI";
  } else if (countryId === "COUNTRY_PERM") {
    stateId = "STATE_PERM";
  } else if (countryId === "COUNTRY_OFF") {
    stateId = "STATE_OFF";
  } else if (countryId === "FATCA_COUNTRY") {
    stateId = "FATCA_STATE";
  }

  $("#" + stateId).html("");
  if (makerCountry) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [makerCountry],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
    );
  }

  if (checkerCountry) {
    $.getMaster(
      "GET_FULL_STATE_AS_PER_COUNTRY",
      [checkerCountry],
      function (headers, masterData) {
        for (var i in masterData) {
          $("#" + stateId).append(
            "<option id='" +
              masterData[i][0] +
              "'  value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }
      }
    );
  }
}

function getBSRList(globalCustIndi) {
  //POPULATING BSR SECOND DATA=======================================================================
  var bsrFirstValueMaker;
  if (globalCustIndi["BSR_FIRST"]) {
    bsrFirstValueMaker = globalCustIndi["BSR_FIRST"][0];
  } else {
    bsrFirstValueMaker = $("#BSR_FIRST").val();
  }

  var bsrFirstValueChecker;
  if (globalCustIndi["BSR_FIRST"]) {
    bsrFirstValueChecker = globalCustIndi["BSR_FIRST"][1];
  } else {
    bsrFirstValueChecker = $("#BSR_FIRST").val();
  }

  if (bsrFirstValueMaker !== bsrFirstValueChecker) {
    $("#BSR_SECOND").html("");
    $("#BSR_SECOND").html("<option  value=''>Select</option>");
    $.getMaster(
      "GET_BSR_SECOND",
      [bsrFirstValueMaker],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#BSR_SECOND").append(
              "<option id='" +
                bsrFirstValueMaker +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
    $.getMaster(
      "GET_BSR_SECOND",
      [bsrFirstValueChecker],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#BSR_SECOND").append(
              "<option id='" +
                bsrFirstValueChecker +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
  } else {
    $.getMaster(
      "GET_BSR_SECOND",
      [bsrFirstValueMaker],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#BSR_SECOND").append(
              "<option id='" +
                bsrFirstValueMaker +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
  }

  //POPULATING BSR THIRD DATA==================================

  var bsrFirstValueMaker;
  var bsrFirstValueChecker;
  if (globalCustIndi["BSR_FIRST"]) {
    bsrFirstValueMaker = globalCustIndi["BSR_FIRST"][0];
  } else {
    bsrFirstValueMaker = $("#BSR_FIRST").val();
  }

  if (globalCustIndi["BSR_FIRST"]) {
    bsrFirstValueChecker = globalCustIndi["BSR_FIRST"][1];
  } else {
    bsrFirstValueChecker = $("#BSR_FIRST").val();
  }

  var bsrSecondValueMaker;
  var bsrSecondValueChecker;
  if (globalCustIndi["BSR_SECOND"]) {
    bsrSecondValueMaker = globalCustIndi["BSR_SECOND"][0];
  } else {
    bsrSecondValueMaker = $("#BSR_SECOND").val();
  }

  if (globalCustIndi["BSR_SECOND"]) {
    bsrSecondValueChecker = globalCustIndi["BSR_SECOND"][1];
  } else {
    bsrSecondValueChecker = $("#BSR_SECOND").val();
  }

  if (bsrFirstValueMaker && bsrSecondValueMaker) {
    $("#BSR_THIRD").html("");
    $("#BSR_THIRD").html("<option  value=''>Select</option>");
    $.getMaster(
      "GET_BSR_THIRD",
      [bsrFirstValueMaker, bsrSecondValueMaker],
      function (headers, masterData) {
        if (masterData && masterData !== null) {
          for (var i in masterData) {
            $("#BSR_THIRD").append(
              "<option id='" +
                bsrFirstValueMaker +
                "_" +
                bsrSecondValueMaker +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
    if (
      bsrFirstValueMaker !== bsrFirstValueChecker ||
      bsrSecondValueMaker !== bsrSecondValueChecker
    ) {
      $.getMaster(
        "GET_BSR_THIRD",
        [bsrFirstValueChecker, bsrSecondValueChecker],
        function (headers, masterData) {
          if (masterData) {
            for (var i in masterData) {
              $("#BSR_THIRD").append(
                "<option id='" +
                  bsrFirstValueChecker +
                  "_" +
                  bsrSecondValueChecker +
                  "_" +
                  masterData[i][0] +
                  "'  value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        }
      );
    }
  }
}

function getStateListForDifferingData(makerCheckerDiffVal) {
  //debugger;
  var countryArray = [
    "COUNTRY_RESI",
    "COUNTRY_PERM",
    "COUNTRY_OFF",
    "FATCA_COUNTRY",
  ];
  for (var i in countryArray) {
    if (
      makerCheckerDiffVal[countryArray[i]] &&
      makerCheckerDiffVal[countryArray[i].replace("COUNTRY", "STATE")]
    ) {
      var countryId = countryArray[i];
      var stateId = countryArray[i].replace("COUNTRY", "STATE");
      var makerCheckerCountry = makerCheckerDiffVal[countryId];
      var makerCheckerState = makerCheckerDiffVal[stateId];
      if (makerCheckerCountry || makerCheckerState) {
        $("#" + stateId).html("");
        $("#" + stateId).html("<option  value=''>Select</option>");
      }

      if (makerCheckerCountry[0] && makerCheckerState[0]) {
        $.getMaster(
          "GET_STATE_VALUE",
          [makerCheckerCountry[0], makerCheckerState[0]],
          function (headers, masterData) {
            for (var i in masterData) {
              $("#" + stateId).append(
                "<option id='" +
                  masterData[i][0] +
                  "' clubbed ='" +
                  (masterData[i][2] + "_" + masterData[i][0]) +
                  "' value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        );
      }

      if (makerCheckerCountry[1] && makerCheckerState[1]) {
        $.getMaster(
          "GET_STATE_VALUE",
          [makerCheckerCountry[1], makerCheckerState[1]],
          function (headers, masterData) {
            for (var i in masterData) {
              $("#" + stateId).append(
                "<option id='" +
                  masterData[i][0] +
                  "' clubbed ='" +
                  (masterData[i][2] + "_" + masterData[i][0]) +
                  "' value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        );
      }
    } else {
      var countryId = countryArray[i];
      var stateId = countryArray[i].replace("COUNTRY", "STATE");
      if (countryId) {
        $.getMaster(
          "GET_STATE_LIST",
          [countryId],
          function (headers, masterData) {
            if (masterData) {
              for (var i in masterData) {
                $("#" + stateId).append(
                  "<option id='" +
                    masterData[i][0] +
                    "'  value='" +
                    masterData[i][0] +
                    "'>" +
                    masterData[i][1] +
                    "</option>"
                );
              }
            }
          }
        );
      }
    }
  }
}

function getBSRSecondMakerData(map) {
  if (globalCustIndi["BSR_FIRST"]) {
    var bsrFirstValue = globalCustIndi["BSR_FIRST"][0];
  }

  if (!bsrFirstValue) {
    bsrFirstValue = $("#BSR_FIRST").val();
  }

  if (bsrFirstValue) {
    $.getMaster(
      "GET_BSR_SECOND",
      [bsrFirstValue],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#BSR_SECOND").append(
              "<option id='" +
                bsrFirstValue +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
        }
      }
    );
  }
}

function getBSRThirdMakerData(map) {
  if (globalCustIndi["BSR_SECOND"]) {
    var bsrSecondVal = globalCustIndi["BSR_SECOND"][0];
  }
  if (globalCustIndi["BSR_FIRST"]) {
    var bsrFirstVal = globalCustIndi["BSR_FIRST"][0];
  }

  if (!bsrSecondVal) {
    bsrSecondVal = $("#BSR_SECOND").val();
  }

  if (!bsrFirstVal) {
    bsrFirstVal = $("#BSR_FIRST").val();
  }

  if (bsrSecondVal && bsrFirstVal) {
    $.getMaster(
      "GET_BSR_THIRD",
      [bsrFirstVal, bsrSecondVal],
      function (headers, masterData) {
        if (masterData) {
          for (var i in masterData) {
            $("#BSR_THIRD").append(
              "<option id='" +
                bsrFirstVal +
                "_" +
                bsrSecondVal +
                "_" +
                masterData[i][0] +
                "'  value='" +
                masterData[i][0] +
                "'>" +
                masterData[i][1] +
                "</option>"
            );
          }
          //$("#" +bsrThird).val(tableLoader[bsrThird]);
        }
      }
    );
  }
}

var globalCustIndi = new Object();
function getDifferingData(callID) {
  //debugger;
  $(".indi").each(function () {
    $("m1").remove();
    $("m2").remove();
    $(".customRadio").remove();
    $(".customBreak").remove();
  });

  var DataRow = new Array();
  var element;
  var custDatamap = new Object();
  if (callID === "GET_DIFFERING_DATA") {
    element = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .closest("tr")
      .find("td");
  } else if (callID === "GET_DIFFERING_GST") {
    element = $("#GST_TABLE input[name=radio]:checked")
      .closest("tr")
      .find("td");
  }

  $(element).each(function () {
    if ($(this).attr("class"))
      custDatamap[$(this).attr("class")] = $(this).text();
  });
  custDatamap.CALL = callID;
  custDatamap.PINSTID = $.getProcessInstanceId();
  custDatamap.ROWID =
    "ACO_Maker_" +
    $("#CUSTDETAILS_TABLE input[name=radio]:checked").closest("tr").index();
  //custDatamap.element = $('#CUSTDETAILS_TABLE input[name=radio]:checked').closest("tr").index();
  $.callJavaExtensionCustom(
    "com.servo.getData.getCustomerDetails",
    custDatamap,
    function (data) {
      var masterData = JSON.parse(data);
      console.log("DifferingData");
      globalCustIndi = masterData;
      getStateListForDifferingData(globalCustIndi);
      //console.log(masterData);

      if (
        globalCustIndi["BSR_FIRST"] ||
        globalCustIndi["BSR_SECOND"] ||
        globalCustIndi["BSR_THIRD"]
      ) {
        getBSRList(globalCustIndi);
      }

      $.each(masterData, function (i, n) {
        if (i) {
          var element = document.getElementById(i);
          if ($("#" + i).hasClass("checkboxFieldQC")) {
            if ($("#" + i).prop("checked")) {
              element.value = "Y";
            } else {
              element.value = "N";
            }
          }
          var makerChecker = new Array();
          makerChecker.push(masterData[i]);
          var makerValue = makerChecker[0][0];
          var makerValueForM1 = makerChecker[0][0];
          var checkerValue = makerChecker[0][1];
          var checkerValueForM2 = makerChecker[0][1];
          if ($("#" + i).is("select")) {
            if (
              i === "FATCA_STATE" ||
              i === "STATE_RESI" ||
              i === "STATE_PERM" ||
              i === "STATE_OFF"
            ) {
              if (globalCustIndi[i.replace("STATE", "COUNTRY")]) {
                if (globalCustIndi[i.replace("STATE", "COUNTRY")][0]) {
                  makerValueForM1 = $(
                    "#" +
                      i +
                      " option[clubbed='" +
                      globalCustIndi[i.replace("STATE", "COUNTRY")][0] +
                      "_" +
                      makerValue +
                      "']"
                  ).text();
                }
              } else {
                makerValueForM1 = $(
                  "#" + i + " option[value='" + makerValueForM1 + "']"
                ).text();
              }
            } else if (i === "BSR_SECOND") {
              if (globalCustIndi["BSR_FIRST"] && globalCustIndi["BSR_SECOND"]) {
                makerValueForM1 = $(
                  "#BSR_SECOND" +
                    " option[id='" +
                    globalCustIndi["BSR_FIRST"][0] +
                    "_" +
                    globalCustIndi["BSR_SECOND"][0] +
                    "']"
                ).text();
              } else if (globalCustIndi["BSR_SECOND"]) {
                makerValueForM1 = $(
                  "#BSR_SECOND" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    globalCustIndi["BSR_SECOND"][0] +
                    "']"
                ).text();
              } else {
                makerValueForM1 = $(
                  "#" + i + " option[value='" + makerValueForM1 + "']"
                ).text();
              }
            } else if (i === "BSR_THIRD") {
              if (
                globalCustIndi["BSR_THIRD"] &&
                globalCustIndi["BSR_FIRST"] &&
                globalCustIndi["BSR_SECOND"]
              ) {
                makerValueForM1 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    globalCustIndi["BSR_FIRST"][0] +
                    "_" +
                    globalCustIndi["BSR_SECOND"][0] +
                    "_" +
                    globalCustIndi["BSR_THIRD"][0] +
                    "']"
                ).text();
              } else if (
                globalCustIndi["BSR_THIRD"] &&
                globalCustIndi["BSR_SECOND"]
              ) {
                makerValueForM1 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    globalCustIndi["BSR_SECOND"][0] +
                    "_" +
                    globalCustIndi["BSR_THIRD"][0] +
                    "']"
                ).text();
              } else if (globalCustIndi["BSR_THIRD"]) {
                makerValueForM1 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    $("#BSR_SECOND").val() +
                    "_" +
                    globalCustIndi["BSR_THIRD"][0] +
                    "']"
                ).text();
              } else {
                makerValueForM1 = $(
                  "#" + i + " option[value='" + makerValueForM1 + "']"
                ).text();
              }
            } else {
              makerValueForM1 = $(
                "#" + i + " option[value='" + makerValueForM1 + "']"
              ).text();
            }
          }

          if ($("#" + i).is("select")) {
            if (
              i === "FATCA_STATE" ||
              i === "STATE_RESI" ||
              i === "STATE_PERM" ||
              i === "STATE_OFF"
            ) {
              if (globalCustIndi[i.replace("STATE", "COUNTRY")]) {
                if (globalCustIndi[i.replace("STATE", "COUNTRY")][1]) {
                  checkerValueForM2 = $(
                    "#" +
                      i +
                      " option[clubbed='" +
                      globalCustIndi[i.replace("STATE", "COUNTRY")][1] +
                      "_" +
                      checkerValue +
                      "']"
                  ).text();
                  $("#" + i).val(checkerValue);
                }
              } else {
                checkerValueForM2 = $(
                  "#" + i + " option[value='" + checkerValueForM2 + "']"
                ).text();
              }
            } else if (i === "BSR_SECOND") {
              if (globalCustIndi["BSR_FIRST"] && globalCustIndi["BSR_SECOND"]) {
                checkerValueForM2 = $(
                  "#BSR_SECOND" +
                    " option[id='" +
                    globalCustIndi["BSR_FIRST"][1] +
                    "_" +
                    globalCustIndi["BSR_SECOND"][1] +
                    "']"
                ).text();
                $("#BSR_SECOND").val(
                  $(
                    "#BSR_SECOND" +
                      " option[id='" +
                      globalCustIndi["BSR_FIRST"][1] +
                      "_" +
                      globalCustIndi["BSR_SECOND"][1] +
                      "']"
                  ).val()
                );
              } else if (globalCustIndi["BSR_SECOND"]) {
                checkerValueForM2 = $(
                  "#BSR_SECOND" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    globalCustIndi["BSR_SECOND"][1] +
                    "']"
                ).text();
                $("#BSR_SECOND").val(
                  $(
                    "#BSR_SECOND" +
                      " option[id='" +
                      $("#BSR_FIRST").val() +
                      "_" +
                      globalCustIndi["BSR_SECOND"][1] +
                      "']"
                  ).val()
                );
              } else {
                checkerValueForM2 = $(
                  "#" + i + " option[value='" + checkerValueForM2 + "']"
                ).text();
                console.log(
                  "hi : " +
                    checkerValueForM2 +
                    " : " +
                    $(
                      "#BSR_SECOND" +
                        " option[id='" +
                        $("#BSR_FIRST").val() +
                        "_" +
                        checkerValueForM2 +
                        "']"
                    ).val()
                );
                $("#BSR_SECOND").val(
                  $(
                    "#BSR_SECOND" +
                      " option[id='" +
                      $("#BSR_FIRST").val() +
                      "_" +
                      checkerValueForM2 +
                      "']"
                  ).val()
                );
              }
            } else if (i === "BSR_THIRD") {
              if (
                globalCustIndi["BSR_THIRD"] &&
                globalCustIndi["BSR_FIRST"] &&
                globalCustIndi["BSR_SECOND"]
              ) {
                checkerValueForM2 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    globalCustIndi["BSR_FIRST"][1] +
                    "_" +
                    globalCustIndi["BSR_SECOND"][1] +
                    "_" +
                    globalCustIndi["BSR_THIRD"][1] +
                    "']"
                ).text();
                $("#BSR_THIRD").val(
                  $(
                    "#BSR_THIRD" +
                      " option[id='" +
                      globalCustIndi["BSR_FIRST"][1] +
                      "_" +
                      globalCustIndi["BSR_SECOND"][1] +
                      "_" +
                      globalCustIndi["BSR_THIRD"][1] +
                      "']"
                  ).val()
                );
              } else if (
                globalCustIndi["BSR_THIRD"] &&
                globalCustIndi["BSR_SECOND"]
              ) {
                checkerValueForM2 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    globalCustIndi["BSR_SECOND"][1] +
                    "_" +
                    globalCustIndi["BSR_THIRD"][1] +
                    "']"
                ).text();
                $("#BSR_THIRD").val(
                  $(
                    "#BSR_THIRD" +
                      " option[id='" +
                      $("#BSR_FIRST").val() +
                      "_" +
                      globalCustIndi["BSR_SECOND"][1] +
                      "_" +
                      globalCustIndi["BSR_THIRD"][1] +
                      "']"
                  ).val()
                );
              } else if (globalCustIndi["BSR_THIRD"]) {
                checkerValueForM2 = $(
                  "#BSR_THIRD" +
                    " option[id='" +
                    $("#BSR_FIRST").val() +
                    "_" +
                    $("#BSR_SECOND").val() +
                    "_" +
                    globalCustIndi["BSR_THIRD"][1] +
                    "']"
                ).text();
                $("#BSR_THIRD").val(
                  $(
                    "#BSR_THIRD" +
                      " option[id='" +
                      $("#BSR_FIRST").val() +
                      "_" +
                      $("#BSR_SECOND").val() +
                      "_" +
                      globalCustIndi["BSR_THIRD"][1] +
                      "']"
                  ).val()
                );
              } else {
                checkerValueForM2 = $(
                  "#" + i + " option[value='" + checkerValueForM2 + "']"
                ).text();
                $("#BSR_THIRD").val(
                  $(
                    "#BSR_THIRD" + " option[value='" + checkerValueForM2 + "']"
                  ).val()
                );
              }
            } else {
              checkerValueForM2 = $(
                "#" + i + " option[value='" + checkerValueForM2 + "']"
              ).text();
            }
          }

          if (element) {
            var radio1 = document.createElement("input");
            radio1.type = "radio";
            radio1.name = "name";
            radio1.value = makerValue;
            radio1.classList.add("customRadio");
            radio1.id = i + "_radio";
            var label = document.createElement("M1");
            label.classList.add("indi");
            label.htmlFor = i;
            label.appendChild(
              document.createTextNode(" M1 : " + makerValueForM1)
            );
            var linebreak = document.createElement("br");
            linebreak.classList.add("customBreak");
            radio1.onclick = function () {
              debugger;
              console.log(makerValueForM1);
              if ($(this).val() === "N") {
                $("#" + i).prop("checked", false);
              } else if ($(this).val() === "Y") {
                $("#" + i).prop("checked", true);
              } else $("#" + i).val($(this).val());
              if ($(this).attr("id") === "BSR_SECOND_radio") {
                $(
                  "#BSR_SECOND  option:contains('" + makerValueForM1 + "')"
                ).attr("selected", "selected");
              }
              if ($(this).attr("id") === "BSR_THIRD_radio") {
                $(
                  "#BSR_THIRD  option:contains('" + makerValueForM1 + "')"
                ).attr("selected", "selected");
              }
            };
            element.parentElement.appendChild(radio1);
            element.parentElement.appendChild(label);
            element.parentElement.appendChild(linebreak);
            var radio2 = document.createElement("input");
            radio2.type = "radio";
            radio2.name = "name";
            radio2.value = checkerValue;
            radio2.classList.add("customRadio");
            radio2.id = element.id + "_radio";
            var label = document.createElement("M2");
            label.classList.add("indi");
            label.htmlFor = i;
            label.appendChild(
              document.createTextNode(" M2 : " + checkerValueForM2)
            );
            var linebreak = document.createElement("br");
            linebreak.classList.add("customBreak");
            radio2.onclick = function () {
              debugger;
              if ($(this).val() === "N") {
                $("#" + i).prop("checked", false);
              } else if ($(this).val() === "Y") {
                $("#" + i).prop("checked", true);
              } else $("#" + i).val($(this).val());
              if ($(this).attr("id") === "BSR_SECOND_radio") {
                $(
                  "#BSR_SECOND  option:contains('" + checkerValueForM2 + "')"
                ).attr("selected", "selected");
              }
              if ($(this).attr("id") === "BSR_THIRD_radio") {
                $(
                  "#BSR_THIRD  option:contains('" + checkerValueForM2 + "')"
                ).attr("selected", "selected");
              }
            };
            element.parentElement.appendChild(radio2);
            element.parentElement.appendChild(label);
            element.parentElement.appendChild(linebreak);
          }
        }
      });
    }
  );
}

function getComplianceDocDetailsFromDB() {
  try {
    //debugger;
    $.getAllComplex(
      "GET_COMP_DOC_DETAILS_ACO",
      [],
      function (headers, complexData) {
        if (complexData.length > 0) {
          for (var item in complexData) {
            var compCheckBoxId =
              "compCheckBoxIdFetch_" + counterFetchDetailsComp;
            var compDocNameId = "compDocNameIdFetch_" + counterFetchDetailsComp;
            var compDocDateId = "compDocDateIdFetch_" + counterFetchDetailsComp;
            var row = complexData[item];
            for (var i in row) {
              if (row[i] === null || row[i] === "null") row[i] = "";
            }

            if (row[1] !== null && row[1] !== "null" && row[1] !== "") {
              var date = new Date(row[1]).toStringObject("dd-mm-yy");
            } else {
              var date = "";
            }

            if ($.isInActivities("ACO_DVU")) {
              var row =
                "<tr '  ><td  ><input  type='checkbox' id =" +
                "'" +
                compCheckBoxId +
                "'" +
                "/></td>\n\
                                   <td   ><input  type = 'text' id = '" +
                compDocNameId +
                "' value = '" +
                row[0] +
                "'/>" +
                "</td>\n\\n\
                                   <td  ><input  class = 'datePickerDynamic' type = 'text' id = '" +
                compDocDateId +
                "' value = '" +
                date +
                "'/>" +
                "</td>\n\
                                  </tr>";
            } else {
              var row =
                "<tr '  ><td  ><input  type='checkbox' id =" +
                "'" +
                compCheckBoxId +
                "'" +
                "/></td>\n\
                                   <td ><input type = 'text' id = '" +
                compDocNameId +
                "' value = '" +
                row[0] +
                "'/>" +
                "</td>\n\\n\
                                   <td ><input class = 'datePickerDynamic' type = 'text' id = '" +
                compDocDateId +
                "' value = '" +
                date +
                "'/>" +
                "</td>\n\
                                  </tr>";
            }
            var today = new Date();
            $(".datePickerDynamic").datepicker({
              defaultDate: new Date(90, 0, 1), //set the default date to Jan 1st 1990
              changeMonth: true,
              changeYear: true,
              autoHide: true,
              yearRange: "1930:2050", //set the range of years
              dateFormat: "dd-mm-yy", //set the format of the date
              minDate: today,
            });
            counterFetchDetailsComp++;
            $("#PendingDocDatesTableBody").append(row);
            console.log(row);
          }

          $(".datePickerDynamic").datepicker({
            defaultDate: new Date(90, 0, 1), //set the default date to Jan 1st 1990
            changeMonth: true,
            changeYear: true,
            autoHide: true,
            yearRange: "1930:2050", //set the range of years
            dateFormat: "dd-mm-yy", //set the format of the date
            minDate: today,
          });
        } else {
        }
      }
    );
  } catch (e) {
    alert("manageException : " + e);
  }
}

function exceptionRaisedAlert() {
  //debugger;
  if ($("#exceptionTable tr").length > 1) {
    if (
      $.getValue("DECISION_DISCREPANCY") !== "Send_To_DVU" &&
      $.getValue("DECISION_DISCREPANCY") !== "ReScan"
    ) {
      if ($("#DECISION_DVU").val() !== "Raise_Discrepancy") {
        $("#DECISION_DVU").val("Raise_Discrepancy");
        $("#DECISION_DVU").addClass("changed");
        alert("Exception raised.Please send the case to discrepancy");
        return false;
      }
    }
  } else {
    if ($("#DECISION_DVU").val() === "Raise_Discrepancy") {
      if ($("#exceptionTable tr").length <= 1) {
        alert("Please raise exception to send to Discrepancy");
        return false;
      }
    }
  }
}

function getStateListForDifferingDataNI(makerCheckerDiffDataNI) {
  //debugger;
  var countryArray = ["NIOFFC_COUNTRY", "NICORR_COUNTRY", "NI_FATCA_COUNTRY"];
  for (var i in countryArray) {
    if (
      makerCheckerDiffDataNI[countryArray[i]] &&
      makerCheckerDiffDataNI[countryArray[i].replace("COUNTRY", "STATE")]
    ) {
      var countryId = countryArray[i];
      var stateId = countryArray[i].replace("COUNTRY", "STATE");
      var makerCheckerCountry = makerCheckerDiffDataNI[countryId];
      var makerCheckerState = makerCheckerDiffDataNI[stateId];
      //NEW CODE
      var makerCountryVal = makerCheckerDiffDataNI[countryArray[i]];
      var makerStateVal =
        makerCheckerDiffDataNI[countryArray[i].replace("COUNTRY", "STATE")];
      if (makerCountryVal && makerStateVal) {
        $.getMaster(
          "GET_STATE_VALUE",
          [makerCountryVal, makerStateVal],
          function (headers, masterData) {
            for (var i in masterData) {
              $("#" + stateId).append(
                "<option id='" +
                  masterData[i][0] +
                  "' clubbed ='" +
                  (masterData[i][2] + "_" + masterData[i][0]) +
                  "' value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        );
      }

      var checkerCountryVal = tableLoader[countryArray[i]];
      var checkerStateVal =
        tableLoader[countryArray[i].replace("COUNTRY", "STATE")];
      if (checkerCountryVal && checkerStateVal) {
        $.getMaster(
          "GET_STATE_VALUE",
          [checkerCountryVal, checkerStateVal],
          function (headers, masterData) {
            for (var i in masterData) {
              $("#" + stateId).append(
                "<option id='" +
                  masterData[i][0] +
                  "' clubbed ='" +
                  (masterData[i][2] + "_" + masterData[i][0]) +
                  "' value='" +
                  masterData[i][0] +
                  "'>" +
                  masterData[i][1] +
                  "</option>"
              );
            }
          }
        );
      }

      //            if (makerCheckerCountry[0] && makerCheckerState[0]) {
      //
      //                $.getMaster("GET_STATE_VALUE", [makerCheckerCountry[0], makerCheckerState[0]], function(headers, masterData) {
      //                    for (var i in masterData) {
      //                        $("#" + stateId).append("<option id='" + masterData[i][0] + "' clubbed ='" + (masterData[i][2] + "_" + masterData[i][0]) + "' value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
      //                    }
      //                });
      //
      //            }

      //            if (makerCheckerCountry[1] && makerCheckerState[1]) {
      //
      //                $.getMaster("GET_STATE_VALUE", [makerCheckerCountry[1], makerCheckerState[1]], function(headers, masterData) {
      //                    for (var i in masterData) {
      //                        $("#" + stateId).append("<option id='" + masterData[i][0] + "' clubbed ='" + (masterData[i][2] + "_" + masterData[i][0]) + "' value='" + masterData[i][0] + "'>" + masterData[i][1] + "</option>");
      //                    }
      //                });
      //
      //            }
    }
  }
}

var globalCustNI = new Object();
function getDifferingNIData(callID) {
  debugger;
  var element;
  var checkerMap = new Object();
  if (callID === "GET_DIFFERING_NI_DATA") {
    element = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .closest("tr")
      .find("td");
  }
  //chekerMap === maker id is the key and checker values is the value of map
  $(".makerField").each(function () {
    checkerMap["M1_" + $(this).attr("id")] = $(this).val();
  });
  checkerMap.CALL = callID;
  checkerMap.PINSTID = $.getProcessInstanceId();
  $.callJavaExtensionCustom(
    "com.servo.getData.getCustomerDetails",
    checkerMap,
    function (data) {
      var masterData = JSON.parse(data);
      console.log(masterData);
      globalCustNI = masterData;
      getStateListForDifferingDataNI(globalCustNI);
      // console.log(masterData);
      $.each(masterData, function (i, n) {
        if (i) {
          var element = document.getElementById(
            i.toString().replace("M1_", "")
          );
          var id = i.toString().replace("M1_", "");
          if ($("#" + id).hasClass("checkboxFieldQC")) {
            if ($("#" + id).prop("checked")) {
              element.value = "Y";
            } else {
              element.value = "N";
            }
          }

          var valueForM1 = n;
          if ($("#" + i).is("select")) {
            if (
              i === "NIOFFC_STATE" ||
              i === "NICORR_STATE" ||
              i === "NI_FATCA_STATE"
            ) {
              if (globalCustNI[i.replace("STATE", "COUNTRY")]) {
                valueForM1 = $(
                  "#" +
                    i +
                    " option[clubbed='" +
                    globalCustNI[i.replace("STATE", "COUNTRY")] +
                    "_" +
                    n +
                    "']"
                ).text();
              } else {
                valueForM1 = $(
                  "#" + i + " option[value='" + valueForM1 + "']"
                ).text();
              }
            } else {
              valueForM1 = $(
                "#" + i + " option[value='" + valueForM1 + "']"
              ).text();
            }
          }

          if (element) {
            var radio1 = document.createElement("input");
            radio1.type = "radio";
            radio1.name = "name";
            var val = n;
            if (
              i == "NI_NOMINATIONDET_DOB" ||
              i == "NI_INITIALPAYMENT_TRANSDATE" ||
              i == "NI_INITIALPAYMENT_VALUEDATE"
            ) {
              debugger;
              if (val != null && val != "") {
                var dateValue = val.split("-").reverse().join("-");
                radio1.value = dateValue;
              } else {
                radio1.value = val;
              }
            } else {
              radio1.value = val;
            }

            radio1.classList.add("customRadio");
            radio1.id = i + "_radio";
            var label = document.createElement("M1");
            label.htmlFor = i;
            label.appendChild(document.createTextNode(" M1 : " + valueForM1));
            var linebreak = document.createElement("br");
            linebreak.classList.add("customBreak");
            radio1.onclick = function () {
              //debugger;
              if ($(this).val() === "N") {
                $("#" + i).prop("checked", false);
              } else if ($(this).val() === "Y") {
                $("#" + i).prop("checked", true);
              } else $("#" + i).val($(this).val());
              $("#" + i).addClass("changed");
              if ($(this).attr("id") === "NI_ACCFACILITY_CHEQUEREQ_radio") {
                var idField = $(this).attr("id").replace("_radio", "");
                $("#" + idField).click();
              }
            };
            element.parentElement.appendChild(radio1);
            element.parentElement.appendChild(label);
            element.parentElement.appendChild(linebreak);
            if (!tableLoader[i]) tableLoader[i] = "";
            var valueForM2 = tableLoader[i];
            if ($("#" + i).is("select")) {
              if (
                i === "NIOFFC_STATE" ||
                i === "NICORR_STATE" ||
                i === "NI_FATCA_STATE"
              ) {
                if (globalCustNI[i.replace("STATE", "COUNTRY")]) {
                  valueForM2 = $(
                    "#" +
                      i +
                      " option[clubbed='" +
                      tableLoader[i.replace("STATE", "COUNTRY")] +
                      "_" +
                      tableLoader[i] +
                      "']"
                  ).text();
                } else {
                  valueForM2 = $(
                    "#" + i + " option[value='" + valueForM2 + "']"
                  ).text();
                }
              } else {
                valueForM2 = $(
                  "#" + i + " option[value='" + valueForM2 + "']"
                ).text();
              }
            }

            var radio2 = document.createElement("input");
            radio2.type = "radio";
            radio2.name = "name";
            var val = tableLoader[i];
            if (
              i == "NI_INITIALPAYMENT_TRANSDATE" ||
              i == "NI_NOMINATIONDET_DOB" ||
              i == "NI_INITIALPAYMENT_VALUEDATE"
            ) {
              if (val != null && val != "") {
                var dateValue = formatDate(new Date(val))
                  .split("-")
                  .reverse()
                  .join("-");
                radio2.value = dateValue;
              } else {
                radio2.value = val;
              }
            } else {
              radio2.value = val;
            }

            radio2.classList.add("customRadio");
            radio2.id = element.id + "_radio";
            var label = document.createElement("M2");
            label.htmlFor = i;
            label.appendChild(document.createTextNode(" M2 : " + valueForM2));
            var linebreak = document.createElement("br");
            linebreak.classList.add("customBreak");
            radio2.onclick = function () {
              //debugger;
              if ($(this).val() === "N") {
                $("#" + i).prop("checked", false);
              } else if ($(this).val() === "Y") {
                $("#" + i).prop("checked", true);
              } else $("#" + i).val($(this).val());
              $("#" + i).addClass("changed");
              if ($(this).attr("id") === "NI_ACCFACILITY_CHEQUEREQ_radio") {
                var idField = $(this).attr("id").replace("_radio", "");
                $("#" + idField).click();
              }
            };
            element.parentElement.appendChild(radio2);
            element.parentElement.appendChild(label);
            element.parentElement.appendChild(linebreak);
          }
        }
      });
    }
  );
  //    try {
  //        $.ajax({
  //            type: "POST",
  //            data: "CHECKER_DETAILS=" + JSON.stringify(custDatamap) +
  //                    "&FORM_TYPE=" + $("#FORM_TYPE").val() +
  //                    "&DML_TYPE=" + $.getActivity() +
  //                    "&PINSTID=" + $.getProcessInstanceId(),
  //            url: "../../ACO/getD",
  //            success: function(data) {
  //                alert("Succesfully inserted");
  //            },
  //            error: function(jqXHR, error, errorThrown) {
  //                errorHandler(jqXHR, error, errorThrown)
  //                alert("something went wrong")
  //
  //            }
  //        });
  //    } catch (e) {
  //        alert("getDifferingData::" + e);
  //    }
}

var x;
function getIndividualTaxResidence(filledFrom, i) {
  //debugger;
  $("#IND_TAXRESIDENCE_TBODY").html("");
  var rowID = filledFrom + "_" + i;
  var index = i;
  try {
    $.getMaster(
      "GET_INDTAXRESIDENCE_DETAIL",
      [filledFrom, rowID, $.getProcessInstanceId()],
      function (headers, masterData) {
        x = masterData;
        if (masterData && masterData.length > 0) {
          //console.log(masterData);
          for (var i in masterData) {
            $("#IND_TAXRESIDENCE_TBODY").append(
              "<tr   rowId='' style='text-align:center;' >" +
                "<td ><input type='radio' id = 'indTaxResRadioId' onclick='fillTaxResFields($(this))' name='IND_TAX_RADIO' class='radio'/></td>" +
                "<td class='FILLED_BY' >" +
                (!masterData[i][0] ? "" : masterData[i][0]) +
                "</td>" +
                "<td class='FILLED_DATE' >" +
                (!masterData[i][1].toDateObject().toStringObject("dd-mm-yy")
                  ? ""
                  : masterData[i][1]
                      .toDateObject()
                      .toStringObject("dd-mm-yy")) +
                "</td>" +
                "<td class='TAX_RES_ID_TYPE' >" +
                (!masterData[i][2] ? "" : masterData[i][2]) +
                "</td>" +
                "<td class='TAX_RES_OTHER_ID_TYPE' >" +
                (!masterData[i][3] ? "" : masterData[i][3]) +
                "</td>" +
                "<td class='TAX_RES_ID_NO' >" +
                (!masterData[i][4] ? "" : masterData[i][4]) +
                "</td>" +
                "<td class='TAX_RES_COUNTRY'>" +
                (!masterData[i][5] ? "" : masterData[i][5]) +
                "</td>" +
                "<td class='ROWID' >" +
                (!masterData[i][6] ? "" : masterData[i][6]) +
                "</td></tr>"
            );
          }
        } else {
          if ($.isInActivities("ACO_QC")) {
            $.getMaster(
              "GET_INDTAXRESIDENCE_QC_DETAIL",
              [
                $.getProcessInstanceId(),
                "ACO_Maker_" + index,
                "ACO_Checker_" + index,
              ],
              function (headers, masterData) {
                if (masterData) {
                  x = masterData;
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#IND_TAXRESIDENCE_TBODY").append(
                      "<tr   rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' id = 'indTaxResRadioId' onclick='fillTaxResFields($(this))' name='IND_TAX_RADIO' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          .toDateObject()
                          .toStringObject("dd-mm-yy")
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='TAX_RES_ID_TYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='TAX_RES_OTHER_ID_TYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='TAX_RES_ID_NO' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='TAX_RES_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='ROWID' >" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_Data_Correction")) {
            rowID = "ACO_QC_" + index;
            $.getMaster(
              "GET_INDTAXRESIDENCE_DETAIL",
              ["ACO_QC", rowID, $.getProcessInstanceId()],
              function (headers, masterData) {
                if (masterData) {
                  x = masterData;
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#IND_TAXRESIDENCE_TBODY").append(
                      "<tr   rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' id = 'indTaxResRadioId' onclick='fillTaxResFields($(this))' name='IND_TAX_RADIO' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          .toDateObject()
                          .toStringObject("dd-mm-yy")
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='TAX_RES_ID_TYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='TAX_RES_OTHER_ID_TYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='TAX_RES_ID_NO' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='TAX_RES_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='ROWID' >" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
            rowID = "ACO_QC_" + index;
            $.getMaster(
              "GET_INDTAXRESIDENCE_DETAIL_END",
              ["ACO_QC", rowID, $.getProcessInstanceId()],
              function (headers, masterData) {
                if (masterData) {
                  x = masterData;
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#IND_TAXRESIDENCE_TBODY").append(
                      "<tr   rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' id = 'indTaxResRadioId' onclick='fillTaxResFields($(this))' name='IND_TAX_RADIO' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          .toDateObject()
                          .toStringObject("dd-mm-yy")
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='TAX_RES_ID_TYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='TAX_RES_OTHER_ID_TYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='TAX_RES_ID_NO' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='TAX_RES_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='ROWID' >" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else {
            console.log("No Tax residence details for this customer.");
          }
        }
      }
    );
  } catch (e) {
    alert("manageTrustDetail:::" + e);
  }
}

var gstx;
function getGSTDetails() {
  //debugger;
  try {
    $.getMaster(
      "GET_GST_DETAILS",
      [$.getProcessInstanceId(), $.getActivity()],
      function (headers, masterData) {
        gstx = masterData;
        if (masterData && masterData.length > 0) {
          //console.log(masterData);
          for (var i in masterData) {
            $("#GST_TBODY").append(
              "<tr rowId='' style='text-align:center;'  >" +
                "<td ><input type='radio' name='GSTradio' onclick='fillGSTFields($(this))' class='radio'/></td>" +
                "<td class='FILLED_BY' >" +
                (!masterData[i][0] ? "" : masterData[i][0]) +
                "</td>" +
                "<td class='FILLED_DATE' >" +
                (!masterData[i][1]
                  ? ""
                  : masterData[i][1]
                      .toDateObject()
                      .toStringObject("dd-mm-yy")) +
                "</td>" +
                "<td class='NI_GST_NUMBER' >" +
                (!masterData[i][2] ? "" : masterData[i][2]) +
                "</td>" +
                "<td class='NI_GST_NATUREOFBUSINESS' >" +
                (!masterData[i][3] ? "" : masterData[i][3]) +
                "</td>" +
                "<td class='NI_GST_ADDRLINE1'>" +
                (!masterData[i][4] ? "" : masterData[i][4]) +
                "</td>" +
                "<td class='NI_GST_ADDRLINE2' >" +
                (!masterData[i][5] ? "" : masterData[i][5]) +
                "</td>" +
                "<td class='NI_GST_ADDRLINE3'>" +
                (!masterData[i][6] ? "" : masterData[i][6]) +
                "</td>" +
                "<td class='NI_GST_ADDRLINE4'>" +
                (!masterData[i][7] ? "" : masterData[i][7]) +
                "</td>" +
                "<td class='NI_GST_COUNTRY'>" +
                (!masterData[i][8] ? "" : masterData[i][8]) +
                "</td>" +
                "<td class='NI_GST_STATE'>" +
                (!masterData[i][9] ? "" : masterData[i][9]) +
                "</td>" +
                "<td class='NI_GST_CITY'>" +
                (!masterData[i][10] ? "" : masterData[i][10]) +
                "</td>" +
                "<td class='NI_GST_PIN'>" +
                (!masterData[i][11] ? "" : masterData[i][11]) +
                "</td></tr>"
            );
          }
        } else {
          if ($.isInActivities("ACO_QC")) {
            $.getMaster(
              "GET_GST_QC_DETAILS",
              [$.getProcessInstanceId(), "ACO_Checker", "ACO_Maker"],
              function (headers, masterData) {
                x = masterData;
                if (masterData) {
                  //console.log("retrieved all gst data = " + masterData);
                  for (var i in masterData) {
                    $("#GST_TBODY").append(
                      "<tr rowId='' style='text-align:center;'  >" +
                        "<td ><input type='radio' name='GSTradio' onclick='fillGSTFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='NI_GST_NUMBER' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='NI_GST_NATUREOFBUSINESS' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE1'>" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE2' >" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE3'>" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE4'>" +
                        (!masterData[i][7] ? "" : masterData[i][7]) +
                        "</td>" +
                        "<td class='NI_GST_COUNTRY'>" +
                        (!masterData[i][8] ? "" : masterData[i][8]) +
                        "</td>" +
                        "<td class='NI_GST_STATE'>" +
                        (!masterData[i][9] ? "" : masterData[i][9]) +
                        "</td>" +
                        "<td class='NI_GST_CITY'>" +
                        (!masterData[i][10] ? "" : masterData[i][10]) +
                        "</td>" +
                        "<td class='NI_GST_PIN'>" +
                        (!masterData[i][11] ? "" : masterData[i][11]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_Data_Correction")) {
            $.getMaster(
              "GET_GST_DETAILS",
              [$.getProcessInstanceId(), "ACO_QC"],
              function (headers, masterData) {
                x = masterData;
                if (masterData) {
                  //console.log("retrieved all gst data = " + masterData);
                  for (var i in masterData) {
                    $("#GST_TBODY").append(
                      "<tr rowId='' style='text-align:center;'  >" +
                        "<td ><input type='radio' name='GSTradio' onclick='fillGSTFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='NI_GST_NUMBER' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='NI_GST_NATUREOFBUSINESS' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE1'>" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE2' >" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE3'>" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE4'>" +
                        (!masterData[i][7] ? "" : masterData[i][7]) +
                        "</td>" +
                        "<td class='NI_GST_COUNTRY'>" +
                        (!masterData[i][8] ? "" : masterData[i][8]) +
                        "</td>" +
                        "<td class='NI_GST_STATE'>" +
                        (!masterData[i][9] ? "" : masterData[i][9]) +
                        "</td>" +
                        "<td class='NI_GST_CITY'>" +
                        (!masterData[i][10] ? "" : masterData[i][10]) +
                        "</td>" +
                        "<td class='NI_GST_PIN'>" +
                        (!masterData[i][11] ? "" : masterData[i][11]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
            $.getMaster(
              "GET_GST_DETAILS_END",
              [$.getProcessInstanceId(), "ACO_QC"],
              function (headers, masterData) {
                x = masterData;
                if (masterData) {
                  //console.log("retrieved all gst data = " + masterData);
                  for (var i in masterData) {
                    $("#GST_TBODY").append(
                      "<tr rowId='' style='text-align:center;'  >" +
                        "<td ><input type='radio' name='GSTradio' onclick='fillGSTFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='NI_GST_NUMBER' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='NI_GST_NATUREOFBUSINESS' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE1'>" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE2' >" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE3'>" +
                        (!masterData[i][6] ? "" : masterData[i][6]) +
                        "</td>" +
                        "<td class='NI_GST_ADDRLINE4'>" +
                        (!masterData[i][7] ? "" : masterData[i][7]) +
                        "</td>" +
                        "<td class='NI_GST_COUNTRY'>" +
                        (!masterData[i][8] ? "" : masterData[i][8]) +
                        "</td>" +
                        "<td class='NI_GST_STATE'>" +
                        (!masterData[i][9] ? "" : masterData[i][9]) +
                        "</td>" +
                        "<td class='NI_GST_CITY'>" +
                        (!masterData[i][10] ? "" : masterData[i][10]) +
                        "</td>" +
                        "<td class='NI_GST_PIN'>" +
                        (!masterData[i][11] ? "" : masterData[i][11]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else {
            console.log("No GST Details available for this account");
          }
        }
      }
    );
  } catch (e) {
    alert("getGSTDetails:::" + e);
  }
}

function getTaxResidenceDetails() {
  try {
    $.getMaster(
      "GET_TAXRESIDENCE_DETAILS",
      [$.getProcessInstanceId(), $.getActivity()],
      function (headers, masterData) {
        x = masterData;
        if (masterData && masterData.length > 0) {
          //console.log(masterData);
          for (var i in masterData) {
            $("#NI_TAXRESIDENCE_TBODY").append(
              "<tr rowId='' style='text-align:center;' >" +
                "<td ><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
                "<td class='FILLED_BY' >" +
                (!masterData[i][0] ? "" : masterData[i][0]) +
                "</td>" +
                "<td class='FILLED_DATE' >" +
                (!masterData[i][1]
                  ? ""
                  : masterData[i][1]
                      .toDateObject()
                      .toStringObject("dd-mm-yy")) +
                "</td>" +
                "<td class='M1_NI_TAXRESIDENCE_IDTYPE' >" +
                (!masterData[i][2] ? "" : masterData[i][2]) +
                "</td>" +
                "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' >" +
                (!masterData[i][3] ? "" : masterData[i][3]) +
                "</td>" +
                "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' >" +
                (!masterData[i][4] ? "" : masterData[i][4]) +
                "</td>" +
                "<td class='M1_NI_TAXRESIDENCE_COUNTRY'>" +
                (!masterData[i][5] ? "" : masterData[i][5]) +
                "</td></tr>"
            );
          }
        } else {
          if ($.isInActivities("ACO_QC")) {
            $.getMaster(
              "GET_TAXRESIDENCE_QC_DETAILS",
              [$.getProcessInstanceId(), "ACO_Checker", "ACO_Maker"],
              function (headers, masterData) {
                if (masterData) {
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#NI_TAXRESIDENCE_TBODY").append(
                      "<tr rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDTYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_Data_Correction")) {
            $.getMaster(
              "GET_TAXRESIDENCE_DETAILS",
              [$.getProcessInstanceId(), "ACO_QC"],
              function (headers, masterData) {
                if (masterData) {
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#NI_TAXRESIDENCE_TBODY").append(
                      "<tr rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDTYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
            $.getMaster(
              "GET_TAXRESIDENCE_DETAILS_END",
              [$.getProcessInstanceId(), "ACO_QC"],
              function (headers, masterData) {
                if (masterData) {
                  //console.log(masterData);
                  for (var i in masterData) {
                    $("#NI_TAXRESIDENCE_TBODY").append(
                      "<tr rowId='' style='text-align:center;' >" +
                        "<td ><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
                        "<td class='FILLED_BY' >" +
                        (!masterData[i][0] ? "" : masterData[i][0]) +
                        "</td>" +
                        "<td class='FILLED_DATE' >" +
                        (!masterData[i][1]
                          ? ""
                          : masterData[i][1]
                              .toDateObject()
                              .toStringObject("dd-mm-yy")) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDTYPE' >" +
                        (!masterData[i][2] ? "" : masterData[i][2]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' >" +
                        (!masterData[i][3] ? "" : masterData[i][3]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' >" +
                        (!masterData[i][4] ? "" : masterData[i][4]) +
                        "</td>" +
                        "<td class='M1_NI_TAXRESIDENCE_COUNTRY'>" +
                        (!masterData[i][5] ? "" : masterData[i][5]) +
                        "</td></tr>"
                    );
                  }
                }
              }
            );
          } else {
            console.log("No Tax residence details for this customer.");
          }
        }
      }
    );
  } catch (e) {
    alert("manageTrustDetail:::" + e);
  }
}

function modifyTaxResDetails(formType) {
  if (formType === "I") {
    var element = $(
      "#IND_TAXRESIDENCE_TABLE input[name='IND_TAX_RADIO']:checked"
    ).closest("tr");
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (element[0] === undefined) {
      alert("Please select a row to modify");
    } else {
      if (
        $("#TAX_RES_ID_TYPE").val() === "" ||
        $("#TAX_RES_ID_NO").val() === ""
      ) {
        alert("Tax residence ID Type and ID Number cannot be empty");
      } else {
        $(element).html(
          "<td><input type='radio' id = 'indTaxResRadioId' name='IND_TAX_RADIO' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
            "<td class='FILLED_BY' storeType='custALL'>" +
            $.getActivity() +
            "</td>" +
            "<td class='FILLED_DATE' storeType='custALL'>" +
            $.getCurrentDate().toStringObject("dd-mm-yy") +
            "</td>" +
            "<td class='TAX_RES_ID_TYPE' storeType='cust'>" +
            $("#TAX_RES_ID_TYPE").val() +
            "</td>" +
            "<td class='TAX_RES_OTHER_ID_TYPE' storeType='custALL'>" +
            $("#TAX_RES_OTHER_ID_TYPE").val() +
            "</td>" +
            "<td class='TAX_RES_ID_NO' storeType='custALL'>" +
            $("#TAX_RES_ID_NO").val() +
            "</td>" +
            "<td class='TAX_RES_COUNTRY' storeType='custALL'>" +
            $("#TAX_RES_COUNTRY").val() +
            "</td>" +
            "<td class='ROWID' >" +
            ($.getActivity() + "_" + elementIndex) +
            "</td></tr>"
        );
        alert("Customer Details Modified");
        $("#IND_TAXRESIDENCE_ADD").prop("disabled", false);
        clearTaxFields("I");
      }
    }
  }

  if (formType === "NI") {
    var element = $(
      "#NI_TAXRESIDENCE_TABLE input[name = radio]:checked"
    ).closest("tr");
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (element[0] === undefined) {
      alert("Please select a row to modify");
    } else {
      if (
        $.isInActivities(
          "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
        )
      ) {
        if (
          $("#M1_NI_TAXRESIDENCE_IDTYPE").val() === "" ||
          $("#M1_NI_TAXRESIDENCE_IDNUMBER").val() === ""
        ) {
          alert("Tax residence ID Type and ID Number cannot be empty");
        } else {
          $(element).html(
            "<td><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
              "<td class='FILLED_BY' storeType='custALL'>" +
              $.getActivity() +
              "</td>" +
              "<td class='FILLED_DATE' storeType='custALL'>" +
              $.getCurrentDate().toStringObject("dd-mm-yy") +
              "</td>" +
              "<td class='M1_NI_TAXRESIDENCE_IDTYPE' storeType='cust'>" +
              $("#M1_NI_TAXRESIDENCE_IDTYPE").val() +
              "</td>" +
              "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' storeType='custALL'>" +
              $("#M1_NI_TAXRESIDENCE_OTHERIDTYPE").val() +
              "</td>" +
              "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' storeType='custALL'>" +
              $("#M1_NI_TAXRESIDENCE_IDNUMBER").val() +
              "</td>" +
              "<td class='M1_NI_TAXRESIDENCE_COUNTRY' storeType='custALL'>" +
              $("#M1_NI_TAXRESIDENCE_COUNTRY").val() +
              "</td></tr>"
          );
          alert("Tax Residence Details Modified");
          $("#NI_TAXRESIDENCE_ADD").prop("disabled", false);
          clearTaxFields("NI");
        }
      }
      //          else if($.isInActivities("ACO_Checker")){
      //
      //                $(element).html("<td><input type='radio' name='radio' onclick='fi
      //                llTaxResFields($(this))' class='radio'/></td>"
      //                        + "<td class='FILLED_BY' storeType='custALL'>" + $.getActivity() + "</td>"
      //                        + "<td class='FILLED_DATE' storeType='custALL'>" + $.getCurrentDate().toStringObject("dd-mm-yy") + "</td>"
      //                        + "<td class='NI_TAXRESIDENCE_IDTYPE' storeType='cust'>" + $("#NI_TAXRESIDENCE_IDTYPE").val() + "</td>"
      //                        + "<td class='NI_TAXRESIDENCE_OTHERIDTYPE' storeType='custALL'>" + $("#NI_TAXRESIDENCE_OTHERIDTYPE").val() + "</td>"
      //                        + "<td class='NI_TAXRESIDENCE_IDNUMBER' storeType='custALL'>" + $("#NI_TAXRESIDENCE_IDNUMBER").val() + "</td>"
      //                        + "<td class='NI_TAXRESIDENCE_COUNTRY' storeType='custALL'>" + $("#NI_TAXRESIDENCE_COUNTRY").val() + "</td></tr>"
      //                        );
      //
      //                alert("Tax Residence Details Modified");
      //                $("#NI_TAXRESIDENCE_ADD").prop("disabled",false);
      //                clearTaxFields('NI');
      //           }
    }
  }

  if (formType === "GST") {
    var element = $("#GST_TABLE input[name = GSTradio]:checked").closest("tr");
    if (element[0] === undefined) {
      alert("Please select a row to modify");
    } else {
      var gstMakerCount = 0;
      $(".requiredNonIndiGST").each(function () {
        var idName = $(this).attr("id");
        var idValue = $("#" + idName).val();
        var spanName = idName + "_SPAN";
        if (
          idValue === "" ||
          idValue === null ||
          idValue === "undefined" ||
          idValue === "Select"
        ) {
          document.getElementById(spanName).innerHTML = "Field cannot be empty";
          gstMakerCount++;
        } else {
          document.getElementById(spanName).innerHTML = "";
        }
      });
      if (gstMakerCount > 0) {
        alert("Please fill the mandatory GST details");
      } else {
        $(element).html(
          "<td><input type='radio' name='radio' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
            "<td class='FILLED_BY' storeType='custALL'>" +
            $.getActivity() +
            "</td>" +
            "<td class='FILLED_DATE' storeType='custALL'>" +
            $.getCurrentDate().toStringObject("dd-mm-yy") +
            "</td>" +
            "<td class='NI_GST_NUMBER' storeType='cust'>" +
            $("#NI_GST_NUMBER").val() +
            "</td>" +
            "<td class='NI_GST_NATUREOFBUSINESS' storeType='custALL'>" +
            $("#NI_GST_NATUREOFBUSINESS").val() +
            "</td>" +
            "<td class='NI_GST_ADDRLINE1' storeType='custALL'>" +
            $("#NI_GST_ADDRLINE1").val() +
            "</td>" +
            "<td class='NI_GST_ADDRLINE2' storeType='custALL'>" +
            $("#NI_GST_ADDRLINE2").val() +
            "</td>" +
            "<td class='NI_GST_ADDRLINE3' storeType='custALL'>" +
            $("#NI_GST_ADDRLINE3").val() +
            "</td>" +
            "<td class='NI_GST_ADDRLINE4' storeType='custALL'>" +
            $("#NI_GST_ADDRLINE4").val() +
            "</td>" +
            "<td class='NI_GST_COUNTRY' storeType='custALL'>" +
            $("#NI_GST_COUNTRY").val() +
            "</td>" +
            "<td class='NI_GST_STATE' storeType='custALL'>" +
            $("#NI_GST_STATE").val() +
            "</td>" +
            "<td class='NI_GST_CITY' storeType='custALL'>" +
            $("#NI_GST_CITY").val() +
            "</td>" +
            "<td class='NI_GST_PIN' storeType='custALL'>" +
            $("#NI_GST_PIN").val() +
            "</td></tr>"
        );
        alert("Customer Details Modified");
        $("#NI_GST_ADD").prop("disabled", false);
        clearFields();
      }
    }
  }
}

function fillTaxResFields(clickedRadio) {
  //debugger;
  var element = clickedRadio.closest("tr");
  var tableName = element.closest("table").attr("id");
  //  $("#NI_TAXRESIDENCE_ADD").prop("disabled",true);
  // $("#IND_TAXRESIDENCE_ADD").prop("disabled",true);

  if (element[0] === undefined) {
    alert("Please Select a row to modify");
    return;
  }

  $(element)
    .find("td")
    .each(function () {
      $("#" + $(this).attr("class")).val($(this).text());
    });
  if (tableName === "IND_TAXRESIDENCE_TABLE") {
    fnCheckRadioBtn(
      clickedRadio,
      "IND_TAXRESIDENCE_TABLE",
      "IND_TAXRESIDENCE_ADD"
    );
  } else if (tableName === "NI_TAXRESIDENCE_TABLE") {
    fnCheckRadioBtn(
      clickedRadio,
      "NI_TAXRESIDENCE_TABLE",
      "NI_TAXRESIDENCE_ADD"
    );
  }
}

function fnCheckRadioBtn(clickedRadio, tableName, addButton, element) {
  //debugger;
  var $self = $(clickedRadio);
  if ($self.attr("previousValue") === "true") {
    $self.prop("checked", false);
  }
  $("#" + tableName + "input[type=radio]").attr("previousValue", false);
  $self.attr("previousValue", $self.is(":checked"));
  if ($self.is(":checked")) {
    $("#" + addButton).prop("disabled", true);
  } else {
    $("#" + addButton).prop("disabled", false);
    $(element)
      .find("td")
      .each(function () {
        var idName = $(this).attr("class");
        if (idName !== "SOURCE") {
          if ($(this).attr("typeCheck") === "checkBoxField") {
            if ($(this).text() === "Y" || $(this).text() === "checked") {
              $("#" + $(this).attr("class")).prop("checked", false);
            } else {
              $("#" + $(this).attr("class")).prop("checked", false);
            }
          } else {
            $("#" + $(this).attr("class")).val("");
          }
        }
        //            else if ($("#FORM_TYPE").val() === "NRI" && idName === "IND_COUNTRY_CODE") {
        //                $("#" + $(this).attr("class")).val("");
        //            }
      });
  }
}

function disableBankDetails(dealingWithBank, bankName, bankBranch) {
  if ($("#" + dealingWithBank).val() === "No") {
    $("#" + bankName)
      .val("")
      .prop("disabled", true);
    $("#" + bankBranch)
      .val("")
      .prop("disabled", true);
  } else {
    $("#" + bankName)
      .val("")
      .prop("disabled", false);
    $("#" + bankBranch)
      .val("")
      .prop("disabled", false);
  }
}

function disableBankDetailsOnLoad() {
  var dealingWithBank;
  var bankName;
  var bankBranch;
  if ($.isInActivities("ACO_Maker")) {
    dealingWithBank = "M1_NI_CREDIT_OTHERBANK";
    bankName = "M1_NI_CREDIT_BANK";
    bankBranch = "M1_NI_CREDIT_BRANCH";
  } else if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_QC,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    dealingWithBank = "NI_CREDIT_OTHERBANK";
    bankName = "NI_CREDIT_BANK";
    bankBranch = "NI_CREDIT_BRANCH";
  }

  if ($("#" + dealingWithBank).val() === "No") {
    $("#" + bankName)
      .val("")
      .prop("disabled", true);
    $("#" + bankBranch)
      .val("")
      .prop("disabled", true);
  } else {
    $("#" + bankName)
      .val("")
      .prop("disabled", false);
    $("#" + bankBranch)
      .val("")
      .prop("disabled", false);
  }
}

function uncheck($self) {
  if ($self.is(":checked")) {
    $("#IND_TAXRESIDENCE_ADD").prop("disabled", false);
    var uncheck = function () {
      setTimeout(function () {
        $self.removeAttr("checked");
      }, 0);
    };
    var unbind = function () {
      $self.unbind("mouseup", up);
    };
    var up = function () {
      uncheck();
      unbind();
    };
    $self.bind("mouseup", up);
    $self.one("mouseout", unbind);
  } else {
    $("#IND_TAXRESIDENCE_ADD").prop("disabled", true);
  }
}

function pincodeValidation(pincodeId) {
  if ($("#FORM_TYPE").val() !== "NRI") {
    $("#" + pincodeId).val(
      $("#" + pincodeId)
        .val()
        .replace(/[^\d]+/, "")
    );
    var regex = "^[0-9]{6}$";
    var spanName = pincodeId + "_errmsg";
    if ($("#" + pincodeId).val() !== null && $("#" + pincodeId).val() !== "") {
      if (
        !$("#" + pincodeId)
          .val()
          .match(regex)
      ) {
        document.getElementById(spanName).innerHTML = "Enter valid pincode";
      } else {
        document.getElementById(spanName).innerHTML = "";
      }
    }
  }
}

function modifyTable() {
  debugger;
  var index = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .closest("tr")
    .index();
  var countForValidationDVU = 0;
  $(".requiredIndiCustTableDVU").each(function () {
    var idName = this.id;
    var idNameVal = $("#" + idName).val();
    if (idName === "IND_LINK_PAN_GUARDIAN") {
      if (!$("#IND_LINK_PAN_GUARDIAN").is(":checked")) {
        countForValidationDVU++;
      }
    }
    if (idName === "IND_PAN_NUMBER" || idName === "IND_PAN_RESULT") {
      if ($("#OTHERDETAILS_FORM_SIXTY").is(":checked")) {
        idNameVal = "Form60Attached";
      }
    }

    if (
      idNameVal === null ||
      idNameVal === "" ||
      idNameVal === "Select" ||
      idNameVal === "undefined"
    ) {
      countForValidationDVU++;
      validateFormIndi(idName);
    }
  });
  if (tableLoader.FORM_TYPE === "NRI" && $.getActivity() === "ACO_DVU") {
    $(".visaMandatory").each(function () {
      var visaId = $(this).attr("id");
      var idNameVal = $("#" + visaId).val();
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        countForValidationDVU++;
        validateFormIndi(visaId);
      }
    });
  }

  //=========DEDUPE MANDATORY ONLY FOR NEW CUSTOMER=====================
  if ($.getActivity() === "ACO_DVU") {
    if ($("#IND_IS_EXISTING").val() === "New") {
      if (
        $("#IND_DEDUPE_RESULT").val() === null ||
        $("#IND_DEDUPE_RESULT").val() === ""
      ) {
        document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML =
          "Field cannot be empty";
        countForValidationDVU++;
      } else {
        document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML = "";
      }
    } else {
      document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML = "";
    }
  }

  var countForValidation = 0;
  if ($("#FORM_TYPE").val() === "NRI") {
    $("#IND_EMAIL").addClass("requiredIndiCustTable");
    $("#IND_COUNTRY_CODE").addClass("requiredIndiCustTable");
  } else {
    $("#IND_EMAIL").removeClass("requiredIndiCustTable");
    //$("#IND_COUNTRY_CODE").removeClass("requiredIndiCustTable");
  }

  $(".requiredIndiCustTable").each(function () {
    var idName = this.id;
    var idNameVal = $("#" + idName).val();
    if (
      idNameVal === null ||
      idNameVal === "" ||
      idNameVal === "Select" ||
      idNameVal === "undefined"
    ) {
      countForValidation++;
      validateFormIndi(idName);
    }
  });
  if ($.getActivity() === "ACO_Case_Initiation" && index === 0) {
    //debugger;
    if (
      $("#ACCOUNT_RELN_CODE").val() === "MA" ||
      $("#ACCOUNT_RELN_CODE").val() === "MG" ||
      $("#ACCOUNT_RELN_CODE").val() === "MI" ||
      $("#ACCOUNT_RELN_CODE").val() === "MS"
    ) {
      var dob = $("#IND_DOB").val();
      if (dob) {
        if (dob !== null && dob !== "") {
          var dobSplit = dob.split("-");
          var dobYear = dobSplit[2];
          var currentDate = new Date();
          var currentYear = currentDate.getFullYear();
          if (currentYear - dobYear > 18) {
            alert("Primary Cusomer should be minor");
            return;
            countForValidation++;
          } else {
          }
        }
      }
    }
  }
  if ($.getActivity() === "ACO_Case_Initiation" && index === 1) {
    //debugger;
    if (
      $("#ACCOUNT_RELN_CODE").val() === "MG" ||
      $("#ACCOUNT_RELN_CODE").val() === "MI" ||
      $("#ACCOUNT_RELN_CODE").val() === "MS"
    ) {
      var dob = $("#IND_DOB").val();
      if (dob) {
        if (dob !== null && dob !== "") {
          var dobSplit = dob.split("-");
          var dobYear = dobSplit[2];
          var currentDate = new Date();
          var currentYear = currentDate.getFullYear();
          if (currentYear - dobYear < 18) {
            alert("Second Customer should be major");
            return;
            countForValidation++;
          } else {
          }
        }
      }
    }
  }

  //===========================================MAKER VALIDATION BEFORE MODIFY==============================================================
  var countForValidationMaker = 0;
  //=====================DOB AND MINOR AND SENIOR CITIZEN COND===================================================
  if ($.getActivity() === "ACO_Maker") {
    if (
      $("#IND_DOB").val() !== null &&
      $("#IND_DOB").val() !== "" &&
      $("#IND_DOB").val() !== "undefined"
    ) {
      var start = $("#IND_DOB").datepicker("getDate");
      var end = new Date();
      var age_year = Math.floor((end - start) / 31536000000);
      if (age_year < 18) {
        if (
          $("#GUARDIAN_NAME").val() === null ||
          $("#GUARDIAN_NAME").val() === ""
        ) {
          document.getElementById("GUARDIAN_NAME_SPAN").innerHTML =
            "Field cannot be empty";
          $("#GUARDIAN_NAME").addClass("requiredIndiCustTableMaker");
        }
        if (
          $("#PERSNL_RELN_WITH_MINOR").val() === null ||
          $("#PERSNL_RELN_WITH_MINOR").val() === "" ||
          $("#PERSNL_RELN_WITH_MINOR").val() === "Select"
        ) {
          document.getElementById("PERSNL_RELN_WITH_MINOR_SPAN").innerHTML =
            "Field cannot be empty";
          $("#PERSNL_RELN_WITH_MINOR").addClass("requiredIndiCustTableMaker");
        }
      } else if (age_year >= 60) {
        if (
          $("#IS_SENIOR_CITIZEN").val() === null ||
          $("#IS_SENIOR_CITIZEN").val() === "" ||
          $("#IS_SENIOR_CITIZEN").val() === "Select"
        ) {
          document.getElementById("IS_SENIOR_CITIZEN_SPAN").innerHTML =
            "Field cannot be empty";
          $("#IS_SENIOR_CITIZEN").addClass("requiredIndiCustTableMaker");
        }
      }
    }
    //===================OFFICE ADDRESS VALIDATION PART ==============================================================
    if (
      ($("#ADD_LINE1_OFF").val() !== null &&
        $("#ADD_LINE1_OFF").val() !== "") ||
      ($("#ADD_LINE2_OFF").val() !== null &&
        $("#ADD_LINE2_OFF").val() !== "") ||
      ($("#ADD_LINE3_OFF").val() !== null && $("#ADD_LINE3_OFF").val() !== "")
    ) {
      if ($("#COUNTRY_OFF").val() === "" || $("#COUNTRY_OFF").val() === null) {
        document.getElementById("COUNTRY_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#COUNTRY_OFF").addClass("requiredIndiCustTableMaker");
      }
      if ($("#STATE_OFF").val() === "" || $("#STATE_OFF").val() === null) {
        document.getElementById("STATE_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#STATE_OFF").addClass("requiredIndiCustTableMaker");
      }
      if ($("#CITY_OFF").val() === "" || $("#CITY_OFF").val() === null) {
        document.getElementById("CITY_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#CITY_OFF").addClass("requiredIndiCustTableMaker");
      }
      if ($("#PINCODE_OFF").val() === "" || $("#PINCODE_OFF").val() === null) {
        document.getElementById("PINCODE_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#PINCODE_OFF").addClass("requiredIndiCustTableMaker");
      }
    }

    //        $(".requiredIndiCustTableMaker").each(function() {
    //            var idName = this.id;
    //            var idNameVal = $("#" + idName).val();
    //            if (idNameVal === null || idNameVal === "" || idNameVal === "Select" || idNameVal === "undefined") {
    //                countForValidationMaker++;
    //                validateFormIndi(idName);
    //            }
    //        });
  }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    //==========================MINOR AND SENIOR CITIZEN=================================================================
    if (
      $("#IND_DOB").val() !== null &&
      $("#IND_DOB").val() !== "" &&
      $("#IND_DOB").val() !== "undefined"
    ) {
      var start = $("#IND_DOB").datepicker("getDate");
      var end = new Date();
      var age_year = Math.floor((end - start) / 31536000000);
      if (age_year < 18) {
        if (
          $("#GUARDIAN_NAME").val() === null ||
          $("#GUARDIAN_NAME").val() === ""
        ) {
          document.getElementById("GUARDIAN_NAME_SPAN").innerHTML =
            "Field cannot be empty";
          $("#GUARDIAN_NAME").addClass("requiredIndiCustTableChecker");
        }
        if (
          $("#PERSNL_RELN_WITH_MINOR").val() === null ||
          $("#PERSNL_RELN_WITH_MINOR").val() === "" ||
          $("#PERSNL_RELN_WITH_MINOR").val() === "Select"
        ) {
          document.getElementById("PERSNL_RELN_WITH_MINOR_SPAN").innerHTML =
            "Field cannot be empty";
          $("#PERSNL_RELN_WITH_MINOR").addClass("requiredIndiCustTableChecker");
        }
      } else if (age_year >= 60) {
        if (
          $("#IS_SENIOR_CITIZEN").val() === null ||
          $("#IS_SENIOR_CITIZEN").val() === "" ||
          $("#IS_SENIOR_CITIZEN").val() === "Select"
        ) {
          document.getElementById("IS_SENIOR_CITIZEN_SPAN").innerHTML =
            "Field cannot be empty";
          $("#IS_SENIOR_CITIZEN").addClass("requiredIndiCustTableChecker");
        }
      }
    }

    //===================OFFICE ADDRESS VALIDATION PART ==============================================================
    if (
      ($("#ADD_LINE1_OFF").val() !== null &&
        $("#ADD_LINE1_OFF").val() !== "") ||
      ($("#ADD_LINE2_OFF").val() !== null &&
        $("#ADD_LINE2_OFF").val() !== "") ||
      ($("#ADD_LINE3_OFF").val() !== null && $("#ADD_LINE3_OFF").val() !== "")
    ) {
      if ($("#COUNTRY_OFF").val() === "" || $("#COUNTRY_OFF").val() === null) {
        document.getElementById("COUNTRY_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#COUNTRY_OFF").addClass("requiredIndiCustTableChecker");
      }
      if ($("#STATE_OFF").val() === "" || $("#STATE_OFF").val() === null) {
        document.getElementById("STATE_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#STATE_OFF").addClass("requiredIndiCustTableChecker");
      }
      if ($("#CITY_OFF").val() === "" || $("#CITY_OFF").val() === null) {
        document.getElementById("CITY_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#CITY_OFF").addClass("requiredIndiCustTableChecker");
      }
      if ($("#PINCODE_OFF").val() === "" || $("#PINCODE_OFF").val() === null) {
        document.getElementById("PINCODE_OFF_SPAN").innerHTML =
          "Field cannot be empty";
        $("#PINCODE_OFF").addClass("requiredIndiCustTableChecker");
      }
    }
  }
  var countForValidationQC = 0;
  var element = $("#CUSTDETAILS_TABLE input[name=radio]:checked").closest("tr");
  if (element[0] === undefined) {
    alert("Please Select a row");
  } else {
    if (
      $.isInActivities(
        "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
      )
    ) {
      var d = new Date();
      var now = d.getTime();
      if (countForValidationMaker === 0) {
        $(element)
          .find("td")
          .not("td[hidden]")
          .each(function () {
            if ($(this).attr("typeCheck") === "checkBoxField") {
              if ($("#" + $(this).attr("class")).prop("checked")) {
                $(this).text("Y");
              } else {
                $(this).text("N");
              }
            } else if ($(this).attr("class") === "FILLED_DATE") {
              $(this).text($.getCurrentDate().toStringObject("dd-mm-yy"));
            } else if ($(this).attr("class") === "FILLED_BY") {
              $(this).text($.getNTUserName());
            } else {
              $(this).text($("#" + $(this).attr("class")).val());
            }
          });
        alert("Customer Details Modified");
        $(element).find("input[type=radio]").prop("checked", true);
        countForModify = 0;
      } else {
        alert("Please fill the mandatory fields before modifying the table");
      }
    } else if ($.isInActivities("ACO_QC")) {
      if (countForValidationQC === 0) {
        $(element)
          .find("td")
          .not("td[hidden]")
          .each(function () {
            //debugger;
            if ($(this).attr("typeCheck") === "checkBoxField") {
              if ($("#" + $(this).attr("class")).prop("checked")) {
                $(this).text("Y");
              } else {
                $(this).text("N");
              }
            } else if ($(this).attr("class") === "FILLED_DATE") {
              $(this).text($.getCurrentDate().toStringObject("dd-mm-yy"));
            } else if ($(this).attr("class") === "FILLED_BY") {
              $(this).text($.getNTUserName());
            } else {
              $(this).text($("#" + $(this).attr("class")).val());
            }
          });
        alert("Customer Details Modified");
        countForModify = 0;
      }
    } else {
      if ($.isInActivities("ACO_DVU")) {
        var d = new Date();
        var now = d.getTime();
        if (countForValidationDVU === 0) {
          var idRadio = $("#CUSTDETAILS_TABLE input[name=radio]:checked");
          $(element)
            .find("td")
            .not("td[hidden]")
            .each(function () {
              //debugger;
              if ($(this).attr("typeCheck") === "checkBoxField") {
                if ($("#" + $(this).attr("class")).prop("checked")) {
                  $(this).text("Y");
                } else {
                  $(this).text("N");
                }
              } else if ($(this).attr("class") === "FILLED_DATE") {
                $(this).text($.getCurrentDate().toStringObject("dd-mm-yy"));
              } else if ($(this).attr("class") === "FILLED_BY") {
                $(this).text($.getNTUserName());
              } else {
                $(this).text($("#" + $(this).attr("class")).val());
              }
            });
          $(element).find("input[type=radio]").prop("checked", true);
          modifyButtonCountIndi++;
          alert("Customer Details Modified");
          countForModify = 0;
          // $("#CUSTDETAILS_TABLE input[name=radio]:checked").prop("checked",true);
        } else {
          alert("Please fill the mandatory fields before modifying the table");
        }
      } else if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
        if (countForValidation === 0) {
          $(element)
            .find("td")
            .not("td[hidden]")
            .each(function () {
              //debugger;
              if ($(this).attr("typeCheck") === "checkBoxField") {
                if ($("#" + $(this).attr("class")).prop("checked")) {
                  $(this).text("Y");
                } else {
                  $(this).text("N");
                }
              } else if ($(this).attr("class") === "FILLED_DATE") {
                $(this).text($.getCurrentDate().toStringObject("dd-mm-yy"));
              } else if ($(this).attr("class") === "FILLED_BY") {
                $(this).text($.getNTUserName());
              } else {
                $(this).text($("#" + $(this).attr("class")).val());
              }
            });
          $(element).find("input[type=radio]").prop("checked", true);
          alert("Customer Details Modified");
          countForModify = 0;
          $("#CUSTDETAILS_ADD").prop("disabled", true);
        } else {
          alert("Please fill the mandatory details of customer");
        }
      }
    }
  }
}

function radioUncheck() {
  //debugger;
  var allRadios = $("input[type=radio]");
  var radioChecked;
  var setCurrent = function (e) {
    var obj = e.target;
    radioChecked = $(obj).attr("checked");
  };
  var setCheck = function (e) {
    if (e.type === "keypress" && e.charCode !== 32) {
      return false;
    }
    var obj = e.target;
    if (radioChecked) {
      $(obj).attr("checked", false);
    } else {
      $(obj).attr("checked", true);
    }
  };
  $.each(allRadios, function (i, val) {
    var label = $("label[for=" + $(this).attr("id") + "]");
    $(this).bind("mousedown keydown", function (e) {
      setCurrent(e);
    });
    label.bind("mousedown keydown", function (e) {
      e.target = $("#" + $(this).attr("for"));
      setCurrent(e);
    });
    $(this).bind("click", function (e) {
      setCheck(e);
    });
  });
}

// Added By Prashant ON 17/03/2022
var DObj;
var DedupeObj;
function getDedupeResultNew(id, aadharId) {
  debugger;
  var selectedIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .parent()
    .parent()
    .index();
  if (selectedIndex <= -1) {
    alert("Please select a customer first");
    return;
  }
  if ($("#IND_IS_EXISTING").val() === "Existing") {
    alert("Customer is Existing");
    $("#" + id).val("100% MATCH");
    return;
  }

  var count = 0;
  $(".dedupeMand").each(function () {
    var kycValue = $("#" + $(this).attr("id")).val();
    if (kycValue === null || kycValue === "") {
      count++;
    }
  });
  if (count === 9) {
    alert("Please fill one kyc details to get dedupe result");
    return;
  }

  if ($("#" + aadharId).val() === null || $("#" + aadharId).val() === "") {
    DedupeObj = {
      FirstName: $("#IND_FIRST_NAME").val(),
      LastName: $("#IND_LAST_NAME").val(),
      MobileNo: $("#IND_MOBILE").val(),
      DateOfBirth: $("#IND_DOB").val().split("-").join("/"),
      PassportNumber: $("#IND_PASSPORT").val(),
      VoterID: $("#IND_VOTERS_ID").val(),
      RationID: $("#IND_RATION_CARD").val(),
      AadharNumber: "",
      PANNumber: $("#IND_PAN_NUMBER").val(),
      DrivingLicense: $("#IND_DRIVING_LICENSE").val(),
      BranchCode: $("#OTHERDETAILS_REQ_BRANCH_ID").val(),
    };
  } else {
    if (aadharReference(aadharId)) {
      DedupeObj = {
        FirstName: $("#IND_FIRST_NAME").val(),
        LastName: $("#IND_LAST_NAME").val(),
        MobileNo: $("#IND_MOBILE").val(),
        DateOfBirth: $("#IND_DOB").val().split("-").join("/"),
        PassportNumber: $("#IND_PASSPORT").val(),
        VoterID: $("#IND_VOTERS_ID").val(),
        RationID: $("#IND_RATION_CARD").val(),
        AadharNumber: aadhar,
        PANNumber: $("#IND_PAN_NUMBER").val(),
        DrivingLicense: $("#IND_DRIVING_LICENSE").val(),
        BranchCode: $("#OTHERDETAILS_REQ_BRANCH_ID").val(),
      };
      console.log(DedupeObj);
    }
  }

  DObj = JSON.stringify(DedupeObj);
  console.log(DObj);
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(DedupeObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        debugger;
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return false;
          }
          var parser = JSON.parse(data);
          var CustData = parser.CustomerDetails;
          console.log(parser.MatchFlag);
          if (parser.MatchFlag.toUpperCase().trim() === "NOMATCH FOUND") {
            $("#" + id).val(parser.MatchFlag);
          } else if (parser.MatchFlag.toUpperCase().trim() === "100% MATCH") {
            alert(
              "Customer already exists = " +
                parser.MatchFlag +
                ", fetching existing customer data.."
            );
            //                        openWindow_Dedupe('../ACO/ACO_CustomerData.jsp', xmlDoc, "dedupe", "Individual", $("#IND_IS_EXISTING"), "100% Match");
            fetchCIFNew("IND_CIF_NUMBER", CustData.CIFNumber);
            $("#" + id).val(parser.MatchFlag);
            return;
          } else {
            alert("No response received");
          }

          if (tableLoader.FORM_TYPE === "Non Individual") {
            if (
              $("#DEDUPE_CHECK_RESULT").val() !== null &&
              $("#DEDUPE_CHECK_RESULT").val() !== ""
            )
              document.getElementById("DEDUPE_CHECK_RESULT_SPAN").innerHTML =
                "";
            //$("#DEDUPE_CHECK_RESULT").trigger("blur");
          }
          if (
            tableLoader.FORM_TYPE === "Individual" ||
            tableLoader.FORM_TYPE === "NRI"
          ) {
            if (
              $("#IND_DEDUPE_RESULT").val() !== null &&
              $("#IND_DEDUPE_RESULT").val() !== ""
            )
              document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML = "";
            //$("#IND_DEDUPE_RESULT").trigger("blur");
          }
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("getDedupeResultNew::" + e);
    $body.removeClass("loading");
  }
}

//ADDED BY PRASHANT ON 17/03/2022.
function getNIDedupeResultNew(id) {
  debugger;
  if ($("#NI_EXISTING_CUST").val() === "Existing") {
    alert("Customer is Existing");
    $("#" + id)
      .val("100% MATCH")
      .addClass("changed");
    return;
  }
  var count = 0;
  $(".dedupeMandNI").each(function () {
    var kycValue = $("#" + $(this).attr("id")).val();
    if (kycValue === null || kycValue === "") {
      count++;
    }
  });
  if (count === 4) {
    alert("Please fill one kyc details to get dedupe result");
    return;
  }

  if (
    $("#NI_CITY_INCORPORATION").val() === null ||
    $("#NI_CITY_INCORPORATION").val() === ""
  ) {
    alert("Please fill City Of Incorporation to get dedupe result");
    return;
  }

  if (
    $("#NI_DATE_INCORPORATION").val() === null ||
    $("#NI_DATE_INCORPORATION").val() === ""
  ) {
    alert("Please fill Date Of Incorporation to get dedupe result");
    return;
  }

  var DedupeObj = {
    Name: $("#NI_CUSTNAME").val(),
    DateOfIncorporation: $("#NI_DATE_INCORPORATION").val().split("-").join("/"),
    PlaceOfIncorporation: $("#NI_CITY_INCORPORATION").val(),
    PanNumber: $("#NI_PAN_NUMBER").val(),
    TanNumber: $("#NI_TAN_NUMBER").val(),
    RegistrationNumber: $("#NI_REGISTRATION_NUMBER").val(),
    CinNumber: $("#NI_COMPANY_ID").val(),
    UdyogAadhar: $("#NI_UDYOG_AADHAR").val(),
  };
  DObj = JSON.stringify(DedupeObj);
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(DedupeObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        debugger;
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return false;
          }
          var parser = JSON.parse(data);
          console.log(parser.MatchFlag);
          if (parser.MatchFlag.toUpperCase().trim() === "100% MATCH") {
            var CustData = parser.CustomerDetails[0].CustomerDet;
            alert(
              "Customer already exists = " +
                parser.MatchFlag +
                ", fetching existing customer data."
            );
            NI_fetchCIFNew("NI_CIF_NUMBER", CustData.CifNumber);
            $("#NI_CIF_NUMBER").trigger("blur");
            $("#" + id)
              .val("100% MATCH")
              .addClass("changed");
            return;
          } else if (
            parser.MatchFlag.toUpperCase().trim() === "NOMATCH FOUND"
          ) {
            $("#" + id)
              .val(parser.MatchFlag)
              .trigger("blur")
              .addClass("changed");
          }
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("getNIDedupeResultNew::" + e);
    $body.removeClass("loading");
  }
}

function openWindow_Dedupe(
  url,
  detail,
  oper,
  formType,
  custStatusElem,
  alertText
) {
  //debugger;
  var sOptions;
  sOptions = "status=no,menubar=no,scrollbars=no,resizable=no,toolbar=no";
  sOptions = sOptions + ",width=" + screen.availWidth.toString();
  sOptions = sOptions + ",height=" + (screen.availHeight - 50).toString();
  sOptions =
    sOptions +
    ",screenX=0,screenY=0,left=0,top=0,menubar=no,resizable=no,directories=no,location=no";
  var child = window.open(url, "ACO_Cust", sOptions);
  child.detail = detail;
  child.oper = oper;
  child.formType = formType;
  child.alertText = alertText;
  child.custStatus = custStatusElem;
}

function openWindow_AML(url, referenceNo, elem, data) {
  //debugger;
  var sOptions;
  sOptions = "status=no,menubar=no,scrollbars=no,resizable=no,toolbar=no";
  sOptions = sOptions + ",width=" + screen.availWidth.toString();
  sOptions = sOptions + ",height=" + (screen.availHeight - 50).toString();
  sOptions =
    sOptions +
    ",screenX=0,screenY=0,left=0,top=0,menubar=no,resizable=no,directories=no,location=no";
  var child = window.open(url, "ACO_Cust_AML", sOptions);
  child.referenceNo = referenceNo;
  child.elem = elem;
  //New Added
  child.data = data;
}
//sample cif individual
//NI -180071087
//Individual- 180000166,190556622
function fetchCIF(id, existingCIF) {
  //debugger;
  var returnFlag = false;
  //    var existingCIF = $("#" + id).val().trim();
  var FetchCIFObj, responseObj;
  var element = $("#CUSTDETAILS_TABLE input[name=radio]:checked").closest("tr");
  if (existingCIF === "") {
    alert("Please fill CIF number first");
    return;
  }
  $(".IND_CIF_NUMBER").each(function () {
    if ($(this).text().trim() === existingCIF) {
      if ($(this).closest("tr").find(".FETCH_CIF_FLAG").length > 0) {
        if ($(this).closest("tr").find(".FETCH_CIF_FLAG").text() === "Y") {
          alert("Data already fetched for CIF Number : " + existingCIF);
          returnFlag = true;
          return false;
        }
      }
    }
  });
  if (returnFlag) {
    return;
  }
  if ($.isInActivities("ACO_Case_Initiation")) {
    if ($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val() === "") {
      alert("Please select total Account holders first");
      $("#activityFormPanel").scrollTo("#CHANNEL", 300);
      $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
        .parent()
        .stop()
        .css("background-color", "yellow")
        .animate({ backgroundColor: "#FFFFFF" }, 1500);
      return;
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length >=
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert(
        "You have already filled maximum total account holders for this case."
      );
      $("#activityFormPanel").scrollTo("#CHANNEL", 300);
      $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
        .parent()
        .stop()
        .css("background-color", "yellow")
        .animate({ backgroundColor: "#FFFFFF" }, 1500);
      return false;
    }
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    FetchCIFObj = {
      DeDupeEnquiryRqst: {
        Version: "1",
        AppId: "NEWGEN",
        TableName: "CIF",
        SearchParam: "ACN#" + existingCIF + "#",
        SearchType: "AND",
        FirstRecNo: "1",
        ResultLim: "10",
        RetFld:
          "DLEXPDT#PCNTRY#FNAME#ZOCNTRY#ZBSR4FLID#PPCOUNTRY#RESCD#ZNREGID#ZPSETRMM#ZVIDISSUE#ZMTHLNM#PASNUM#ZRCEXPDT#MCNTRY#SPOUSE#ZRCID#ZFADDTYP#NW#FINASSETS3#DOB#ZVISAEXPIRY#NATION#MAD1#ZOZIP#ZFTHFNAME#PPISSUE#PCITY#ZMAILFLG#FASPNAME#ZAPPS#OWN#ZMPH2#ZBSR4TLID#OED#ZPOSTOFF#ZVISAISSBY#ZFTHLNAME#VISANUM#FINASSETS1#MAR#ZEMPSEC#ZSALCO#ZVISATYP#ZOAD2#ZEMPSEC#ZOAD3#ZOBLNTYP#ZOAD4#ZIDENTYP#ZADDRPROOF#PAD1#FINASSETS2#PPEXPIRY#MAR#WEAKSEC#ZODISTRICT#ZCKYCACTYP#ZMTHMNAME#MCITY#ZADHARNO#MZIP#MNAME#PAD4#ZVOTEID#PHYST#ZFMAD#PAD3#ZFORM#NATION#ZFATCA#ZMAILFLG#PAD2#ZNWD#ZMPH#ZFTHPREF#ZMTHPREF#MAD3#ZFDCITY#MAD2#EDUC#ZFFMMIN#MAD4#ZPEP#ZNRGISSUE#ZOTALUK#MAR#ZOCITY#HOBBIES#ZOPS#INC#ZNRGEXPIRY#MINORITY#ZOAD1#ZVISAISSPLC#ZDIN#LNM#ZSALCO#SEX#PSTATE#OIN#EMAIL#ZDND#ZBSR4SLID#PZIP#FINASSETS5#ZVISADET#ZACPS#OIT#ZCKYCAPTYP#ZPPI#ZACPOSTOFF#ZFTHMNAME#ZFDSTATE#FINASSETS4#OCC#ZFDZIP#ZFDAD1#FAXNUM#DISTRICT#PREF#ZMTHFNAME#MSTATE#ZOSTATE#ZFDCNTRY#HPH#ZPSETRMY#ZRCISSUE#TAXID#DLNUM#ZFDAD4#ZFDAD3#ZFDAD2#CCODE#ZMADEQPAD#ZPOAT#ZPOAN#ZPOIT#ZPOIN#ZPOIISDT#ZPOIEXPDT#ZPOAISDT#ZPOAEXPDT#ZMDISTRICT#ZMTALUK#ACN#ZENO",
      },
    };
    fetchIbMbDetails = {
      DeDupeEnquiryRqst: {
        Version: "1",
        AppId: "NEWGEN",
        TableName: "CIFAUTH",
        SearchParam: "ACN#" + existingCIF + "#",
        SearchType: "AND",
        FirstRecNo: "1",
        ResultLim: "10",
        RetFld: "CIFAUTH.IBACCESS#CIFAUTH.MBACCESS",
      },
    };
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(FetchCIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          responseObj = JSON.parse(data);
          globalFetchObj = responseObj;
          var custArr = responseObj.Records.record.toString().split("#");
          if (custArr.length !== 146) {
            alert("Fecthing CIF issue due to extra data from Profile");
            return;
          }
          var requestArr =
            FetchCIFObj.DeDupeEnquiryRqst.RetFld.toString().split("#");
          var dataMap = new Object();
          for (var i = 0; i < custArr.length; i++) {
            dataMap[requestArr[i]] = custArr[i];
          }
          globalFetchObjMap = dataMap;
          setTimeout(function () {
            if (fillData(dataMap)) {
              console.log(
                "## internetBanking :: ",
                internetBanking,
                " ##mobileBanking  :: ",
                mobileBanking
              );
              alert(
                "Individual Customer CIF : " +
                  existingCIF +
                  " data fetched successfully."
              );
            } else {
              alert(
                "Exception while filling data for Individual Customer = " +
                  existingCIF
              );
            }
          }, 1000);
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCIF::" + e);
    $body.removeClass("loading");
  }

  //Changed Added By Vikas Lagad on 19-10-2021 [FETCH IB & MB DETAILS]Start
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(fetchIbMbDetails)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          responseObj = JSON.parse(data);
          // globalFetchObj = responseObj;
          var custArr = responseObj.Records.record.toString().split("#");
          if (custArr.length !== 2) {
            alert("Fecthing IB MB issue due to extra data from Profile");
            return;
          }
          //console.log('custArr ',custArr);

          var ibVal = custArr[0];
          if (ibVal === "1") {
            internetBanking = "Y";
          } else {
            internetBanking = "N";
          }

          var mobVal = custArr[1];
          if (mobVal === "1") {
            mobileBanking = "Y";
          } else {
            mobileBanking = "N";
          }
          //console.log('internetBanking :: ',internetBanking,' mobileBanking  :: ',mobileBanking);
        } else {
          alert("No response received for IB IB ");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCIF::" + e);
    $body.removeClass("loading");
  }

  // Changed Added By Vikas Lagad on 19-10-2021[FETCH IB & MB DETAILS] END
}

function fetchCIFNew(id, existingCIF) {
  debugger;
  var returnFlag = false;
  //    var existingCIF = $("#" + id).val().trim();
  var FetchCIFObj;
  if (existingCIF === "") {
    alert("Please fill CIF number first");
    return;
  }
  $(".IND_CIF_NUMBER").each(function () {
    if ($(this).text().trim() === existingCIF) {
      if ($(this).closest("tr").find(".FETCH_CIF_FLAG").length > 0) {
        if ($(this).closest("tr").find(".FETCH_CIF_FLAG").text() === "Y") {
          alert("Data already fetched for CIF Number : " + existingCIF);
          returnFlag = true;
          return false;
        }
      }
    }
  });
  if (returnFlag) {
    return;
  }
  if ($.isInActivities("ACO_Case_Initiation")) {
    if ($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val() === "") {
      alert("Please select total Account holders first");
      $("#activityFormPanel").scrollTo("#CHANNEL", 300);
      $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
        .parent()
        .stop()
        .css("background-color", "yellow")
        .animate({ backgroundColor: "#FFFFFF" }, 1500);
      return;
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length >=
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert(
        "You have already filled maximum total account holders for this case."
      );
      $("#activityFormPanel").scrollTo("#CHANNEL", 300);
      $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
        .parent()
        .stop()
        .css("background-color", "yellow")
        .animate({ backgroundColor: "#FFFFFF" }, 1500);
      return false;
    }
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    FetchCIFObj = {
      Data: {
        MobileNo: "",
        AadhaarNo: "",
        PanNo: "",
        CustomerNo: existingCIF,
        BranchCode: "",
      },
    };
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(FetchCIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? existingCIF : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }

          var custDataMap = JSON.parse(data);
          var expiryDateStr = custDataMap.RE_KYC_DATE;
          var kycType = custDataMap.KYC_TYPE;
          var reKycExpiryDateScenario = 0;
          var kycTypeScenario = 0;
          var expiryDateScenario = 0;
          var expiryDate;
          if (expiryDateStr !== undefined) {
            expiryDate = new Date(expiryDateStr.split("/").reverse().join("-"));
          }

          var currentDate = new Date();
          console.log(currentDate);
          console.log(expiryDate);
          if (expiryDate !== undefined) {
            if (currentDate > expiryDate) {
              reKycExpiryDateScenario = 1;
            }
          }
          var kycDetailsArray = custDataMap.KYCDetails.KYCDet;
          console.log(kycDetailsArray);
          var expiryDateArray = new Array();
          if (kycDetailsArray !== undefined) {
            for (var i = 0; i < kycDetailsArray.length; i++) {
              if (kycDetailsArray[i].EXPIRYDATE !== undefined) {
                expiryDateArray.push(kycDetailsArray[i].EXPIRYDATE);
              }
            }
            console.log(expiryDateArray);
          }
          if (expiryDateArray.length !== 0) {
            for (var i = 0; i < expiryDateArray.length; i++) {
              var expiryDate1 = new Date(expiryDateArray[i].split("T")[0]);
              if (currentDate > expiryDate1) {
                expiryDateScenario = 1;
              }
            }
          }
          if (kycType !== undefined) {
            var kycTypeArray = [31, 39, 72];
            console.log(kycTypeArray.includes(Number(kycType)));
            if (kycTypeArray.includes(Number(kycType))) {
              kycTypeScenario = 1;
            }
          }

          if (
            reKycExpiryDateScenario === 1 &&
            expiryDateScenario === 1 &&
            kycTypeScenario === 1
          ) {
            alert(
              "CIF RE_KYC_DATE " +
                expiryDate +
                " already due. Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            alert(
              "Document expired! Kindly update latest document by raising SR under Category: Account Related, Subcategory: Document Expiry Date Updation"
            );
            alert(
              "CIF without FULL-KYC! Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 0 &&
            expiryDateScenario === 1 &&
            kycTypeScenario === 1
          ) {
            alert(
              "Document expired! Kindly update latest document by raising SR under Category: Account Related, Subcategory: Document Expiry Date Updation"
            );
            alert(
              "CIF without FULL-KYC! Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 1 &&
            expiryDateScenario === 0 &&
            kycTypeScenario === 1
          ) {
            alert(
              "CIF RE_KYC_DATE " +
                expiryDate +
                " already due. Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            alert(
              "CIF without FULL-KYC! Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 1 &&
            expiryDateScenario === 1 &&
            kycTypeScenario === 0
          ) {
            alert(
              "CIF RE_KYC_DATE " +
                expiryDate +
                " already due. Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            alert(
              "Document expired! Kindly update latest document by raising SR under Category: Account Related, Subcategory: Document Expiry Date Updation"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 0 &&
            expiryDateScenario === 0 &&
            kycTypeScenario === 1
          ) {
            alert(
              "CIF without FULL-KYC! Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 1 &&
            expiryDateScenario === 0 &&
            kycTypeScenario === 0
          ) {
            alert(
              "CIF RE_KYC_DATE " +
                expiryDate +
                " already due. Kindly update KYC by raising SR under Category: Update/Change in Customer A/C, Subcategory: RE-KYC"
            );
            return;
          } else if (
            reKycExpiryDateScenario === 0 &&
            expiryDateScenario === 1 &&
            kycTypeScenario === 0
          ) {
            alert(
              "Document expired! Kindly update latest document by raising SR under Category: Account Related, Subcategory: Document Expiry Date Updation"
            );
            return;
          }

          setTimeout(function () {
            if (fillDataNew(custDataMap)) {
              alert(
                "Individual Customer CIF : " +
                  existingCIF +
                  " data fetched successfully."
              );
            } else {
              alert(
                "Exception while filling data for Individual Customer = " +
                  existingCIF
              );
            }
          }, 1000);
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCIFNew::" + e);
    $body.removeClass("loading");
  }
}

function fetchCITY(id, cityID, stateID, countryID, districtID) {
  //debugger;
  if ($("#" + countryID).val() !== "IN") {
    return;
  }
  if (!$("#" + id).val()) {
    alert("Please fill PINCODE first.");
    return;
  }
  if ($("#" + id + "_errmsg").text()) {
    alert($("#" + id + "_errmsg").text());
    return;
  }
  if ($("#" + id + "_SPAN").text()) {
    alert($("#" + id + "_SPAN").text());
    return;
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        $("#" + id).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&FIRST_NAME=" +
        $("#PERSONALDETAILS_FIRST_NAME").val() +
        "&LAST_NAME=" +
        $("#PERSONALDETAILS_LAST_NAME").val(),
      url: "../CustomerOnboarding/GenericService",
      success: function (data) {
        if (data) {
          if (data === "City not found") {
            alert("City not found for this PINCODE");
            return;
          }
          var response = JSON.parse(data);
          $("#" + cityID)
            .val(response.CITY)
            .addClass("changed");
          $("#" + stateID)
            .val(response.STATECODE)
            .addClass("changed");
          if ($("#" + cityID).val() !== null && $("#" + cityID).val() !== "") {
            if (document.getElementById(cityID + "_SPAN"))
              document.getElementById(cityID + "_SPAN").innerHTML = "";
          }
          if (
            $("#" + stateID).val() !== null &&
            $("#" + stateID).val() !== ""
          ) {
            if (document.getElementById(stateID + "_SPAN"))
              document.getElementById(stateID + "_SPAN").innerHTML = "";
          }

          if (
            $("#" + districtID).val() !== null &&
            $("#" + districtID).val() !== ""
          ) {
            if (document.getElementById(stateID + "_SPAN"))
              document.getElementById(stateID + "_SPAN").innerHTML = "";
          }
        } else {
          alert("No Response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCITY::" + e);
    $body.removeClass("loading");
  }
}

function fetchCITYNew(id, cityID, stateID, countryID, districtID) {
  debugger;
  if ($("#" + countryID).val() !== "IN") {
    return;
  }
  if (!$("#" + id).val()) {
    alert("Please fill PINCODE first.");
    return;
  }
  if ($("#" + id + "_errmsg").text()) {
    alert($("#" + id + "_errmsg").text());
    return;
  }
  if ($("#" + id + "_SPAN").text()) {
    alert($("#" + id + "_SPAN").text());
    return;
  }

  if ($("#FORM_TYPE").val() === "NRI") {
    return;
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        $("#" + id).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&FIRST_NAME=" +
        $("#PERSONALDETAILS_FIRST_NAME").val() +
        "&LAST_NAME=" +
        $("#PERSONALDETAILS_LAST_NAME").val(),
      url: "../ACO/GenericService",
      success: function (data) {
        debugger;
        if (data) {
          if (data === "City not found") {
            alert("City not found for this PINCODE");
            return;
          }
          var response = JSON.parse(data);
          $("#" + cityID)
            .val(response.CITY)
            .addClass("changed");
          $("#" + stateID)
            .val(response.STATECODE)
            .addClass("changed");
          if ($("#" + cityID).val() !== null && $("#" + cityID).val() !== "") {
            if (document.getElementById(cityID + "_SPAN"))
              document.getElementById(cityID + "_SPAN").innerHTML = "";
          }
          if (
            $("#" + stateID).val() !== null &&
            $("#" + stateID).val() !== ""
          ) {
            if (document.getElementById(stateID + "_SPAN"))
              document.getElementById(stateID + "_SPAN").innerHTML = "";
          }

          if (
            $("#" + districtID).val() !== null &&
            $("#" + districtID).val() !== ""
          ) {
            if (document.getElementById(stateID + "_SPAN"))
              document.getElementById(stateID + "_SPAN").innerHTML = "";
          }
        } else {
          alert("No Response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCITYNew::" + e);
    $body.removeClass("loading");
  }
}

var globalFetchObj;
var globalFetchObjMap;
var globalResp;
var idGlobalRespMapping = new Object();
function NI_fetchCIF(id, existingCIF) {
  debugger;
  var FetchCIFObj, responseObj;
  if (!$("#" + id).val()) {
    alert("Please fill CIF number first");
    return;
  }
  //    var existingCIF = $("#" + id).val().trim();
  $(".IND_CIF_NUMBER").each(function () {
    if ($(this).text().trim() === existingCIF) {
      if ($(this).closest("tr").find(".FETCH_CIF_FLAG").length > 0) {
        if ($(this).closest("tr").find(".FETCH_CIF_FLAG").text() === "Y") {
          alert("Data already fetched for CIF Number : " + existingCIF);
          returnFlag = true;
          return false;
        }
      }
    }
  });
  if ($.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    FetchCIFObj = {
      DeDupeEnquiryRqst: {
        Version: "1",
        AppId: "NEWGEN",
        TableName: "CIF",
        SearchParam: "ACN#" + existingCIF + "#",
        SearchType: "AND",
        FirstRecNo: "1",
        ResultLim: "10",
        RetFld:
          "LNM#PAD1#PAD2#PAD3#PAD4#PCITY#PCNTRY#PSTATE#PZIP#MAD1#MAD2#MAD3#MAD4#MCITY#MCNTRY#MSTATE#MZIP#BPH#FAXNUM#EMAIL#NW#AS#DTINCORP#ZFADDTYP#ZFDAD1#ZFATCA#ZFDAD2#ZFDAD3#ZFDAD4#ZFDCITY#ZFDSTATE#ZAPPMAP#ZFDCNTRY#ZFDZIP#ZCIN#ZGIIN#ZFENTITY#ZREGNUM#ZBUSSDT#ZREGCNTRY#ZDND#ZMPH#ZSMSCUST#ZMAILFLG#ZEFRE#ZGTANNO#ZACPOSTOFF#ZACPS#ZPOSTOFF#ZAPPS#ZAREGADDTYP#ZINTERNET#W9ENTTYPE#ZCITLICNO#ZCISLSTAXRNO#ZCISRTAXRNO#ZCIEXREGNO#DISTRICT#ZBSR4FLID#ZBSR4SLID#ZBSR4TLID#ZSSIMSMENO#ZCRAMT#ACN#ZBIRTHCITY#ZMADEQPAD#ZENO#TAXID",
      },
    };
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(FetchCIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          responseObj = JSON.parse(data);
          globalFetchObj = responseObj;
          //mobile banking data replacing
          responseObj.Records.record = responseObj.Records.record.replace(
            "MB#1",
            "1"
          );
          var custArr = responseObj.Records.record.toString().split("#");
          var requestArr =
            FetchCIFObj.DeDupeEnquiryRqst.RetFld.toString().split("#");
          var dataMap = new Object();
          for (var i = 0; i < custArr.length; i++) {
            dataMap[requestArr[i]] = custArr[i];
          }
          globalFetchObjMap = dataMap;
          if (NI_fillData(dataMap)) {
            alert(
              "Non Individual Customer CIF : " +
                existingCIF +
                " data fetched successfully."
            );
          } else {
            alert(
              "Exception while filling data for NI Customer = " + existingCIF
            );
          }
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("NI_fetchCIF::" + e);
    $body.removeClass("loading");
  }
}

function NI_fetchCIFNew(id, existingCIF) {
  debugger;
  var FetchCIFObj;
  if (!$("#" + id).val()) {
    alert("Please fill CIF number first");
    return;
  }
  //    var existingCIF = $("#" + id).val().trim();
  $(".IND_CIF_NUMBER").each(function () {
    if ($(this).text().trim() === existingCIF) {
      if ($(this).closest("tr").find(".FETCH_CIF_FLAG").length > 0) {
        if ($(this).closest("tr").find(".FETCH_CIF_FLAG").text() === "Y") {
          alert("Data already fetched for CIF Number : " + existingCIF);
          returnFlag = true;
          return false;
        }
      }
    }
  });
  if ($.isInActivities("ACO_Case_Initiation,ACO_DVU,ACO_Discrepancy")) {
    FetchCIFObj = {
      Data: {
        MobileNo: "",
        AadhaarNo: "",
        PanNo: "",
        CustomerNo: existingCIF,
        BranchCode: "",
      },
    };
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(FetchCIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          var custDataMap = JSON.parse(data);
          console.log(custDataMap);
          setTimeout(function () {
            if (NI_fillDataNew(custDataMap)) {
              alert(
                "Individual Customer CIF : " +
                  existingCIF +
                  " data fetched successfully."
              );
            } else {
              alert(
                "Exception while filling data for Individual Customer = " +
                  existingCIF
              );
            }
          }, 1000);
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("NI_fetchCIFNew::" + e);
    $body.removeClass("loading");
  }
}

function NI_fillData(obj) {
  debugger;
  try {
    if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
      $("#NI_CUSTNAME").val(obj["LNM"]).addClass("changed").trigger("blur");
      $("#NI_TELEPHONE_NUMBER")
        .val(obj["BPH"])
        .addClass("changed")
        .trigger("blur");
      $("#NI_CIF_NUMBER").val(obj["ACN"]).addClass("changed").trigger("blur");
      $.setValue("M1_NIOFFC_ADD_LINE1", obj["PAD1"]);
      $.setValue("M1_NIOFFC_ADD_LINE2", obj["PAD2"]);
      $.setValue("M1_NIOFFC_ADD_LINE3", obj["PAD3"]);
      $.setValue("M1_NIOFFC_LANDMARK", obj["PAD4"]);
      $.setValue("M1_NIOFFC_CITY", obj["PCITY"]);
      $.setValue("M1_NIOFFC_COUNTRY", obj["PCNTRY"]);
      $.setValue("M1_NIOFFC_STATE", obj["PSTATE"]);
      $.setValue("M1_NIOFFC_PINCODE", obj["PZIP"]);
      $.setValue("NIOFFC_ADD_LINE1", obj["PAD1"]);
      $.setValue("NIOFFC_ADD_LINE2", obj["PAD2"]);
      $.setValue("NIOFFC_ADD_LINE3", obj["PAD3"]);
      $.setValue("NIOFFC_LANDMARK", obj["PAD4"]);
      $.setValue("NIOFFC_CITY", obj["PCITY"]);
      $.setValue("NIOFFC_COUNTRY", obj["PCNTRY"]);
      $.setValue("NIOFFC_STATE", obj["PSTATE"]);
      $.setValue("NIOFFC_PINCODE", obj["PZIP"]);
      $.setValue("M1_NI_CONTACT_FAX", obj["FAXNUM"]);
      $.setValue("M1_NI_CONTACT_EMAIL", obj["EMAIL"]);
      $.setValue("M1_ENTITY_ANNUAL_TURNOVER", obj["AS"]);
      $.setValue("NI_CONTACT_FAX", obj["FAXNUM"]);
      $.setValue("NI_CONTACT_EMAIL", obj["EMAIL"]);
      $.setValue("ENTITY_ANNUAL_TURNOVER", obj["AS"]);
      $.setValue(
        "NI_DATE_INCORPORATION",
        obj["DTINCORP"] ? obj["DTINCORP"].split("/").reverse().join("-") : ""
      );
      $.setValue("M1_NI_FATCA_ADDRTYPE", obj["ZFADDTYP"]);
      $.setValue("NI_FATCA_ADDRTYPE", obj["ZFADDTYP"]);
      $.setValue("NI_CITY_INCORPORATION", obj["ZBIRTHCITY"]);
      $.setValue("M1_FNI_FATCA_TAXADDR1", obj["ZFDAD1"]);
      $.setValue("FNI_FATCA_TAXADDR1", obj["ZFDAD1"]);
      $.setValue("M1_NI_FATCA_DROPDOWN", obj["ZFATCA"]);
      $.setValue("M1_FNI_FATCA_TAXADDR2", obj["ZFDAD2"]);
      $.setValue("M1_FNI_FATCA_TAXADDR3", obj["ZFDAD3"]);
      $.setValue("M1_FNI_FATCA_LANDMARK", obj["ZFDAD4"]);
      $.setValue("M1_NI_FATCA_CITY", obj["ZFDCITY"]);
      $.setValue("M1_NI_FATCA_STATE", obj["ZFDSTATE"]);
      $.setValue("M1_NI_FATCA_COUNTRY", obj["ZFDCNTRY"]);
      $.setValue("M1_NI_SERVICEMOBBANKING", obj["ZAPPMAP"]);
      $.setValue("NI_FATCA_DROPDOWN", obj["ZFATCA"]);
      $.setValue("FNI_FATCA_TAXADDR2", obj["ZFDAD2"]);
      $.setValue("FNI_FATCA_TAXADDR3", obj["ZFDAD3"]);
      $.setValue("FNI_FATCA_LANDMARK", obj["ZFDAD4"]);
      $.setValue("NI_FATCA_CITY", obj["ZFDCITY"]);
      $.setValue("NI_FATCA_STATE", obj["ZFDSTATE"]);
      $.setValue("NI_FATCA_COUNTRY", obj["ZFDCNTRY"]);
      $.setValue("NI_SERVICEMOBBANKING", obj["ZAPPMAP"]);
      $.setValue("NI_COMPANY_ID", obj["ZCIN"]);
      $.setValue("M1_NI_FATCA_GLOBALENTITYID", obj["ZGIIN"]);
      $.setValue("NI_FATCA_GLOBALENTITYID", obj["ZGIIN"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZFENTITY"]);
      $.setValue("NI_REGISTRATION_NUMBER", obj["ZREGNUM"]);
      $.setValue(
        "M1_NI_BUSINESS_COMMENCEMENT_DATE",
        obj["ZBUSSDT"] ? obj["ZBUSSDT"].split("/").reverse().join("-") : ""
      );
      $.setValue(
        "NI_BUSINESS_COMMENCEMENT_DATE",
        obj["ZBUSSDT"] ? obj["ZBUSSDT"].split("/").reverse().join("-") : ""
      );
      $.setValue("NI_COUNTRY_INCORPORATION", obj["ZREGCNTRY"]);
      $.setValue("M1_NI_SERVICEDND", obj["ZDND"]);
      $.setValue("NI_SERVICEDND", obj["ZDND"]);
      $.setValue("M1_NI_CONTACT_MOB", obj["ZMPH"]);
      $.setValue("NI_CONTACT_MOB", obj["ZMPH"]);
      $.setValue("M1_NI_SERVICESMS", obj["ZSMSCUST"]);
      //            $.setValue("M1_NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("M1_NI_FREQ_EMAIL", obj["ZEFRE"]);
      $.setValue("M1_NIOFFC_LANDMARK", obj["ZACPOSTOFF"]);
      $.setValue("M1_NICORR_ADD_LINE1", obj["MAD1"]);
      $.setValue("M1_NICORR_ADD_LINE2", obj["MAD2"]);
      $.setValue("M1_NICORR_ADD_LINE3", obj["MAD3"]);
      $.setValue("M1_NICORR_LANDMARK", obj["MAD4"]);
      $.setValue("M1_NICORR_COUNTRY", obj["MCNTRY"]);
      $.setValue("M1_NICORR_STATE", obj["MSTATE"]);
      $.setValue("M1_NICORR_CITY", obj["MCITY"]);
      $.setValue("M1_NICORR_PINCODE", obj["MZIP"]);
      $.setValue("NICORR_ADD_LINE1", obj["MAD1"]);
      $.setValue("NICORR_ADD_LINE2", obj["MAD2"]);
      $.setValue("NICORR_ADD_LINE3", obj["MAD3"]);
      $.setValue("NICORR_LANDMARK", obj["MAD4"]);
      $.setValue("NICORR_COUNTRY", obj["MCNTRY"]);
      $.setValue("NICORR_STATE", obj["MSTATE"]);
      $.setValue("NICORR_CITY", obj["MCITY"]);
      $.setValue("NICORR_PINCODE", obj["MZIP"]);
      $.setValue("M1_NICORR_PS", obj["ZACPS"]);
      $.setValue("M1_NICORR_PO", obj["ZPOSTOFF"]);
      $.setValue("NI_SERVICESMS", obj["ZSMSCUST"]);
      //            $.setValue("NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("NI_FREQ_EMAIL", obj["ZEFRE"]);
      $.setValue("NIOFFC_LANDMARK", obj["ZACPOSTOFF"]);
      $.setValue("NICORR_PS", obj["ZACPS"]);
      $.setValue("NICORR_PO", obj["ZPOSTOFF"]);
      $.setValue("M1_NIOFFC_PS", obj["ZAPPS"]);
      $.setValue("M1_NI_REG_ADD_TYPE", obj["ZAREGADDTYP"]);
      $.setValue("NI_REG_ADD_TYPE", obj["ZAREGADDTYP"]);
      $.setValue("M1_NI_SERVICEINTERNET", obj["ZINTERNET"]);
      $.setValue("NI_SERVICEINTERNET", obj["ZINTERNET"]);
      $.setValue("CONSTITUTION", obj["W9ENTTYPE"]);
      $.setValue("M1_NI_OTHERINFO_TRADENO", obj["ZCITLICNO"]);
      $.setValue("M1_NI_OTHERINFO_STREGNO", obj["ZCISLSTAXRNO"]);
      $.setValue("NI_OTHERINFO_TRADENO", obj["ZCITLICNO"]);
      $.setValue("NI_OTHERINFO_STREGNO", obj["ZCISLSTAXRNO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCISRTAXRNO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCIEXREGNO"]);
      $.setValue("M1_NIOFFC_DISTRICT", obj["DISTRICT"]);
      $.setValue("NIOFFC_DISTRICT", obj["DISTRICT"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4FLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4SLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4TLID"]);

      $.setValue("M1_NI_CREDIT_REQAMOUNT", obj["ZCRAMT"]);
      //            $.setValue("KYC_NAME_ID_PROOF", obj["ZFOIT"]);
      //            $.setValue("KYC_OTHERIDPROOF", obj["ZFOITOTH"]);
      //            $.setValue("KYC_NUM_ID_PROOF", obj["ZFOIN"]);
      $.setValue("NI_CREDIT_REQAMOUNT", obj["ZCRAMT"]);
      $.setValue("NI_PAN_NUMBER", obj["TAXID"]);
    } else if ($.isInActivities("ACO_DVU")) {
      $("#NI_EXISTING_CUST").val("Existing").addClass("changed");
      $("#NI_CIF_NUMBER").val(obj["ACN"]).addClass("changed");
      $("#NI_PAN_NUMBER").val(obj["TAXID"]).addClass("changed");
      $.setValue("M1_NIOFFC_ADD_LINE1", obj["PAD1"]);
      $.setValue("M1_NIOFFC_ADD_LINE2", obj["PAD2"]);
      $.setValue("M1_NIOFFC_ADD_LINE3", obj["PAD3"]);
      $.setValue("M1_NIOFFC_LANDMARK", obj["PAD4"]);
      $.setValue("M1_NIOFFC_CITY", obj["PCITY"]);
      $.setValue("M1_NIOFFC_COUNTRY", obj["PCNTRY"]);
      $.setValue("M1_NIOFFC_STATE", obj["PSTATE"]);
      $.setValue("M1_NIOFFC_PINCODE", obj["PZIP"]);
      $.setValue("NIOFFC_ADD_LINE1", obj["PAD1"]);
      $.setValue("NIOFFC_ADD_LINE2", obj["PAD2"]);
      $.setValue("NIOFFC_ADD_LINE3", obj["PAD3"]);
      $.setValue("NIOFFC_LANDMARK", obj["PAD4"]);
      $.setValue("NIOFFC_CITY", obj["PCITY"]);
      $.setValue("NIOFFC_COUNTRY", obj["PCNTRY"]);
      $.setValue("NIOFFC_STATE", obj["PSTATE"]);
      $.setValue("NIOFFC_PINCODE", obj["PZIP"]);
      $.setValue("M1_NICORR_ADD_LINE1", obj["MAD1"]);
      $.setValue("M1_NICORR_ADD_LINE2", obj["MAD2"]);
      $.setValue("M1_NICORR_ADD_LINE3", obj["MAD3"]);
      $.setValue("M1_NICORR_LANDMARK", obj["MAD4"]);
      $.setValue("M1_NICORR_COUNTRY", obj["MCNTRY"]);
      $.setValue("M1_NICORR_STATE", obj["MSTATE"]);
      $.setValue("M1_NICORR_CITY", obj["MCITY"]);
      $.setValue("M1_NICORR_PINCODE", obj["MZIP"]);
      $.setValue("NICORR_ADD_LINE1", obj["MAD1"]);
      $.setValue("NICORR_ADD_LINE2", obj["MAD2"]);
      $.setValue("NICORR_ADD_LINE3", obj["MAD3"]);
      $.setValue("NICORR_LANDMARK", obj["MAD4"]);
      $.setValue("NICORR_COUNTRY", obj["MCNTRY"]);
      $.setValue("NICORR_STATE", obj["MSTATE"]);
      $.setValue("NICORR_CITY", obj["MCITY"]);
      $.setValue("NICORR_PINCODE", obj["MZIP"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MAD1"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MAD2"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MAD3"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MAD4"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MCITY"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MCNTRY"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MSTATE"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["MZIP"]);

      $.setValue("M1_NI_CONTACT_FAX", obj["FAXNUM"]);
      $.setValue("M1_NI_CONTACT_EMAIL", obj["EMAIL"]);
      $.setValue("M1_ENTITY_ANNUAL_TURNOVER", obj["AS"]);
      $.setValue("NI_CONTACT_FAX", obj["FAXNUM"]);
      $.setValue("NI_CONTACT_EMAIL", obj["EMAIL"]);
      $.setValue("ENTITY_ANNUAL_TURNOVER", obj["AS"]);
      $("#NI_DATE_INCORPORATION").val(
        obj["DTINCORP"] ? obj["DTINCORP"].split("/").join("-") : ""
      );
      $.setValue("M1_NI_FATCA_ADDRTYPE", obj["ZFADDTYP"]);
      $.setValue("NI_FATCA_ADDRTYPE", obj["ZFADDTYP"]);
      $("#NI_CITY_INCORPORATION").val(obj["BIRTHCITY"]);
      $.setValue("M1_FNI_FATCA_TAXADDR1", obj["ZFDAD1"]);
      $.setValue("FNI_FATCA_TAXADDR1", obj["ZFDAD1"]);
      $.setValue("M1_NI_FATCA_DROPDOWN", obj["ZFATCA"]);
      $.setValue("M1_FNI_FATCA_TAXADDR2", obj["ZFDAD2"]);
      $.setValue("M1_FNI_FATCA_TAXADDR3", obj["ZFDAD3"]);
      $.setValue("M1_FNI_FATCA_LANDMARK", obj["ZFDAD4"]);
      $.setValue("M1_NI_FATCA_CITY", obj["ZFDCITY"]);
      $.setValue("M1_NI_FATCA_STATE", obj["ZFDSTATE"]);
      $.setValue("M1_NI_FATCA_COUNTRY", obj["ZFDCNTRY"]);
      $.setValue("M1_NI_SERVICEMOBBANKING", obj["ZAPPMAP"]);
      $.setValue("NI_FATCA_DROPDOWN", obj["ZFATCA"]);
      $.setValue("FNI_FATCA_TAXADDR2", obj["ZFDAD2"]);
      $.setValue("FNI_FATCA_TAXADDR3", obj["ZFDAD3"]);
      $.setValue("FNI_FATCA_LANDMARK", obj["ZFDAD4"]);
      $.setValue("NI_FATCA_CITY", obj["ZFDCITY"]);
      $.setValue("NI_FATCA_STATE", obj["ZFDSTATE"]);
      $.setValue("NI_FATCA_COUNTRY", obj["ZFDCNTRY"]);
      $.setValue("NI_SERVICEMOBBANKING", obj["ZAPPMAP"]);
      $("#NI_COMPANY_ID").val(obj["ZCIN"]);
      $.setValue("M1_NI_FATCA_GLOBALENTITYID", obj["ZGIIN"]);
      $.setValue("NI_FATCA_GLOBALENTITYID", obj["ZGIIN"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZFENTITY"]);
      $("#NI_REGISTRATION_NUMBER").val(obj["ZREGNUM"]);
      $.setValue(
        "M1_NI_BUSINESS_COMMENCEMENT_DATE",
        obj["ZBUSSDT"] ? obj["ZBUSSDT"].split("/").reverse().join("-") : ""
      );
      $.setValue(
        "NI_BUSINESS_COMMENCEMENT_DATE",
        obj["ZBUSSDT"] ? obj["ZBUSSDT"].split("/").reverse().join("-") : ""
      );
      $("#NI_COUNTRY_INCORPORATION").val(obj["ZREGCNTRY"]);
      $.setValue("M1_NI_SERVICEDND", obj["ZDND"]);
      $.setValue("NI_SERVICEDND", obj["ZDND"]);
      $.setValue("M1_NI_CONTACT_MOB", obj["ZMPH"]);
      $.setValue("NI_CONTACT_MOB", obj["ZMPH"]);
      $.setValue("M1_NI_SERVICESMS", obj["ZSMSCUST"]);
      //            $.setValue("M1_NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("M1_NI_FREQ_EMAIL", obj["ZEFRE"]);
      $.setValue("M1_NIOFFC_LANDMARK", obj["ZACPOSTOFF"]);
      $.setValue("M1_NICORR_PS", obj["ZACPS"]);
      $.setValue("M1_NICORR_PO", obj["ZPOSTOFF"]);
      $.setValue("NI_SERVICESMS", obj["ZSMSCUST"]);
      //            $.setValue("NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("NI_FREQ_EMAIL", obj["ZEFRE"]);
      $.setValue("NIOFFC_LANDMARK", obj["ZACPOSTOFF"]);
      $.setValue("NICORR_PS", obj["ZACPS"]);
      $.setValue("NICORR_PO", obj["ZPOSTOFF"]);
      $.setValue("M1_NIOFFC_PS", obj["ZAPPS"]);
      $.setValue("M1_NI_REG_ADD_TYPE", obj["ZAREGADDTYP"]);
      $.setValue("NI_REG_ADD_TYPE", obj["ZAREGADDTYP"]);
      $.setValue("M1_NI_SERVICEINTERNET", obj["ZINTERNET"]);
      $.setValue("NI_SERVICEINTERNET", obj["ZINTERNET"]);
      $.setValue("CONSTITUTION", obj["W9ENTTYPE"]);
      $.setValue("M1_NI_OTHERINFO_TRADENO", obj["ZCITLICNO"]);
      $.setValue("M1_NI_OTHERINFO_STREGNO", obj["ZCISLSTAXRNO"]);
      $.setValue("NI_OTHERINFO_TRADENO", obj["ZCITLICNO"]);
      $.setValue("NI_OTHERINFO_STREGNO", obj["ZCISLSTAXRNO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCISRTAXRNO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCIEXREGNO"]);
      $.setValue("M1_NIOFFC_DISTRICT", obj["DISTRICT"]);
      $.setValue("NIOFFC_DISTRICT", obj["DISTRICT"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4FLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4SLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4TLID"]);

      $.setValue("M1_NI_CREDIT_REQAMOUNT", obj["ZCRAMT"]);
      //            $.setValue("KYC_NAME_ID_PROOF", obj["ZFOIT"]);
      //            $.setValue("KYC_OTHERIDPROOF", obj["ZFOITOTH"]);
      //            $.setValue("KYC_NUM_ID_PROOF", obj["ZFOIN"]);
      $.setValue("NI_CREDIT_REQAMOUNT", obj["ZCRAMT"]);
      $.setValue("M1_NI_PREF_MAILADDR", obj["ZMAILFLG"]);
      $.setValue("NI_PREF_MAILADDR", obj["ZMAILFLG"]);
    }

    return true;
  } catch (e) {
    console.log("NI_FetchCIF = Error while filling data");
    return false;
  }
}

function NI_fillDataNew(obj) {
  debugger;
  try {
    if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
      $("#NI_CUSTNAME")
        .val(obj["FIRSTNAME"])
        .addClass("changed")
        .trigger("blur");
      $("#NI_TELEPHONE_NUMBER")
        .val(obj["REGISTEREDMOBILE"])
        .addClass("changed")
        .trigger("blur");
      $("#NI_CIF_NUMBER")
        .val(obj["CIFNUMBER"])
        .addClass("changed")
        .trigger("blur");
      $.each(obj["AddressDetails"], function (key, val) {
        $.each(val, function (k, v) {
          $.setValue("M1_NIOFFC_DISTRICT", v["DISTRICT"]);
          $.setValue("NIOFFC_DISTRICT", v["DISTRICT"]);
          if (v["ADDRESSTYPE"] === "O") {
            $.setValue("M1_NIOFFC_ADD_LINE1", v["ADDRESS1"]);
            $.setValue("M1_NIOFFC_ADD_LINE2", v["ADDRESS2"]);
            $.setValue("M1_NIOFFC_ADD_LINE3", v["ADDRESS3"]);
            $.setValue("M1_NIOFFC_LANDMARK", v["LANDMARK"]);
            $.setValue("M1_NIOFFC_CITY", v["CITY"]);
            $.setValue("M1_NIOFFC_COUNTRY", v["COUNTRY"]);
            $.setValue("M1_NIOFFC_STATE", v["STATE"]);
            $.setValue("M1_NIOFFC_PINCODE", v["PINCODE"]);
            $.setValue("NIOFFC_ADD_LINE1", v["ADDRESS1"]);
            $.setValue("NIOFFC_ADD_LINE2", v["ADDRESS2"]);
            $.setValue("NIOFFC_ADD_LINE3", v["ADDRESS3"]);
            $.setValue("NIOFFC_LANDMARK", v["LANDMARK"]);
            $.setValue("NIOFFC_CITY", v["CITY"]);
            $.setValue("NIOFFC_COUNTRY", v["COUNTRY"]);
            $.setValue("NIOFFC_STATE", v["STATE"]);
            $.setValue("NIOFFC_PINCODE", v["PINCODE"]);
            $.setValue("M1_NI_CONTACT_FAX", obj["FAX_NUMBER"]);
            $.setValue("M1_NI_CONTACT_EMAIL", v["EMAILID"]);
            $.setValue("M1_ENTITY_ANNUAL_TURNOVER", "");
            $.setValue("NI_CONTACT_FAX", "");
            $.setValue("NI_CONTACT_EMAIL", v["EMAILID"]);
          } else if (v["ADDRESSTYPE"] === "P") {
            $.setValue("M1_NICORR_ADD_LINE1", v["ADDRESS1"]);
            $.setValue("M1_NICORR_ADD_LINE2", v["ADDRESS2"]);
            $.setValue("M1_NICORR_ADD_LINE3", v["ADDRESS3"]);
            $.setValue("M1_NICORR_LANDMARK", v["LANDMARK"]);
            $.setValue("M1_NICORR_COUNTRY", v["COUNTRY"]);
            $.setValue("M1_NICORR_STATE", v["STATE"]);
            $.setValue("M1_NICORR_CITY", v["CITY"]);
            $.setValue("M1_NICORR_PINCODE", v["PINCODE"]);
            $.setValue("NICORR_ADD_LINE1", v["ADDRESS1"]);
            $.setValue("NICORR_ADD_LINE2", v["ADDRESS3"]);
            $.setValue("NICORR_ADD_LINE3", v["ADDRESS3"]);
            $.setValue("NICORR_LANDMARK", v["LANDMARK"]);
            $.setValue("NICORR_COUNTRY", v["COUNTRY"]);
            $.setValue("NICORR_STATE", v["STATE"]);
            $.setValue("NICORR_CITY", v["CITY"]);
            $.setValue("NICORR_PINCODE", v["PINCODE"]);
          } else if (v["ADDRESSTYPE"] === "T") {
            $.setValue("M1_NI_FATCA_ADDRTYPE", v["FATCA_ADDRESS_TYPE"]);
            $.setValue("NI_FATCA_ADDRTYPE", v["FATCA_ADDRESS_TYPE"]);
            $.setValue("M1_FNI_FATCA_TAXADDR1", "");
            $.setValue("FNI_FATCA_TAXADDR1", "");
            $.setValue("M1_NI_FATCA_DROPDOWN", v["FATCACOMPLIANCE"]);
            $.setValue("M1_FNI_FATCA_TAXADDR2", "");
            $.setValue("M1_FNI_FATCA_TAXADDR3", "");
            $.setValue("M1_FNI_FATCA_LANDMARK", "");
            $.setValue("M1_NI_FATCA_CITY", "");
            $.setValue("M1_NI_FATCA_STATE", "");
            $.setValue("M1_NI_FATCA_COUNTRY", "");
            $.setValue("NI_FATCA_DROPDOWN", v["FATCACOMPLIANCE"]);
            $.setValue("FNI_FATCA_TAXADDR2", "");
            $.setValue("FNI_FATCA_TAXADDR3", "");
            $.setValue("FNI_FATCA_LANDMARK", "");
            $.setValue("NI_FATCA_CITY", "");
            $.setValue("NI_FATCA_STATE", "");
            $.setValue("NI_FATCA_COUNTRY", "");
            $.setValue("M1_NI_FATCA_GLOBALENTITYID", "");
            $.setValue("NI_FATCA_GLOBALENTITYID", "");
          }
        });
      });
      var docs = {
        60: ["NI_PAN_NUMBER"],
        63: ["NI_UDYOG_AADHAR"],
        58: ["NI_TAN_NUMBER"],
        61: ["FORM_FORTY_NINE_A"],
        59: ["NI_GSTIN_NUMBER"],
        LEI: ["NI_LEI_CODE"],
      };
      var mappings = {
        NI_PAN_NUMBER: "DOCUMENTNUMBER",
        NI_UDYOG_AADHAR: "DOCUMENTNUMBER",
        NI_TAN_NUMBER: "DOCUMENTNUMBER",
        FORM_FORTY_NINE_A: "DOCUMENTNUMBER",
        NI_GSTIN_NUMBER: "DOCUMENTNUMBER",
        NI_LEI_CODE: "DOCUMENTNUMBER",
        NI_LEI_CODE_ISSUE_DATE: "ISSUEDATE",
        NI_LEI_CODE_EXPIRY_DATE: "EXPIRYDATE",
      };
      if ("KYCDet" in obj["KYCDetails"]) {
        $.each(obj["KYCDetails"]["KYCDet"], function (key, val) {
          if ("ISSUEDATE" in val) {
            val["ISSUEDATE"] = val["ISSUEDATE"]
              ? new Date(val["ISSUEDATE"]).toStringObject("dd-mm-yy")
              : "";
          }
          if ("EXPIRYDATE" in val) {
            val["EXPIRYDATE"] = val["EXPIRYDATE"]
              ? new Date(val["EXPIRYDATE"]).toStringObject("dd-mm-yy")
              : "";
          }
          if (val["DOCUMENTTYPE"] in docs) {
            $.each(docs[val["DOCUMENTTYPE"]], function (docKey, docClass) {
              $.setValue(docClass, val[mappings[docClass]]);
            });
          }
        });
      }
      $.setValue("ENTITY_ANNUAL_TURNOVER", obj["ANNUALTURNOVER"]);
      $.setValue(
        "NI_DATE_INCORPORATION",
        obj["INCORPORATION_DATE"]
          ? obj["INCORPORATION_DATE"].split("/").reverse().join("-")
          : ""
      );
      $.setValue("NI_CITY_INCORPORATION", obj["PLACE_OF_INCORPORATION"]);
      $.setValue("M1_NI_SERVICEMOBBANKING", obj["MOBILE_BANKING"]);
      $.setValue("NI_SERVICEMOBBANKING", obj["MOBILE_BANKING"]);
      $.setValue("NI_COMPANY_ID", obj["COMPANYCIF"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZFENTITY"]);
      $.setValue("NI_REGISTRATION_NUMBER", "");
      $.setValue(
        "M1_NI_BUSINESS_COMMENCEMENT_DATE",
        obj["INCORPORATION_DATE"]
          ? obj["INCORPORATION_DATE"].split("/").reverse().join("-")
          : ""
      );
      $.setValue(
        "NI_BUSINESS_COMMENCEMENT_DATE",
        obj["INCORPORATION_DATE"]
          ? obj["INCORPORATION_DATE"].split("/").reverse().join("-")
          : ""
      );
      $.setValue("NI_COUNTRY_INCORPORATION", "");
      $.setValue("M1_NI_SERVICEDND", obj["DND"]);
      $.setValue("NI_SERVICEDND", obj["DND"]);
      $.setValue("M1_NI_CONTACT_MOB", obj["REGISTEREDMOBILE"]);
      $.setValue("NI_CONTACT_MOB", obj["REGISTEREDMOBILE"]);
      $.setValue("M1_NI_SERVICESMS", obj["SMS_CUSTOMER"]);
      //            $.setValue("M1_NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("M1_NI_FREQ_EMAIL", obj["EMAILSTMTFREQUENCY"]);
      $.setValue("M1_NICORR_PS", "");
      $.setValue("M1_NICORR_PO", "");
      $.setValue("NI_SERVICESMS", obj["SMS_CUSTOMER"]);
      //            $.setValue("NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      $.setValue("NI_FREQ_EMAIL", obj["EMAILSTMTFREQUENCY"]);
      $.setValue("NICORR_PS", "");
      $.setValue("NICORR_PO", "");
      $.setValue("M1_NIOFFC_PS", "");
      $.setValue("M1_NI_REG_ADD_TYPE", obj["RESIDENTIALSTATUS"]);
      $.setValue("NI_REG_ADD_TYPE", obj["RESIDENTIALSTATUS"]);
      $.setValue("M1_NI_SERVICEINTERNET", obj["INTERNET_ACCESS"]);
      $.setValue("NI_SERVICEINTERNET", obj["INTERNET_ACCESS"]);
      $.setValue("CONSTITUTION", "");
      $.setValue("M1_NI_OTHERINFO_TRADENO", obj["TRADE_LICENSE"]);
      $.setValue("M1_NI_OTHERINFO_STREGNO", obj["SALES_TAX_NO"]);
      $.setValue("NI_OTHERINFO_TRADENO", obj["TRADE_LICENSE"]);
      $.setValue("NI_OTHERINFO_STREGNO", obj["SALES_TAX_NO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCISRTAXRNO"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZCIEXREGNO"]);

      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4FLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4SLID"]);
      //        $.setValue("M1_NIOFFC_LANDMARK", obj["ZBSR4TLID"]);

      $.setValue("M1_NI_CREDIT_REQAMOUNT", "");
      //            $.setValue("KYC_NAME_ID_PROOF", obj["ZFOIT"]);
      //            $.setValue("KYC_OTHERIDPROOF", obj["ZFOITOTH"]);
      //            $.setValue("KYC_NUM_ID_PROOF", obj["ZFOIN"]);
      $.setValue("NI_CREDIT_REQAMOUNT", "");
      $.setValue("NI_PAN_NUMBER", obj["PAN_NUMBER"]);
      console.log(obj["PAN_NUMBER"]);
    } else if ($.isInActivities("ACO_DVU")) {
      console.log("Inside DVU" + obj["PAN_NUMBER"]);
      //            $("#NI_EXISTING_CUST").val("Existing").addClass("changed");
      //            $("#NI_CIF_NUMBER").val(obj["CIFNUMBER"]).addClass("changed");
      //            $("#NI_PAN_NUMBER").val(obj["PAN_NUMBER"]).addClass("changed");
      //            $.each(obj["AddressDetails"], function (key, val) {
      //                $.each(val, function (k, v) {
      //                    $.setValue("M1_NIOFFC_DISTRICT", v["DISTRICT"]);
      //                    $.setValue("NIOFFC_DISTRICT", v["DISTRICT"]);
      //                    if (v["ADDRESSTYPE"] === "O")
      //                    {
      //                        $.setValue("M1_NIOFFC_ADD_LINE1", v["ADDRESS1"]);
      //                        $.setValue("M1_NIOFFC_ADD_LINE2", v["ADDRESS2"]);
      //                        $.setValue("M1_NIOFFC_ADD_LINE3", v["ADDRESS3"]);
      //                        $.setValue("M1_NIOFFC_LANDMARK", v["LANDMARK"]);
      //                        $.setValue("M1_NIOFFC_CITY", v["CITY"]);
      //                        $.setValue("M1_NIOFFC_COUNTRY", v["COUNTRY"]);
      //                        $.setValue("M1_NIOFFC_STATE", v["STATE"]);
      //                        $.setValue("M1_NIOFFC_PINCODE", v["PINCODE"]);
      //                        $.setValue("NIOFFC_ADD_LINE1", v["ADDRESS1"]);
      //                        $.setValue("NIOFFC_ADD_LINE2", v["ADDRESS2"]);
      //                        $.setValue("NIOFFC_ADD_LINE3", v["ADDRESS3"]);
      //                        $.setValue("NIOFFC_LANDMARK", v["LANDMARK"]);
      //                        $.setValue("NIOFFC_CITY", v["CITY"]);
      //                        $.setValue("NIOFFC_COUNTRY", v["COUNTRY"]);
      //                        $.setValue("NIOFFC_STATE", v["STATE"]);
      //                        $.setValue("NIOFFC_PINCODE", v["PINCODE"]);
      //                        $.setValue("M1_NI_CONTACT_FAX", obj["FAX_NUMBER"]);
      //                        $.setValue("M1_NI_CONTACT_EMAIL", v["EMAILID"]);
      //                        $.setValue("M1_ENTITY_ANNUAL_TURNOVER", "");
      //                        $.setValue("NI_CONTACT_FAX", "");
      //                        $.setValue("NI_CONTACT_EMAIL", v["EMAILID"]);
      //
      //                    } else if (v["ADDRESSTYPE"] === "P")
      //                    {
      //                        $.setValue("M1_NICORR_ADD_LINE1", v["ADDRESS1"]);
      //                        $.setValue("M1_NICORR_ADD_LINE2", v["ADDRESS2"]);
      //                        $.setValue("M1_NICORR_ADD_LINE3", v["ADDRESS3"]);
      //                        $.setValue("M1_NICORR_LANDMARK", v["LANDMARK"]);
      //                        $.setValue("M1_NICORR_COUNTRY", v["COUNTRY"]);
      //                        $.setValue("M1_NICORR_STATE", v["STATE"]);
      //                        $.setValue("M1_NICORR_CITY", v["CITY"]);
      //                        $.setValue("M1_NICORR_PINCODE", v["PINCODE"]);
      //                        $.setValue("NICORR_ADD_LINE1", v["ADDRESS1"]);
      //                        $.setValue("NICORR_ADD_LINE2", v["ADDRESS3"]);
      //                        $.setValue("NICORR_ADD_LINE3", v["ADDRESS3"]);
      //                        $.setValue("NICORR_LANDMARK", v["LANDMARK"]);
      //                        $.setValue("NICORR_COUNTRY", v["COUNTRY"]);
      //                        $.setValue("NICORR_STATE", v["STATE"]);
      //                        $.setValue("NICORR_CITY", v["CITY"]);
      //                        $.setValue("NICORR_PINCODE", v["PINCODE"]);
      //                    } else if (v["ADDRESSTYPE"] === "T")
      //                    {
      //                        $.setValue("M1_NI_FATCA_ADDRTYPE", v["FATCA_ADDRESS_TYPE"]);
      //                        $.setValue("NI_FATCA_ADDRTYPE", v["FATCA_ADDRESS_TYPE"]);
      //                        $.setValue("M1_FNI_FATCA_TAXADDR1", "");
      //                        $.setValue("FNI_FATCA_TAXADDR1", "");
      //                        $.setValue("M1_NI_FATCA_DROPDOWN", v["FATCACOMPLIANCE"]);
      //                        $.setValue("M1_FNI_FATCA_TAXADDR2", "");
      //                        $.setValue("M1_FNI_FATCA_TAXADDR3", "");
      //                        $.setValue("M1_FNI_FATCA_LANDMARK", "");
      //                        $.setValue("M1_NI_FATCA_CITY", "");
      //                        $.setValue("M1_NI_FATCA_STATE", "");
      //                        $.setValue("M1_NI_FATCA_COUNTRY", "");
      //                        $.setValue("NI_FATCA_DROPDOWN", v["FATCACOMPLIANCE"]);
      //                        $.setValue("FNI_FATCA_TAXADDR2", "");
      //                        $.setValue("FNI_FATCA_TAXADDR3", "");
      //                        $.setValue("FNI_FATCA_LANDMARK", "");
      //                        $.setValue("NI_FATCA_CITY", "");
      //                        $.setValue("NI_FATCA_STATE", "");
      //                        $.setValue("NI_FATCA_COUNTRY", "");
      //                        $.setValue("M1_NI_FATCA_GLOBALENTITYID", "");
      //                        $.setValue("NI_FATCA_GLOBALENTITYID", "");
      //                    }
      //
      //                });
      //            });
      //
      //            $.setValue("M1_NI_CONTACT_FAX", obj["FAX_NUMBER"]);
      //            $.setValue("M1_NI_CONTACT_EMAIL", obj["EMAILID"]);
      //            $.setValue("M1_ENTITY_ANNUAL_TURNOVER", obj["ANNUALTURNOVER"]);
      //            $.setValue("NI_CONTACT_FAX", obj["FAXNUM"]);
      //            $.setValue("NI_CONTACT_EMAIL", obj["EMAILID"]);
      //            $.setValue("ENTITY_ANNUAL_TURNOVER", obj["ANNUALTURNOVER"]);
      //            $("#NI_DATE_INCORPORATION").val(obj["INCORPORATION_DATE"] ? obj["INCORPORATION_DATE"].split("/").reverse().join("-") : "");
      //
      //
      //            $("#NI_CITY_INCORPORATION").val(obj["PLACE_OF_INCORPORATION"]);
      //
      //            $.setValue("M1_NI_SERVICEMOBBANKING", obj["MOBILE_BANKING"]);
      //
      //            $.setValue("NI_SERVICEMOBBANKING", obj["MOBILE_BANKING"]);
      //            $("#NI_COMPANY_ID").val(obj["ZCIN"]);
      //
      ////        $.setValue("M1_NIOFFC_LANDMARK", obj["ZFENTITY"]);
      //            $("#NI_REGISTRATION_NUMBER").val();
      //            $.setValue("M1_NI_BUSINESS_COMMENCEMENT_DATE", (obj["INCORPORATION_DATE"] ? obj["INCORPORATION_DATE"].split("/").reverse().join("-") : ""));
      //            $.setValue("NI_BUSINESS_COMMENCEMENT_DATE", (obj["INCORPORATION_DATE"] ? obj["INCORPORATION_DATE"].split("/").reverse().join("-") : ""));
      //            $("#NI_COUNTRY_INCORPORATION").val();
      //            $.setValue("M1_NI_SERVICEDND", obj["DND"]);
      //            $.setValue("NI_SERVICEDND", obj["DND"]);
      //            $.setValue("M1_NI_CONTACT_MOB", obj["REGISTEREDMOBILE"]);
      //            $.setValue("NI_CONTACT_MOB", obj["REGISTEREDMOBILE"]);
      //            $.setValue("M1_NI_SERVICESMS", obj["SMS_CUSTOMER"]);
      ////            $.setValue("M1_NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      //            $.setValue("M1_NI_FREQ_EMAIL", obj["EMAILSTMTFREQUENCY"]);
      //            $.setValue("M1_NICORR_PS", "");
      //            $.setValue("M1_NICORR_PO", "");
      //            $.setValue("NI_SERVICESMS", obj["SMS_CUSTOMER"]);
      ////            $.setValue("NI_SERVICEEMAIL", obj["ZMAILFLG"]);
      //            $.setValue("NI_FREQ_EMAIL", obj["EMAILSTMTFREQUENCY"]);
      //            $.setValue("NICORR_PS", "");
      //            $.setValue("NICORR_PO", "");
      //            $.setValue("M1_NIOFFC_PS", "");
      //            $.setValue("M1_NI_REG_ADD_TYPE", obj["RESIDENTIALSTATUS"]);
      //            $.setValue("NI_REG_ADD_TYPE", obj["RESIDENTIALSTATUS"]);
      //            $.setValue("M1_NI_SERVICEINTERNET", obj["INTERNET_ACCESS"]);
      //            $.setValue("NI_SERVICEINTERNET", obj["INTERNET_ACCESS"]);
      //            $.setValue("CONSTITUTION", "");
      //            $.setValue("M1_NI_OTHERINFO_TRADENO", obj["TRADE_LICENSE"]);
      //            $.setValue("M1_NI_OTHERINFO_STREGNO", obj["SALES_TAX_NO"]);
      //            $.setValue("NI_OTHERINFO_TRADENO", obj["TRADE_LICENSE"]);
      //            $.setValue("NI_OTHERINFO_STREGNO", obj["SALES_TAX_NO"]);
      //
      //
      //            $.setValue("M1_NI_CREDIT_REQAMOUNT", "");
      ////            $.setValue("KYC_NAME_ID_PROOF", obj["ZFOIT"]);
      ////            $.setValue("KYC_OTHERIDPROOF", obj["ZFOITOTH"]);
      ////            $.setValue("KYC_NUM_ID_PROOF", obj["ZFOIN"]);
      //            $.setValue("NI_CREDIT_REQAMOUNT", "");
      //            $.setValue("M1_NI_PREF_MAILADDR", obj["MAILING_PERMANENT_ADDDRESS_FLAG"]);
      //            $.setValue("NI_PREF_MAILADDR", obj["MAILING_PERMANENT_ADDDRESS_FLAG"]);
    }
    //
    return true;
  } catch (e) {
    console.log("NI_FetchCIF = Error while filling data");
    return false;
  }
}

function fillDataNew(obj) {
  globalResp = obj;
  debugger;
  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if (
      $("#FORM_TYPE").val() === "NRI" &&
      $("#ADDNL_FORM_TYPE").val() === "Savings" &&
      $("#ACCOUNT_RELN_CODE").val() === "B"
    ) {
      var idVal = obj["DOB"] ? obj["DOB"].split("/").join("-") : "";
      if (idVal !== "") {
        var dob = idVal.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3");
        var start = new Date(dob);
        var end = new Date();
        var age_year = Math.floor((end - start) / 31536000000);
        if (age_year < 18) {
          alert("Minor Customer cannot be added into Joint account");
          return;
        }
      }
    }

    var dataTbl =
      "<tr rowId='' style='text-align:center;'>" +
      //                + "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId'  onclick='fillFormFields($(this),event)' \n\
      //                    name='radio' class='radio'  /></td>"

      "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>" +
      "<td class='IND_IS_EXISTING' storeType='cust'>" +
      "Existing" +
      "</td>" +
      "<td class='IND_CIF_NUMBER' storeType='custALL'>" +
      obj["CIFNUMBER"] +
      "</td>" +
      "<td class='IND_COUNTRY_CODE' storeType='cust'></td>" +
      "<td class='IND_CKYC_NUMBER' storeType='cust'></td>" +
      "<td class='TITLE' storeType='cust'>" +
      obj["TITLE"] +
      "</td>" +
      "<td class='IND_FIRST_NAME' storeType='cust' >" +
      obj["FIRSTNAME"] +
      "</td>" +
      "<td class='IND_MIDDLE_NAME' storeType='cust'>" +
      obj["MIDDLENAME"] +
      "</td>" +
      "<td class='IND_LAST_NAME' storeType='cust' >" +
      obj["LASTNAME"] +
      "</td>" +
      "<td class='IND_DOB' storeType='cust'>" +
      (obj["DOB"] ? obj["DOB"].split("-").reverse().join("-") : "") +
      "</td>" +
      "<td class='IND_MOBILE' storeType='cust'>" +
      obj["REGISTEREDMOBILE"] +
      "</td>" +
      "<td class='IND_EMAIL' storeType='cust'>" +
      obj["EMAILID"] +
      "</td>" +
      "<td class='IND_RES_PHONE' storeType='cust'></td>" +
      "<td class='SOURCE' storeType='cust'>" +
      "SERVOSYS" +
      "</td>" +
      "<td class='IND_RELATIONSHIP_CODE' storeType='cust'></td>" +
      "<td class='IND_AEPS' typecheck='checkBoxField' storeType='cust'></td>" +
      "<td class='IND_VPA_ID' storeType='cust'></td>" +
      "<td class='IND_BIRTH_CERTIFICATE' storeType='cust'></td>" +
      "<td class='IND_ONE_CIF_ONE_MOBILE' storeType='cust'></td>" +
      "<td hidden class='IND_PROP_CIF' storeType='cust'></td>" +
      "<td hidden class='LINK_PAN_PROP_CUST' storeType='cust'></td>" +
      "<td hidden class='PASSPORT_ISSUE_PLACE' storeType='cust'></td>" +
      "<td hidden class='IND_LANGUAGE_CODE' storeType='PERSNL'>" +
      obj["LANGUAGE"] +
      "</td>" +
      "<td hidden class='REKYC_INDI' storeType='cust'></td>" +
      "<td hidden class='IND_GENDER' storeType='cust'>" +
      obj["GENDER"] +
      "</td>" +
      "<td hidden class='OTHERDETAILS_FORM_SIXTY' typeCheck ='checkBoxField'  storeType='cust'>" +
      obj["FORM60"] +
      "</td>" +
      "<td hidden class='IND_AADHAR_NUMBER' storeType='cust'>" +
      obj["AADHAR_NUMBER"] +
      "</td>" +
      "<td hidden class='IND_PAN_RESULT' storeType='cust'></td>" +
      "<td hidden class='IND_AADHAR_NPCI' storeType='cust'></td>" +
      "<td hidden class='IND_AADHAR_PROFILE' storeType='cust'></td>" +
      "<td hidden class='IND_RESIDENTIAL_STATUS' storeType='cust'>" +
      obj["RESIDENTIALSTATUS"] +
      "</td>" +
      "<td hidden class='IND_DEDUPE_RESULT' storeType='cust'></td>" +
      "<td hidden class='IND_AML_RESULT' storeType='cust'>" +
      obj["AML_SCREENING"] +
      "</td>" +
      "<td hidden class='IND_MARITAL_STATUS' storeType='cust'>" +
      obj["MARITALSTATUS"] +
      "</td>" +
      "<td hidden class='IND_MOB_NO_2' storeType='cust'></td>" +
      "<td hidden class='IND_LANDLINE' storeType='cust'></td>" +
      "<td hidden class='IND_DINNUMBER' storeType='cust'></td>" +
      "<td hidden class='IND_CATEGORY' storeType='cust'>" +
      obj["CASTE"] +
      "</td>" +
      "<td hidden class='IND_ALT_MOBILE' storeType='cust'></td>" +
      "<td hidden class='IND_LANDLINE_STD_CODE' storeType='cust'></td>" +
      "<td hidden class='IND_FATHER_PREFIX' storeType='cust'>" +
      obj["PREFIX_FATHER_NAME"] +
      "</td>" +
      "<td hidden class='IND_FATHER_FRST_NAME' storeType='cust'>" +
      obj["FATHERNAME"] +
      "</td>" +
      "<td hidden class='IND_FATHER_MIDDLE_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_FATHER_LAST_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_SPOUSE_PREFIX' storeType='cust'>" +
      obj["PREFIX_SPOUSE_NAME"] +
      "</td>" +
      "<td hidden class='IND_SPOUSE_FRST_NAME' storeType='cust'>" +
      obj["SPOUSE_NAME"] +
      "</td>" +
      "<td hidden class='IND_SPOUSE_MIDDLE_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_SPOUSE_LAST_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_MAIDEN_PREFIX' storeType='cust'>" +
      obj["PREFIX_MAIDEN_NAME"] +
      "</td>" +
      "<td hidden class='IND_MAIDEN_FRST_NAME' storeType='cust'>" +
      obj["MAIDENNAME"] +
      "</td>" +
      "<td hidden class='IND_MAIDEN_MIDDLE_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_MAIDEN_LAST_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_MOTHER_PREFIX' storeType='cust'>" +
      obj["PREFIX_MOTHER_NAME"] +
      "</td>" +
      "<td hidden class='IND_MOTHER_FRST_NAME' storeType='cust'>" +
      obj["MOTHERMAINDENNAME"] +
      "</td>" +
      "<td hidden class='IND_MOTHER_MIDDLE_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_MOTHER_LAST_NAME' storeType='cust'></td>" +
      "<td hidden class='IND_ISPOLITICALLY_EXPOSED' storeType='cust'>" +
      obj["POLITICALLYEXPOSED"] +
      "</td>" +
      "<td hidden class='IND_NET_WORTH' storeType='cust'></td>" +
      "<td hidden class='IND_NET_WORTH_DATE' storeType='cust'></td>" +
      "<td hidden class='IND_FAX' storeType='cust'>" +
      obj["FAX_NUMBER"] +
      "</td>" +
      "<td hidden class='KYC_NAME_ID_PROOF' storeType='KYC'></td>" +
      "<td hidden class='KYC_NUM_ID_PROOF' storeType='KYC'></td>" +
      "<td hidden class='KYC_NAME_ADDR_PROOF' storeType='KYC' ></td>" +
      "<td hidden class='KYC_NUM_ADDR_PROOF' storeType='KYC'></td>" +
      "<td hidden class='KYC_OTHERIDPROOF' storeType='KYC'></td>" +
      "<td hidden class='KYC_EXPIRYDATE' storeType='KYC'></td>" +
      "<td hidden class='KYC_OTHER_ADDRPROOF' storeType='KYC'></td>" +
      "<td hidden class='KYC_ADDPROOF_EXPDATE' storeType='KYC'></td>" +
      "<td hidden class='CKYC_ACC_TYPE' storeType='KYC'>" +
      obj["CKYC_ACCOUNT_TYPE"] +
      "</td>" +
      "<td hidden class='CKYC_APP_TYPE' storeType='KYC'>" +
      obj["CKYC_APPLICATION_TYPE"] +
      "</td>" +
      "<td hidden class='CKYC_DECLARATION_DATE' storeType='KYC'>" +
      (obj["CKYC_DATE_OF_DEC"]
        ? obj["CKYC_DATE_OF_DEC"].split("-").reverse().join("-")
        : "") +
      "</td>" +
      "<td hidden class='CKYC_REMARKS' storeType='KYC'></td>" +
      "<td hidden class='POI_TYPE' storeType='KYC'></td>" +
      "<td hidden class='POI_NUMBER' storeType='KYC'></td>" +
      "<td hidden class='POI_ISSUE_DATE' storeType='KYC'></td>" +
      "<td hidden class='POI_EXPIRY_DATE' storeType='KYC'></td>" +
      "<td hidden class='POI_DOCSUBMIT_DATE' storeType='KYC'></td>" +
      "<td hidden class='POA_TYPE' storeType='KYC'></td>" +
      "<td hidden class='POA_NUMBER' storeType='KYC'></td>" +
      "<td hidden class='POA_ISSUE_DATE' storeType='KYC'></td>" +
      "<td hidden class='POA_EXPIRY_DATE' storeType='KYC'></td>" +
      "<td hidden class='POA_DOCSUBMIT_DATE' storeType='KYC'></td>" +
      "<td hidden class='KYC_DECLARATIONPLACE' storeType='KYC'></td>" +
      "<td hidden class='KYC_VERIFIERNAME' storeType='KYC'>" +
      obj["KYC_VERIFIER_NAME"] +
      "</td>" +
      "<td hidden class='KYC_VERIFIER_ID' storeType='KYC'>" +
      obj["KYC_VERIFIER_ID"] +
      "</td>" +
      "<td hidden class='KYC_VERIFIER_DESIGNATION' storeType='KYC'>" +
      obj["KYC_VERIFIER_DESIGNATION"] +
      "</td>" +
      "<td hidden class='KYC_VERIFIER_ORG' storeType='KYC'>" +
      obj["KYC_VERIFIER_ORG_NAME"] +
      "</td>" +
      "<td hidden class='KYC_VERIFIER_ORG_CODE' storeType='KYC'></td>" +
      "<td hidden class='KYC_VERIFY_DATE' storeType='KYC'>" +
      obj["KYC_VERIFICATION_DATE"] +
      "</td>" +
      "<td hidden class='KYC_VERIFY_BRANCH' storeType='KYC'>" +
      obj["KYC_VERIFICATION_BRANCH"] +
      "</td>" +
      "<td hidden class='KYC_DOCUMENT' storeType='KYC'></td>" +
      "<td hidden class='NATIONALITY' storeType='PERSNL'>" +
      obj["NATIONALITY"] +
      "</td>" +
      "<td hidden class='RELIGION' storeType='PERSNL'>" +
      obj["RELIGION"] +
      "</td>" +
      "<td hidden class='GUARDIAN_NAME' storeType='PERSNL'>" +
      obj["PARENTGUARDIANNAME"] +
      "</td>" +
      "<td hidden class='OCCUPATION' storeType='PERSNL'>" +
      obj["OCCUPATION"] +
      "</td>" +
      "<td hidden class='EMPLOYED_WITH' storeType='PERSNL'></td>" +
      "<td hidden class='COMPANY_NAME' storeType='PERSNL'>" +
      obj["WORKINGCOMPANY"] +
      "</td>" +
      "<td hidden class='GROSS_INCOME' storeType='PERSNL'>" +
      obj["GROSSANNUALINCOME"] +
      "</td>" +
      "<td hidden class='SMS_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" +
      obj["SMS_CUSTOMER"] +
      "</td>" +
      "<td hidden class='EMAIL_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" +
      obj["DND_EMAIL"] +
      "</td>" +
      "<td hidden class='TELEPHONE_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'></td>" +
      "<td hidden class='DND_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" +
      obj["DND"] +
      "</td>" +
      "<td hidden class='OTHERBANK_OTHER_LOAN' storeType='PERSNL'></td>" +
      "<td hidden class='OTHER_INFO' storeType='PERSNL'></td>" +
      "<td hidden class='PHYSICAL_STATUS' storeType='PERSNL'>" +
      obj["PHYSICALSTATUS"] +
      "</td>" +
      "<td hidden class='PERSNL_RELN_WITH_MINOR' storeType='PERSNL'></td>" +
      "<td hidden class='PERSNL_QUALIFICATION' storeType='PERSNL'></td>" +
      "<td hidden class='IS_SENIOR_CITIZEN' storeType='PERSNL'></td>" +
      "<td hidden class='NUMBER_OF_ADULTS' storeType='PERSNL'>" +
      obj["ADULTDEPENDENT"] +
      "</td>" +
      "<td hidden class='NUMBER_OF_MINORS' storeType='PERSNL'>" +
      obj["CHILDDEPENDENT"] +
      "</td>" +
      "<td hidden class='SELF_EMPLOYED_YEARS' storeType='PERSNL'>" +
      obj["SELF_EMPLOYEED_YEARS"] +
      "</td>" +
      "<td hidden class='SELF_EMPLOYED_MONTHS' storeType='PERSNL'>" +
      obj["SELF_EMPLOYEED_MONTH"] +
      "</td>" +
      "<td hidden class='PERSNL_NATURE_OF_BUSINESS' storeType='PERSNL'>" +
      obj["BUSINESSNATURE"] +
      "</td>" +
      "<td hidden class='IND_GUARDIAN_CIF' storeType='cust'>" +
      obj["GUARDIANCIFNUMBER"] +
      "</td>" +
      "<td hidden class='IND_LINK_PAN_GUARDIAN' typeCheck ='checkBoxField' storeType='cust'></td>" +
      "<td hidden class='IND_MINOR_CIF' storeType='cust'></td>" +
      "<td hidden class='LINK_MINOR_PAN' typeCheck ='checkBoxField' storeType='cust'></td>" +
      "<td hidden class='INTERNET_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" +
      obj["INTERNET_ACCESS"] +
      "</td>" +
      "<td hidden class='MOBILE_BANKING' typeCheck ='checkBoxField' storeType='PERSNL'>" +
      obj["MOBILE_BANKING"] +
      "</td>" +
      "<td hidden class='FREQ_EMAIL' storeType='PERSNL'>" +
      obj["EMAILSTMTFREQUENCY"] +
      "</td>" +
      "<td hidden class='TAX_RES_ID_TYPE' storeType='FATCA'></td>" +
      "<td hidden class='TAX_RES_ID_NO' storeType='FATCA'></td>" +
      "<td hidden class='TAX_RES_COUNTRY' storeType='FATCA'></td>" +
      "<td hidden class='BSR_FIRST' storeType='FATCA'></td>" +
      "<td hidden class='BSR_SECOND' storeType='FATCA'></td>" +
      "<td hidden class='BSR_THIRD' storeType='FATCA'></td>" +
      "<td hidden class='HOUSEHOLD_DETAILS' storeType='FATCA'>" +
      obj["HOUSEHOLD_DETAILS"] +
      "</td>" +
      "<td hidden class='PPI_DETAILS' storeType='FATCA'></td>" +
      "<td hidden class='WORKING_COMPANY' storeType='FATCA'>" +
      obj["WORKINGCOMPANY"] +
      "</td>" +
      "<td hidden class='SALARYACC_IS_STAFF' storeType='FATCA'>" +
      obj["CUSTOMERCODE"] +
      "</td>" +
      "<td hidden class='EMP_CODE' storeType='FATCA'>" +
      obj["EMPLOYEECODE"] +
      "</td>" +
      "<td hidden class='SALARY_PER_MONTH' storeType='FATCA'></td>" +
      "<td hidden class='CORPORATE_NAME' storeType='FATCA'>" +
      obj["CORPORATE_GROUP"] +
      "</td>" +
      "<td hidden class='STAFF_ID' storeType='FATCA'>" +
      obj["EMPLOYEECODE"] +
      "</td>" +
      "<td hidden class='FATCA_APPLICABLE' storeType='FATCA'>" +
      obj["FATCACOMPLIANCE"] +
      "</td>" +
      "<td hidden class='CITYOFBIRTH' storeType='FATCA'></td>" +
      "<td hidden class='COUNTRYOFBIRTH' storeType='FATCA'></td>";
    $.each(obj["AddressDetails"], function (key, val) {
      $.each(val, function (k, v) {
        if (v["ADDRESSTYPE"] === "R") {
          dataTbl +=
            "<td hidden class='ADDRESS_LINE1_RESI' storeType='ADDR'>" +
            v["ADDRESS1"] +
            "</td>" +
            "<td hidden class='ADDRESS_LINE2_RESI' storeType='ADDR'>" +
            v["ADDRESS2"] +
            "</td>" +
            "<td hidden class='ADDRESS_LINE3_RESI' storeType='ADDR'>" +
            v["ADDRESS3"] +
            "</td>" +
            "<td hidden class='LANDMARK_RESI' storeType='ADDR'>" +
            v["LANDMARK"] +
            "</td>" +
            "<td hidden class='PO_RESI' storeType='ADDR'></td>" +
            "<td hidden class='PS_RESI' storeType='ADDR'></td>" +
            "<td hidden class='TALUKA_RESI' storeType='ADDR'>" +
            v["TALUKA"] +
            "</td>" +
            "<td hidden class='DISTRICT_RESI' storeType='ADDR'>" +
            v["DISTRICT"] +
            "</td>" +
            "<td hidden class='COUNTRY_RESI' storeType='ADDR'>" +
            v["COUNTRY"] +
            "</td>" +
            "<td hidden class='STATE_RESI' storeType='ADDR'>" +
            v["STATE"] +
            "</td>" +
            "<td hidden class='CITY_RESI' storeType='ADDR'>" +
            v["CITY"] +
            "</td>" +
            "<td hidden class='PINCODE_RESI' storeType='ADDR'>" +
            v["PINCODE"] +
            "</td>" +
            "<td hidden class='PERM_SAME_RES' typeCheck ='checkBoxField' storeType='ADDR'></td>";
        } else if (v["ADDRESSTYPE"] === "P") {
          dataTbl +=
            "<td  hidden class='ADD_LINE1_PERM' storeType='ADDR'>" +
            v["ADDRESS1"] +
            "</td>" +
            "<td hidden class='ADD_LINE2_PERM' storeType='ADDR'>" +
            v["ADDRESS2"] +
            "</td>" +
            "<td hidden class='ADD_LINE3_PERM' storeType='ADDR'>" +
            v["ADDRESS3"] +
            "</td>" +
            "<td hidden class='LANDMARK_PERM' storeType='ADDR'>" +
            v["LANDMARK"] +
            "</td>" +
            "<td hidden class='PO_PERM' storeType='ADDR'></td>" +
            "<td hidden class='PS_PERM' storeType='ADDR'></td>" +
            "<td hidden class='TALUKA_PERM' storeType='ADDR'>" +
            v["TALUKA"] +
            "</td>" +
            "<td hidden class='DISTRICT_PERM' storeType='ADDR'>" +
            v["DISTRICT"] +
            "</td>" +
            "<td hidden class='COUNTRY_PERM' storeType='ADDR'>" +
            v["COUNTRY"] +
            "</td>" +
            "<td hidden class='STATE_PERM' storeType='ADDR'>" +
            v["STATE"] +
            "</td>" +
            "<td hidden class='CITY_PERM' storeType='ADDR'>" +
            v["CITY"] +
            "</td>" +
            "<td hidden class='PINCODE_PERM' storeType='ADDR'>" +
            v["PINCODE"] +
            "</td>";
        } else if (v["ADDRESSTYPE"] === "O") {
          //office condition
          dataTbl +=
            "<td hidden class='ADD_LINE1_OFF' storeType='ADDR'></td>" +
            "<td hidden class='ADD_LINE2_OFF' storeType='ADDR'></td>" +
            "<td hidden class='ADD_LINE3_OFF' storeType='ADDR'></td>" +
            "<td hidden class='LANDMARK_OFF' storeType='ADDR'></td>" +
            "<td hidden class='PO_OFF' storeType='ADDR'></td>" +
            "<td hidden class='PS_OFF' storeType='ADDR'></td>" +
            "<td hidden class='TALUKA_OFF' storeType='ADDR'></td>" +
            "<td hidden class='DISTRICT_OFF' storeType='ADDR'></td>" +
            "<td hidden class='COUNTRY_OFF' storeType='ADDR'></td>" +
            "<td hidden class='STATE_OFF' storeType='ADDR'></td>" +
            "<td hidden class='CITY_OFF' storeType='ADDR'></td>" +
            "<td hidden class='PINCODE_OFF' storeType='ADDR'></td>";
        } else if (v["ADDRESSTYPE"] === "T") {
          dataTbl +=
            "<td hidden class='ADD_TYPE_FATCA' storeType='FATCA'>" +
            v["FATCA_ADDRESS_TYPE"] +
            "</td>" +
            "<td hidden class='FATCA_ADD_1' storeType='FATCA'>" +
            v["ADDRESS1"] +
            "</td>" +
            "<td hidden class='FATCA_ADD_2' storeType='FATCA'>" +
            v["ADDRESS2"] +
            "</td>" +
            "<td hidden class='FATCA_ADD_3' storeType='FATCA'>" +
            v["ADDRESS3"] +
            "</td>" +
            "<td hidden class='FATCA_LANDMARK' storeType='FATCA'></td>" +
            "<td hidden class='FATCA_CITY' storeType='FATCA'></td>" +
            "<td hidden class='FATCA_COUNTRY' storeType='FATCA'>" +
            v["COUNTRY"] +
            "</td>" +
            "<td hidden class='FATCA_STATE' storeType='FATCA'>" +
            v["STATE"] +
            "</td>" +
            "<td hidden class='FATCA_PINCODE' storeType='FATCA'>" +
            v["PINCODE"] +
            "</td>" +
            "<td hidden class='FATCA_FATHERNAME' storeType='FATCA'></td>" +
            "<td hidden class='FATCA_SPOUSENAME' storeType='FATCA'></td>";
        }
      });
    });
    var docs = {
      6: ["IND_PAN_NUMBER"],
      14: ["IND_AADHAR_NUMBER"],
      73: ["IND_UDHYAM_AADHAR"],
      13: ["IND_VOTERS_ID"],
      15: [
        "IND_DRIVING_LICENSE",
        "IND_DRLICENSE_ISSUE_DATE",
        "IND_DRLICENSE_EXPIRY_DATE",
      ],
      16: ["IND_NREGA_CARD", "IND_NREGA_ISSUE_DATE", "IND_NREGA_EXPIRY_DATE"],
      12: [
        "IND_PASSPORT",
        "IND_PASSPORT_ISSUE_DATE",
        "IND_PASSPORT_EXPIRY_DATE",
      ],
      4: [
        "IND_RATION_CARD",
        "IND_RATIONCARD_ISSUE_DATE",
        "IND_RATIONCARD_EXPIRY_DATE",
      ],
      66: [
        "VISA_TYPE",
        "VISA_ISSUE_DATE",
        "VISA_ISSUER",
        "VISA_NO",
        "VISA_NRI_SINCE",
        "VISA_VALID_DATE",
        "VISA_ISSUE_PLACE",
      ],
    };
    var tdEle = "";
    var mappings = {
      IND_PAN_NUMBER: "DOCUMENTNUMBER",
      IND_AADHAR_NUMBER: "DOCUMENTNUMBER",
      IND_UDHYAM_AADHAR: "DOCUMENTNUMBER",
      IND_VOTERS_ID: "DOCUMENTNUMBER",
      IND_DRIVING_LICENSE: "DOCUMENTNUMBER",
      IND_DRLICENSE_ISSUE_DATE: "ISSUEDATE",
      IND_DRLICENSE_EXPIRY_DATE: "EXPIRYDATE",
      IND_NREGA_CARD: "DOCUMENTNUMBER",
      IND_NREGA_ISSUE_DATE: "ISSUEDATE",
      IND_PASSPORT: "DOCUMENTNUMBER",
      IND_PASSPORT_ISSUE_DATE: "ISSUEDATE",
      IND_PASSPORT_EXPIRY_DATE: "EXPIRYDATE",
      IND_RATION_CARD: "DOCUMENTNUMBER",
      IND_RATIONCARD_ISSUE_DATE: "ISSUEDATE",
      VISA_TYPE: "",
      VISA_ISSUE_DATE: "ISSUEDATE",
      VISA_ISSUER: "",
      VISA_NO: "ISSUEDATE",
      VISA_NRI_SINCE: "",
      VISA_VALID_DATE: "EXPIRYDATE",
      VISA_ISSUE_PLACE: "VISA_ISSUE_PLACE",
    };
    if ("KYCDet" in obj["KYCDetails"]) {
      $.each(obj["KYCDetails"]["KYCDet"], function (key, val) {
        if ("ISSUEDATE" in val) {
          val["ISSUEDATE"] = val["ISSUEDATE"]
            ? new Date(val["ISSUEDATE"]).toStringObject("dd-mm-yy")
            : "";
        }
        if ("EXPIRYDATE" in val) {
          val["EXPIRYDATE"] = val["EXPIRYDATE"]
            ? new Date(val["EXPIRYDATE"]).toStringObject("dd-mm-yy")
            : "";
        }
        if (val["DOCUMENTTYPE"] in docs) {
          $.each(docs[val["DOCUMENTTYPE"]], function (docKey, docClass) {
            tdEle +=
              "<td hidden class='" +
              docClass +
              "' storeType='cust'>" +
              val[mappings[docClass]] +
              "</td>";
          });
        }
      });
    }

    dataTbl += tdEle;
    dataTbl +=
      "<td hidden class='RESIDENCE_TYPE' storeType='ADDR'></td>" +
      "<td hidden class='ADDRESS_TYPE' storeType='ADDR'></td>" +
      "<td class='FILLED_DATE' storeType='custALL'>" +
      $.getCurrentDate().toStringObject("dd-mm-yy") +
      "</td>" +
      "<td class='FILLED_BY' storeType='custALL'>" +
      $.getUserName() +
      "</td>" +
      "<td class='FETCH_CIF_FLAG' storeType='cust'>" +
      "Y" +
      "</td>" +
      "<td class='hidden' type='modified'>" +
      "N" +
      "</td>" +
      "<td hidden storeType='cust'>" +
      +"</td></tr>";
    $("#CUSTDETAILS_TBODY").append(dataTbl);
    $("#IND_IS_EXISTING").val("");
    $("#IND_CIF_NUMBER").val("");
    return true;
  } else if ($.isInActivities("ACO_DVU")) {
    console.log("Inside DVU");
    //        var dataTbl = "<td><input style = 'margin-left: 20px;' type='radio' id = 'custId'  onclick='fillFormFields($(this),event)' name='radio' class='radio'/></td>"
    //                + "<td class='IND_IS_EXISTING' storeType='cust'>" + "Existing" + "</td>"
    //                + "<td class='IND_CIF_NUMBER' storeType='custALL'>" + obj["CIFNUMBER"] + "</td>"
    //                + "<td class='IND_COUNTRY_CODE' storeType='cust'></td>"
    //                + "<td class='IND_CKYC_NUMBER' storeType='cust'></td>"
    //                + "<td class='TITLE' storeType='cust'>" + obj["TITLE"] + "</td>"
    //                + "<td class='IND_FIRST_NAME' storeType='cust' >" + obj["FIRSTNAME"] + "</td>"
    //                + "<td class='IND_MIDDLE_NAME' storeType='cust'>" + obj["MIDDLENAME"] + "</td>"
    //                + "<td class='IND_LAST_NAME' storeType='cust' >" + obj["LASTNAME"] + "</td>"
    //                + "<td class='IND_DOB' storeType='cust'>" + (obj["DOB"] ? obj["DOB"].split("-").reverse().join("-") : "") + "</td>"
    //                + "<td class='IND_MOBILE' storeType='cust'>" + obj["REGISTEREDMOBILE"] + "</td>"
    //                + "<td class='IND_EMAIL' storeType='cust'>" + obj["EMAILID"] + "</td>"
    //                + "<td class='IND_RES_PHONE' storeType='cust'></td>"
    //                + "<td class='SOURCE' storeType='cust'>" + "SERVOSYS" + "</td>"
    //                + "<td class='IND_RELATIONSHIP_CODE' storeType='cust'></td>"
    //
    //                + "<td class='LINK_PAN_PROP_CUST' storeType='cust'></td>"
    //                + "<td class='IND_PROP_CIF' storeType='cust'></td>"
    //                + "<td class='PASSPORT_ISSUE_PLACE' storeType='cust'></td>"
    //                + "<td hidden class='REKYC_INDI' storeType='cust'></td>"
    //
    ////                + "<td class='VISA_APP_NAME' storeType='cust'></td>"
    ////                + "<td class='VISA_TYPE' storeType='cust'>" + obj["VISA_TYPE"] + "</td>"
    ////                + "<td class='VISA_ISSUE_DATE' storeType='cust'></td>"
    ////                + "<td class='VISA_ISSUER' storeType='cust'>" + obj["VISA_ISSUE_BY"] + "</td>"
    ////                + "<td class='VISA_NO' storeType='cust'>" + obj["VISA_NUMBER"] + "</td>"
    ////                + "<td class='VISA_NRI_SINCE' storeType='cust'></td>"
    ////                + "<td class='VISA_VALID_DATE' storeType='cust'>" + (obj["VISA_EXPIRY"] ? obj["VISA_EXPIRY"].split("/").join("-") : "") + "</td>"
    ////                + "<td class='VISA_ISSUE_PLACE' storeType='cust'>" + obj["VISA_ISSUE_PLACE"] + "</td>"
    //
    //                + "<td class='IND_GENDER' storeType='cust'>" + obj["GENDER"] + "</td>"
    //                + "<td class='IND_PAN_NUMBER' storeType='cust'>" + obj["PAN_NUMBER"] + "</td>"
    //                + "<td class='OTHERDETAILS_FORM_SIXTY' typeCheck ='checkBoxField'  storeType='cust'>" + obj["FORM60"] + "</td>"
    //                + "<td class='IND_AADHAR_NUMBER' storeType='cust'>" + obj["AADHAR_NUMBER"] + "</td>"
    //                + "<td class='IND_PAN_RESULT' storeType='cust'></td>"
    //                + "<td class='IND_AADHAR_NPCI' storeType='cust'></td>"
    //                + "<td class='IND_AADHAR_PROFILE' storeType='cust'></td>"
    //                + "<td class='IND_RESIDENTIAL_STATUS' storeType='cust'>" + obj["RESIDENTIALSTATUS"] + "</td>"
    ////                + "<td class='IND_PASSPORT' storeType='cust'></td>"
    ////                + "<td class='IND_PASSPORT_ISSUE_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_PASSPORT_EXPIRY_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_RATION_CARD' storeType='cust'>" + obj["ZRCID"] + "</td>"
    ////                + "<td class='IND_RATIONCARD_ISSUE_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_RATIONCARD_EXPIRY_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_NREGA_CARD' storeType='cust'></td>"
    ////                + "<td class='IND_NREGA_ISSUE_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_NREGA_EXPIRY_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_VOTERS_ID' storeType='cust'></td>"
    ////                + "<td class='IND_DRIVING_LICENSE' storeType='cust'></td>"
    ////                + "<td class='IND_DRLICENSE_ISSUE_DATE' storeType='cust'></td>"
    ////                + "<td class='IND_DRLICENSE_EXPIRY_DATE' storeType='cust'></td>"
    //                + "<td class='IND_DEDUPE_RESULT' storeType='cust'></td>"
    //                + "<td class='IND_AML_RESULT' storeType='cust'>" + obj["AML_SCREENING"] + "</td>"
    //                + "<td hidden class='IND_MARITAL_STATUS' storeType='cust'>" + obj["MARITALSTATUS"] + "</td>"
    //                + "<td hidden class='IND_MOB_NO_2' storeType='cust'>" + obj["MOBILE"] + "</td>"
    //                + "<td hidden class='IND_LANDLINE' storeType='cust'>" + obj["RESPHONE"] + "</td>"
    //                + "<td hidden class='IND_DINNUMBER' storeType='cust'></td>"
    //                + "<td hidden class='IND_CATEGORY' storeType='cust'>" + obj["CASTE"] + "</td>"
    //                + "<td hidden class='IND_ALT_MOBILE' storeType='cust'></td>"
    //                + "<td hidden class='IND_LANDLINE_STD_CODE' storeType='cust'></td>"
    //                + "<td hidden class='IND_FATHER_PREFIX' storeType='cust'>" + obj["PREFIX_FATHER_NAME"] + "</td>"
    //                + "<td hidden class='IND_FATHER_FRST_NAME' storeType='cust'>" + obj["FATHERNAME"] + "</td>"
    //                + "<td  hiddenclass='IND_FATHER_MIDDLE_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_FATHER_LAST_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_SPOUSE_PREFIX' storeType='cust'>" + obj["PREFIX_SPOUSE_NAME"] + "</td>"
    //                + "<td hidden class='IND_SPOUSE_FRST_NAME' storeType='cust'>" + obj["SPOUSE_NAME"] + "</td>"
    //                + "<td hidden class='IND_SPOUSE_MIDDLE_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_SPOUSE_LAST_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_MAIDEN_PREFIX' storeType='cust'>" + obj["PREFIX_MAIDEN_NAME"] + "</td>"
    //                + "<td hidden class='IND_MAIDEN_FRST_NAME' storeType='cust'>" + obj["MAIDENNAME"] + "</td>"
    //                + "<td hidden class='IND_MAIDEN_MIDDLE_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_MAIDEN_LAST_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_MOTHER_PREFIX' storeType='cust'>" + obj["PREFIX_MOTHER_NAME"] + "</td>"
    //                + "<td hidden class='IND_MOTHER_FRST_NAME' storeType='cust'>" + obj["MOTHERMAINDENNAME"] + "</td>"
    //                + "<td hidden class='IND_MOTHER_MIDDLE_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_MOTHER_LAST_NAME' storeType='cust'></td>"
    //                + "<td hidden class='IND_ISPOLITICALLY_EXPOSED' storeType='cust'>" + obj["POLITICALLYEXPOSED"] + "</td>"
    //                + "<td hidden class='IND_NET_WORTH' storeType='cust'>" + obj["NET_WORTH"] + "</td>"
    //                + "<td hidden class='IND_NET_WORTH_DATE' storeType='cust'>" + (obj["NETWORTH_DATE"] ? obj["NETWORTH_DATE"].split("-").reverse().join("-") : "") + "</td>"
    //                + "<td hidden class='IND_FAX' storeType='cust'>" + obj["FAX_NUMBER"] + "</td>"
    //                + "<td  class='KYC_NAME_ID_PROOF' storeType='KYC'></td>"
    //                + "<td  class='KYC_NUM_ID_PROOF' storeType='KYC'></td>"
    //                + "<td  class='KYC_NAME_ADDR_PROOF' storeType='KYC' ></td>"
    //                + "<td  class='KYC_NUM_ADDR_PROOF' storeType='KYC'></td>"
    //                + "<td  class='KYC_OTHERIDPROOF' storeType='KYC'></td>"
    //                + "<td  class='KYC_EXPIRYDATE' storeType='KYC'></td>"
    //                + "<td  class='KYC_OTHER_ADDRPROOF' storeType='KYC'></td>"
    //                + "<td  class='KYC_ADDPROOF_EXPDATE' storeType='KYC'></td>"
    //                + "<td hidden class='CKYC_ACC_TYPE' storeType='KYC'>" + obj["CKYC_ACCOUNT_TYPE"] + "</td>"
    //                + "<td hidden class='CKYC_APP_TYPE' storeType='KYC'>" + obj["CKYC_APPLICATION_TYPE"] + "</td>"
    //                + "<td hidden class='CKYC_DECLARATION_DATE' storeType='KYC'>" + (obj["CKYC_DATE_OF_DEC"] ? obj["CKYC_DATE_OF_DEC"].split("-").reverse().join("-") : "") + "</td>"
    //                + "<td hidden class='CKYC_REMARKS' storeType='KYC'></td>"
    //                + "<td hidden class='POI_TYPE' storeType='KYC'></td>"
    //                + "<td hidden class='POI_NUMBER' storeType='KYC'></td>"
    //                + "<td hidden class='POI_ISSUE_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='POI_EXPIRY_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='POI_DOCSUBMIT_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='POA_TYPE' storeType='KYC'></td>"
    //                + "<td hidden class='POA_NUMBER' storeType='KYC'></td>"
    //                + "<td hidden class='POA_ISSUE_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='POA_EXPIRY_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='POA_DOCSUBMIT_DATE' storeType='KYC'></td>"
    //                + "<td hidden class='KYC_DECLARATIONPLACE' storeType='KYC'></td>"
    //                + "<td hidden class='KYC_VERIFIERNAME' storeType='KYC'>" + obj["KYC_VERIFIER_NAME"] + "</td>"
    //                + "<td hidden class='KYC_VERIFIER_ID' storeType='KYC'>" + obj["KYC_VERIFIER_ID"] + "</td>"
    //                + "<td hidden class='KYC_VERIFIER_DESIGNATION' storeType='KYC'>" + obj["KYC_VERIFIER_DESIGNATION"] + "</td>"
    //                + "<td hidden class='KYC_VERIFIER_ORG' storeType='KYC'>" + obj["KYC_VERIFIER_ORG_NAME"] + "</td>"
    //                + "<td hidden class='KYC_VERIFIER_ORG_CODE' storeType='KYC'></td>"
    //                + "<td hidden class='KYC_VERIFY_DATE' storeType='KYC'>" + (obj["KYC_VERIFICATION_DATE"] ? obj["KYC_VERIFICATION_DATE"].split("-").reverse().join("-") : "") + "</td>"
    //                + "<td hidden class='KYC_VERIFY_BRANCH' storeType='KYC'>" + obj["KYC_VERIFICATION_BRANCH"] + "</td>"
    //                + "<td hidden class='KYC_DOCUMENT' storeType='KYC'></td>"
    //                + "<td hidden class='NATIONALITY' storeType='PERSNL'>" + obj["NATIONALITY"] + "</td>"
    //                + "<td hidden class='RELIGION' storeType='PERSNL'>" + obj["RELIGION"] + "</td>"
    //                + "<td hidden class='GUARDIAN_NAME' storeType='PERSNL'>" + obj["PARENTGUARDIANNAME"] + "</td>"
    //                + "<td hidden class='OCCUPATION' storeType='PERSNL'>" + obj["OCCUPATION"] + "</td>"
    //                + "<td hidden class='EMPLOYED_WITH' storeType='PERSNL'></td>"
    //                + "<td hidden class='COMPANY_NAME' storeType='PERSNL'>" + obj["WORKINGCOMPANY"] + "</td>"
    //                + "<td hidden class='GROSS_INCOME' storeType='PERSNL'>" + obj["GROSSANNUALINCOME"] + "</td>"
    //                + "<td hidden class='SMS_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" + obj["SMS_CUSTOMER"] + "</td>"
    //                + "<td hidden class='EMAIL_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" + obj["DND_EMAIL"] + "</td>"
    //                + "<td hidden class='TELEPHONE_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'></td>"
    //                + "<td hidden class='DND_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" + obj["DND"] + "</td>"
    //                + "<td hidden class='OTHERBANK_OTHER_LOAN' storeType='PERSNL'></td>"
    //                + "<td hidden class='FATCA_ADDRESS_TAX_PURPOSE' storeType='FATCA'></td>"
    //                + "<td hidden class='OTHER_INFO' storeType='PERSNL'></td>"
    //                + "<td hidden class='PHYSICAL_STATUS' storeType='PERSNL'>" + obj["PHYSICALSTATUS"] + "</td>"
    //                + "<td hidden class='FATCA_APPLICABLE' storeType='FATCA'>" + obj["FATCACOMPLIANCE"] + "</td>"
    //                + "<td hidden class='CITYOFBIRTH' storeType='FATCA'></td>"
    //                + "<td hidden class='COUNTRYOFBIRTH' storeType='FATCA'></td>"
    //                + "<td hidden class='ADD_TYPE_FATCA' storeType='FATCA'>" + obj["FATCA_ADDRESS_TYPE"] + "</td>"
    //                + "<td hidden class='FATCA_ADD_1' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_ADD_2' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_ADD_3' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_LANDMARK' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_CITY' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_COUNTRY' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_STATE' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_PINCODE' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_FATHERNAME' storeType='FATCA'></td>"
    //                + "<td hidden class='FATCA_SPOUSENAME' storeType='FATCA'></td>"
    //                + "<td hidden class='TAX_RES_ID_TYPE' storeType='FATCA'></td>"
    //                + "<td hidden class='TAX_RES_ID_NO' storeType='FATCA'></td>"
    //                + "<td hidden class='TAX_RES_COUNTRY' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_FIRST' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_SECOND' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_THIRD' storeType='FATCA'></td>"
    //
    //                + "<td hidden class='PERSNL_RELN_WITH_MINOR' storeType='PERSNL'></td>"
    //                + "<td hidden class='PERSNL_QUALIFICATION' storeType='PERSNL'></td>"
    //
    //                + "<td hidden class='IS_SENIOR_CITIZEN' storeType='PERSNL'></td>"
    //                + "<td hidden class='NUMBER_OF_ADULTS' storeType='PERSNL'>" + obj["ADULTDEPENDENT"] + "</td>"
    //                + "<td hidden class='NUMBER_OF_MINORS' storeType='PERSNL'>" + obj["CHILDDEPENDENT"] + "</td>"
    //                + "<td hidden class='SELF_EMPLOYED_YEARS' storeType='PERSNL'>" + obj["SELF_EMPLOYEED_YEARS"] + "</td>"
    //                + "<td hidden class='SELF_EMPLOYED_MONTHS' storeType='PERSNL'>" + obj["SELF_EMPLOYEED_MONTH"] + "</td>"
    //                + "<td hidden class='PERSNL_NATURE_OF_BUSINESS' storeType='PERSNL'>" + obj["BUSINESSNATURE"] + "</td>"
    //                + "<td hidden class='HOUSEHOLD_DETAILS' storeType='FATCA'>" + obj["HOUSEHOLD_DETAILS"] + "</td>"
    //                + "<td hidden class='PPI_DETAILS' storeType='FATCA'></td>"
    //                + "<td hidden class='WORKING_COMPANY' storeType='FATCA'>" + obj["WORKINGCOMPANY"] + "</td>"
    //                + "<td hidden class='SALARYACC_IS_STAFF' storeType='FATCA'></td>"
    //                + "<td hidden class='EMP_CODE' storeType='FATCA'>" + obj["EMPLOYEECODE"] + "</td>"
    //                + "<td hidden class='SALARY_PER_MONTH' storeType='FATCA'></td>"
    //                + "<td hidden class='CORPORATE_NAME' storeType='FATCA'>" + obj["CORPORATE_GROUP"] + "</td>"
    //                + "<td hidden class='STAFF_ID' storeType='FATCA'></td>"
    //
    //                + "<td  class='IND_GUARDIAN_CIF' storeType='cust'>" + obj["GUARDIANCIFNUMBER"] + "</td>"
    //                + "<td  class='IND_LINK_PAN_GUARDIAN' typeCheck ='checkBoxField' storeType='cust'></td>"
    //                + "<td  class='IND_MINOR_CIF' storeType='cust'></td>"
    //                + "<td   class='LINK_MINOR_PAN' typeCheck ='checkBoxField' storeType='cust'></td>"
    //
    //                + "<td hidden class='INTERNET_SERVICE' typeCheck ='checkBoxField' storeType='PERSNL'>" + obj["INTERNET_ACCESS"] + "</td>"
    //                + "<td hidden class='MOBILE_BANKING' typeCheck ='checkBoxField' storeType='PERSNL'>" + obj["MOBILE_BANKING"] + "</td>"
    //                + "<td hidden class='FREQ_EMAIL' storeType='PERSNL'>" + obj["EMAILSTMTFREQUENCY"] + "</td>"
    //                + "<td hidden class='STAFF_ID' storeType='FATCA'>" + obj["EMPLOYEECODE"] + "</td>"
    //                + "<td hidden class='TAX_RES_ID_TYPE' storeType='FATCA'></td>"
    //                + "<td hidden class='TAX_RES_ID_NO' storeType='FATCA'></td>"
    //                + "<td hidden class='TAX_RES_COUNTRY' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_FIRST' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_SECOND' storeType='FATCA'></td>"
    //                + "<td hidden class='BSR_THIRD' storeType='FATCA'></td>"
    //                + "<td hidden class='HOUSEHOLD_DETAILS' storeType='FATCA'>" + obj["HOUSEHOLD_DETAILS"] + "</td>"
    //                + "<td hidden class='PPI_DETAILS' storeType='FATCA'></td>"
    //                + "<td hidden class='WORKING_COMPANY' storeType='FATCA'>" + obj["WORKINGCOMPANY"] + "</td>"
    //                + "<td hidden class='SALARYACC_IS_STAFF' storeType='FATCA'>" + obj["CUSTOMERCODE"] + "</td>"
    //                + "<td hidden class='EMP_CODE' storeType='FATCA'>" + obj["EMPLOYEECODE"] + "</td>"
    //                + "<td hidden class='SALARY_PER_MONTH' storeType='FATCA'></td>"
    //                + "<td hidden class='CORPORATE_NAME' storeType='FATCA'>" + obj["CORPORATE_GROUP"] + "</td>"
    //                + "<td hidden class='FATCA_APPLICABLE' storeType='FATCA'>" + obj["FATCACOMPLIANCE"] + "</td>"
    //                + "<td hidden class='CITYOFBIRTH' storeType='FATCA'></td>"
    //                + "<td hidden class='COUNTRYOFBIRTH' storeType='FATCA'></td>";
    //
    //
    //        $.each(obj["AddressDetails"], function (key, val) {
    //            $.each(val, function (k, v) {
    //                if (v["ADDRESSTYPE"] === "R")
    //                {
    //                    dataTbl += "<td hidden class='ADDRESS_LINE1_RESI' storeType='ADDR'>" + v["ADDRESS1"] + "</td>"
    //                            + "<td hidden class='ADDRESS_LINE2_RESI' storeType='ADDR'>" + v["ADDRESS2"] + "</td>"
    //                            + "<td hidden class='ADDRESS_LINE3_RESI' storeType='ADDR'>" + v["ADDRESS3"] + "</td>"
    //                            + "<td hidden class='LANDMARK_RESI' storeType='ADDR'>" + v["LANDMARK"] + "</td>"
    //                            + "<td hidden class='PO_RESI' storeType='ADDR'></td>"
    //                            + "<td hidden class='PS_RESI' storeType='ADDR'></td>"
    //                            + "<td hidden class='TALUKA_RESI' storeType='ADDR'>" + v["TALUKA"] + "</td>"
    //                            + "<td hidden class='DISTRICT_RESI' storeType='ADDR'>" + v["DISTRICT"] + "</td>"
    //                            + "<td hidden class='COUNTRY_RESI' storeType='ADDR'>" + v["COUNTRY"] + "</td>"
    //                            + "<td hidden class='STATE_RESI' storeType='ADDR'>" + v["STATE"] + "</td>"
    //                            + "<td hidden class='CITY_RESI' storeType='ADDR'>" + v["CITY"] + "</td>"
    //                            + "<td hidden class='PINCODE_RESI' storeType='ADDR'>" + v["PINCODE"] + "</td>"
    //                            + "<td hidden class='PERM_SAME_RES' typeCheck ='checkBoxField' storeType='ADDR'></td>";
    //                } else if (v["ADDRESSTYPE"] === "P")
    //                {
    //                    dataTbl += "<td  hidden class='ADD_LINE1_PERM' storeType='ADDR'>" + v["ADDRESS1"] + "</td>"
    //
    //                            + "<td hidden class='ADD_LINE2_PERM' storeType='ADDR'>" + v["ADDRESS2"] + "</td>"
    //                            + "<td hidden class='ADD_LINE3_PERM' storeType='ADDR'>" + v["ADDRESS3"] + "</td>"
    //                            + "<td hidden class='LANDMARK_PERM' storeType='ADDR'>" + v["LANDMARK"] + "</td>"
    //                            + "<td hidden class='PO_PERM' storeType='ADDR'></td>"
    //
    //                            + "<td hidden class='PS_PERM' storeType='ADDR'></td>"
    //                            + "<td hidden class='TALUKA_PERM' storeType='ADDR'>" + v["TALUKA"] + "</td>"
    //                            + "<td hidden class='DISTRICT_PERM' storeType='ADDR'>" + v["DISTRICT"] + "</td>"
    //                            + "<td hidden class='COUNTRY_PERM' storeType='ADDR'>" + v["COUNTRY"] + "</td>"
    //                            + "<td hidden class='STATE_PERM' storeType='ADDR'>" + v["STATE"] + "</td>"
    //                            + "<td hidden class='CITY_PERM' storeType='ADDR'>" + v["CITY"] + "</td>"
    //                            + "<td hidden class='PINCODE_PERM' storeType='ADDR'>" + v["PINCODE"] + "</td>";
    //                } else if (v["ADDRESSTYPE"] === "O")
    //                {
    //                    //office condition
    //                    dataTbl += "<td hidden class='ADD_LINE1_OFF' storeType='ADDR'>" + v["ADDRESS1"] + "</td>"
    //                            + "<td hidden class='ADD_LINE2_OFF' storeType='ADDR'>" + v["ADDRESS2"] + "</td>"
    //                            + "<td hidden class='ADD_LINE3_OFF' storeType='ADDR'>" + v["ADDRESS3"] + "</td>"
    //                            + "<td hidden class='LANDMARK_OFF' storeType='ADDR'>" + v["LANDMARK"] + "</td>"
    //                            + "<td hidden class='PO_OFF' storeType='ADDR'></td>"
    //                            + "<td hidden class='PS_OFF' storeType='ADDR'></td>"
    //                            + "<td hidden class='TALUKA_OFF' storeType='ADDR'>" + v["TALUKA"] + "</td>"
    //                            + "<td hidden class='DISTRICT_OFF' storeType='ADDR'>" + v["DISTRICT"] + "</td>"
    //                            + "<td hidden class='COUNTRY_OFF' storeType='ADDR'>" + v["COUNTRY"] + "</td>"
    //                            + "<td hidden class='STATE_OFF' storeType='ADDR'>" + v["STATE"] + "</td>"
    //                            + "<td hidden class='CITY_OFF' storeType='ADDR'>" + v["CITY"] + "</td>"
    //                            + "<td hidden class='PINCODE_OFF' storeType='ADDR'>" + v["PINCODE"] + "</td>"
    //                } else if (v["ADDRESSTYPE"] === "T")
    //                {
    //                    dataTbl +=
    //                            +"<td hidden class='ADD_TYPE_FATCA' storeType='FATCA'>" + v["FATCA_ADDRESS_TYPE"] + "</td>"
    //                            + "<td hidden class='FATCA_ADD_1' storeType='FATCA'>" + v["ADDRESS1"] + "</td>"
    //                            + "<td hidden class='FATCA_ADD_2' storeType='FATCA'>" + v["ADDRESS2"] + "</td>"
    //                            + "<td hidden class='FATCA_ADD_3' storeType='FATCA'>" + v["ADDRESS3"] + "</td>"
    //                            + "<td hidden class='FATCA_LANDMARK' storeType='FATCA'></td>"
    //                            + "<td hidden class='FATCA_CITY' storeType='FATCA'></td>"
    //                            + "<td hidden class='FATCA_COUNTRY' storeType='FATCA'>" + v["COUNTRY"] + "</td>"
    //                            + "<td hidden class='FATCA_STATE' storeType='FATCA'>" + v["STATE"] + "</td>"
    //                            + "<td hidden class='FATCA_PINCODE' storeType='FATCA'>" + v["PINCODE"] + "</td>"
    //                            + "<td hidden class='FATCA_FATHERNAME' storeType='FATCA'></td>"
    //                            + "<td hidden class='FATCA_SPOUSENAME' storeType='FATCA'></td>";
    //
    //
    //
    //                }
    //            });
    //        });
    //        var docs = {"6": ["IND_PAN_NUMBER"], "14": ["IND_AADHAR_NUMBER"], "13": ["IND_VOTERS_ID"], "15": ["IND_DRIVING_LICENSE", "IND_DRLICENSE_ISSUE_DATE", "IND_DRLICENSE_EXPIRY_DATE"], "16": ["IND_NREGA_CARD", "IND_NREGA_ISSUE_DATE", "IND_NREGA_EXPIRY_DATE"], "12": ["IND_PASSPORT", "IND_PASSPORT_ISSUE_DATE", "IND_PASSPORT_EXPIRY_DATE"], "4": ["IND_RATION_CARD", "IND_RATIONCARD_ISSUE_DATE", "IND_RATIONCARD_EXPIRY_DATE"], "66": ["VISA_TYPE", "VISA_ISSUE_DATE", "VISA_ISSUER", "VISA_NO", "VISA_NRI_SINCE", "VISA_VALID_DATE", "VISA_ISSUE_PLACE"]};
    //        var tdEle = "";
    //        var mappings = {"IND_PAN_NUMBER": "DOCUMENTNUMBER", "IND_AADHAR_NUMBER": "DOCUMENTNUMBER", "IND_VOTERS_ID": "DOCUMENTNUMBER", "IND_DRIVING_LICENSE": "DOCUMENTNUMBER", "IND_DRLICENSE_ISSUE_DATE": "ISSUEDATE", "IND_DRLICENSE_EXPIRY_DATE": "EXPIRYDATE", "IND_NREGA_CARD": "DOCUMENTNUMBER", "IND_NREGA_ISSUE_DATE": "ISSUEDATE", "IND_NREGA_EXPIRY_DATE": "EXPIRYDATE", "IND_PASSPORT": "DOCUMENTNUMBER", "IND_PASSPORT_ISSUE_DATE": "ISSUEDATE", "IND_PASSPORT_EXPIRY_DATE": "EXPIRYDATE", "IND_RATION_CARD": "DOCUMENTNUMBER", "IND_RATIONCARD_ISSUE_DATE": "ISSUEDATE", "IND_RATIONCARD_EXPIRY_DATE": "EXPIRYDATE", "VISA_TYPE": "", "VISA_ISSUE_DATE": "ISSUEDATE", "VISA_ISSUER": "", "VISA_NO": "ISSUEDATE", "VISA_NRI_SINCE": "", "VISA_VALID_DATE": "EXPIRYDATE", "VISA_ISSUE_PLACE": "VISA_ISSUE_PLACE"};
    //
    ////       if("KYCDet" in obj["KYCDetails"])
    //        {
    //                $.each(obj["KYCDetails"]["KYCDet"], function (key, val) {
    //                if ("ISSUEDATE" in val)
    //                {
    //                    val["ISSUEDATE"] = (val["ISSUEDATE"]) ? new Date(val["ISSUEDATE"]).toStringObject("dd-mm-yy") : "";
    //                }
    //                if ("EXPIRYDATE" in val)
    //                {
    //                    val["EXPIRYDATE"] = (val["EXPIRYDATE"]) ? new Date(val["EXPIRYDATE"]).toStringObject("dd-mm-yy") : "";
    //                }
    //                if (val["DOCUMENTTYPE"] in docs)
    //                {
    //
    //                    $.each(docs[val["DOCUMENTTYPE"]], function (docKey, docClass) {
    //                        tdEle += "<td hidden class='" + docClass + "' storeType='cust'>" + val[mappings[docClass]] + "</td>";
    //                    });
    //                }
    //            });
    //        }

    //        dataTbl += tdEle;
    //        dataTbl += "<td class='FILLED_DATE' storeType='custALL'>" + $.getCurrentDate().toStringObject("dd-mm-yy") + "</td>"
    //                + "<td class='FILLED_BY' storeType='custALL'>" + $.getUserName() + "</td>"
    //                + "<td class='FETCH_CIF_FLAG' storeType='cust'>" + "Y" + "</td>"
    //                + "<td class='hidden' type='modified'>" + "N" + "</td></tr>";
    //
    //        $('#CUSTDETAILS_TABLE input[name=radio]:checked').closest("tr").html(dataTbl);
    //        return true;
  } else {
    alert("Couldn't fill existing customer's data");
  }

  return false;
}

function fetchLead(operation) {
  //debugger;
  if (!$("#FORM_TYPE").val()) {
    alert("Please select a form type first.");
    return;
  }
  var lastName, FName, MobileNo, EmailId, mProduct, channel;
  if ($("#FORM_TYPE").val() === "Non Individual") {
    lastName = $("#NI_CUSTNAME").val();
    FName = "";
    MobileNo = $("#NI_TELEPHONE_NUMBER").val();
    EmailId = "";
    mProduct = $("#SCHEME_CODE").val();
    channel = $("#CHANNEL").val();
  } else {
    lastName = $("#IND_LAST_NAME").val();
    FName = $("#IND_FIRST_NAME").val();
    MobileNo = $("#IND_MOBILE").val();
    EmailId = $("#IND_EMAIL").val();
    mProduct = $("#SCHEME_CODE").val();
  }

  try {
    var leadObj = {
      Operation: "crmCreateMultiLeadByBranchCode",
      SessionContext: {
        mProduct: mProduct,
        FName: FName,
        LName: lastName,
        ResPhone:
          $("#FORM_TYPE").val() === "Non-Individual"
            ? $("#NI_TELEPHONE_NUMBER").val()
            : $("#IND_RES_PHONE").val(),
        OffPhone: "",
        Mobile: MobileNo,
        Remarks: $("#REMARKS_CI").val(),
        Emailid: EmailId,
        Channel: "BRANCH",
        CustomerType: "Retail Business",
        LeadSource: $("#SOURCE").val(),
        BranchCode: $("#OTHERDETAILS_REQ_BRANCH_ID").val(),
        SupervisorContext: {
          UserId: "SERVOSYS",
          PrimaryPassword: "V2VsY29tZUAxMjM=",
        },
      },
    };
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&DETAILS=" +
        encodeURIComponent(JSON.stringify(leadObj)),
      success: function (data) {
        if (data.toString().startsWith("Error")) {
          alert(data);
          return false;
        } else if (data) {
          $("#LEAD_ID").val(data);
          alert("Lead ID Fetched");
        } else {
          alert("Something went wrong");
        }

        $("#LEAD_ID").trigger("blur");
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

function openWindow_PAN(url, NSDLelem, Userelem, id) {
  //debugger;
  var sOptions;
  sOptions = "status=no,menubar=no,scrollbars=no,resizable=no,toolbar=no";
  sOptions = sOptions + ",width=" + screen.availWidth.toString();
  sOptions = sOptions + ",height=" + (screen.availHeight - 50).toString();
  sOptions =
    sOptions +
    ",screenX=0,screenY=0,left=0,top=0,menubar=no,resizable=no,directories=no,location=no";
  var child = window.open(url, id, sOptions);
  child.NSDLObj = NSDLelem;
  child.userObj = Userelem;
  child.id = id;
}

function validatePAN(id) {
  debugger;
  if ($("#" + id + "_ERR").text()) {
    alert("Please correct PAN number first");
    return;
  }
  if ($("#" + id).val() === "") {
    alert("Please fill PAN number first");
    return;
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        $("#" + id).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&FIRST_NAME=" +
        (id === "NI_PAN_NUMBER" ? "" : $("#IND_FIRST_NAME").val()) +
        "&LAST_NAME=" +
        (id === "NI_PAN_NUMBER"
          ? $("#NI_CUSTNAME").val()
          : $("#IND_LAST_NAME").val()),
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return false;
          }

          var resultField =
            id === "NI_PAN_NUMBER" ? "NI_NONIND_PAN_RESULT" : "IND_PAN_RESULT";
          var NSDLObj = JSON.parse(data);
          var userObj;
          if (id === "NI_PAN_NUMBER") {
            userObj = [
              $("#NI_PAN_NUMBER").val(),
              "",
              "",
              $("#NI_CUSTNAME").val(),
              "",
              "",
              "",
              "",
            ];
          } else if (id === "IND_PAN_NUMBER") {
            userObj = [
              $("#IND_PAN_NUMBER").val(),
              "",
              $("#IND_FIRST_NAME").val(),
              $("#IND_LAST_NAME").val(),
              "",
              "",
              "",
              "",
            ];
          } else {
            alert("Something went wrong.");
            console.log("validatePAN = no input parameter received  " + id);
            return;
          }

          openWindow_PAN(
            "../ACO/ACO_ValidatePAN.jsp",
            NSDLObj,
            userObj,
            resultField
          );
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    alert("validatePAN::" + e);
    $body.removeClass("loading");
  }
}

function validatePANnew(id, dateId) {
  debugger;
  if ($("#" + id + "_ERR").text()) {
    alert("Please correct PAN number first");
    return;
  }
  if ($("#" + id).val() === "") {
    alert("Please fill PAN number first");
    return;
  }
  if ($("#" + id).val() === "") {
    alert("Please fill PAN number first");
    return;
  }
  if ($("#" + dateId).val() === "") {
    alert("Please fill DOB/CORPORATION DATE first");
    return;
  }

  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        $("#" + id).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&FIRST_NAME=" +
        (id === "NI_PAN_NUMBER" ? "" : $("#IND_FIRST_NAME").val()) +
        "&MIDDLE_NAME=" +
        (id === "NI_PAN_NUMBER" ? "" : $("#IND_MIDDLE_NAME").val()) +
        "&DOB=" +
        $("#" + dateId).val() +
        "&LAST_NAME=" +
        (id === "NI_PAN_NUMBER"
          ? $("#NI_CUSTNAME").val()
          : $("#IND_LAST_NAME").val()),
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return false;
          }

          var resultField =
            id === "NI_PAN_NUMBER" ? "NI_NONIND_PAN_RESULT" : "IND_PAN_RESULT";
          var NSDLObj = JSON.parse(data);
          var userObj;
          if (id === "NI_PAN_NUMBER") {
            userObj = [
              $("#NI_PAN_NUMBER").val(),
              "",
              $("#NI_CUSTNAME").val(),
              $("#" + dateId).val(),
              "",
            ];
          } else if (id === "IND_PAN_NUMBER") {
            userObj = [
              $("#IND_PAN_NUMBER").val(),
              "",
              $("#IND_FIRST_NAME").val() +
                " " +
                $("#IND_MIDDLE_NAME").val() +
                " " +
                $("#IND_LAST_NAME").val(),
              $("#" + dateId).val(),
              "",
            ];
          } else {
            alert("Something went wrong.");
            console.log("validatePAN = no input parameter received  " + id);
            return;
          }
          openWindow_PAN(
            "../ACO/ACO_ValidatePAN.jsp",
            NSDLObj,
            userObj,
            resultField
          );
          //     if (NSDLObj.SeedingStatus === "Y") {
          //         $("#AADHAR_PAN_LINK").prop("checked", true);
          //         $("#AADHAR_PAN_LINK").attr("disabled", true);
          //     } else {
          //         $("#AADHAR_PAN_LINK").prop("checked", false);
          //         $("#AADHAR_PAN_LINK").attr("disabled", true);
          //     }

          //     if (NSDLObj.Name === "Y" && NSDLObj.DateOfBirth === "Y") {
          //         $("#" + resultField).val("NSDL Data Used");
          //         $("#" + resultField).attr("disabled", true);
          //         $("#" + id).attr("disabled", true);
          //         $("#" + dateId).attr("disabled", true);
          //         $("#IND_FIRST_NAME").attr("disabled", true);
          //         $("#IND_LAST_NAME").attr("disabled", true);
          //         $("#IND_MIDDLE_NAME").attr("disabled", true);
          //         $("#" + dateId + "_PAN_SPAN").html("");
          //         $("#NI_CUST_NAME_PAN_SPAN").html("");
          //         $("#IND_FIRST_NAME_PAN_SPAN").html("");
          //         $("#IND_LAST_NAME_PAN_SPAN").html("");
          //         $("#IND_MIDDLE_NAME_PAN_SPAN").html("");
          //     } else if (NSDLObj.Name === "Y" && NSDLObj.DateOfBirth === "N") {
          //         if (id === "NI_PAN_NUMBER") {
          //             alert("Date of Incorporation is not match as per PAN");
          //             $("#" + dateId).val("");
          //             $("#" + dateId).attr("disabled", false);
          //             $("#NI_CUST_NAME_PAN_SPAN").html("");
          //             $("#NI_CUST_NAME").attr("disabled", true);
          //         } else {
          //             alert("Date of Birth is not match as per PAN");
          //             $("#" + dateId).val("");
          //             $("#" + dateId).attr("disabled", false);
          //             $("#IND_FIRST_NAME_PAN_SPAN").html("");
          //             $("#IND_LAST_NAME_PAN_SPAN").html("");
          //             $("#IND_MIDDLE_NAME_PAN_SPAN").html("");
          //             $("#IND_FIRST_NAME_PAN_SPAN").attr("disabled", true);
          //             $("#IND_LAST_NAME_PAN_SPAN").attr("disabled", true);
          //             $("#IND_MIDDLE_NAME_PAN_SPAN").attr("disabled", true);
          //         }
          //     } else if (NSDLObj.Name === "N" && NSDLObj.DateOfBirth === "Y") {
          //         if (id === "NI_PAN_NUMBER") {
          //             alert("Name is not match as per PAN");
          //             $("#NI_CUSTNAME").val("");
          //             $("#NI_CUSTNAME").attr("disabled", false);
          //             $("#" + dateId + "_PAN_SPAN").html("");
          //             $("#" + dateId).attr("disabled", true);
          //         } else {
          //             alert("Name is not match as per PAN");
          //             $("#IND_FIRST_NAME").val("");
          //             $("#IND_LAST_NAME").val("");
          //             $("#IND_MIDDLE_NAME").val("");
          //             $("#IND_FIRST_NAME").attr("disabled", false);
          //             $("#IND_LAST_NAME").attr("disabled", false);
          //             $("#IND_MIDDLE_NAME").attr("disabled", false);
          //             $("#" + dateId + "_PAN_SPAN").val("");
          //             $("#" + dateId).attr("disabled", true);
          //         }
          //     } else {
          //         if (id === "NI_PAN_NUMBER") {
          //             alert("Name and Date of Incorporation is not match as per PAN");
          //             $("#NI_CUSTNAME").val("");
          //             $("#NI_CUSTNAME").attr("disabled", false);
          //             $("#" + dateId).val("");
          //             $("#" + dateId).attr("disabled", false);
          //         } else {
          //             alert("Name is not match as per PAN");
          //             $("#IND_FIRST_NAME").val("");
          //             $("#IND_LAST_NAME").val("");
          //             $("#IND_MIDDLE_NAME").val("");
          //             $("#IND_FIRST_NAME").attr("disabled", false);
          //             $("#IND_LAST_NAME").attr("disabled", false);
          //             $("#IND_MIDDLE_NAME").attr("disabled", false);
          //             $("#" + dateId).val("");
          //             $("#" + dateId).attr("disabled", false);
          //         }
          //     }
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    alert("validatePAN::" + e);
    $body.removeClass("loading");
  }
}

function scanAMLResult(id) {
  //debugger;
  $.getMaster("ACO_SCAN_AML_SCORE", [], function (headers, masterData) {
    if (masterData) {
      var amlVal = parseFloat(masterData[0]);
      if (typeof amlVal === "number") {
        $("#" + id).val(amlVal);
        $("#amlCheckbtnNI").parent().show();
        $("#refreshAMLbtnNI").parent().hide();
      }
    } else {
      alert("AML Score not yet received. Please try again in a while.");
    }
  });
}

function removeAmlError(idName) {
  //debugger;

  if (
    tableLoader.FORM_TYPE === "Non Individual" &&
    idName === "amlCheckbtnNI"
  ) {
    if (
      $("#NI_AML_CHECK_RESULT").val() !== null &&
      $("#NI_AML_CHECK_RESULT").val() !== ""
    )
      document.getElementById("NI_AML_CHECK_RESULT_SPAN").innerHTML = "";
    //$("#NI_AML_CHECK_RESULT").trigger("blur");
  }
  if (
    (tableLoader.FORM_TYPE === "Individual" ||
      tableLoader.FORM_TYPE === "NRI") &&
    idName === "amlCheck"
  ) {
    if (
      $("#IND_AML_RESULT").val() !== null &&
      $("#IND_AML_RESULT").val() !== ""
    )
      document.getElementById("IND_AML_RESULT_SPAN").innerHTML = "";
    //$("#IND_AML_RESULT").trigger("blur");
  }
}

function sendAMLRequestNew(id) {
  debugger;
  try {
    var custID = "";
    var firstName = "";
    var MiddleName = "";
    var LastName = "";
    var dob = "";
    var pan = "";
    var aadhar = "";
    var voterGst = "";
    var registration = "";
    var passport = "";
    var passportIssueDt = "";
    var passportExpiryDt = "";
    var birthCertificate = "";
    if (id === "NI_AML_CHECK_RESULT") {
      custID = "APP01";
      LastName = $("#NI_CUSTNAME").val();
      dob = $("#NI_DATE_INCORPORATION").val();
      pan = $("#NI_PAN_NUMBER").val();
      aadhar = $("#NI_UDYOG_AADHAR").val();
      voterGst = $("#NI_GSTIN_NUMBER").val();
      registration = $("#NI_REGISTRATION_NUMBER").val();
      birthCertificate = "";
      passport = "";
      passportIssueDt = "";
      passportExpiryDt = "";
    } else {
      var selectedIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
        .parent()
        .parent()
        .index();
      if (selectedIndex > -1) {
        custID = "CUST_0" + selectedIndex;
        firstName = $("#IND_FIRST_NAME").val();
        MiddleName = $("#IND_MIDDLE_NAME").val();
        LastName = $("#IND_LAST_NAME").val();
        dob = $("#IND_DOB").val();
        pan = $("#IND_PAN_NUMBER").val();
        aadhar = $("#IND_AADHAR_NUMBER").val();
        voterGst = $("#IND_VOTERS_ID").val();
        registration = "";
        birthCertificate = $("#IND_BIRTH_CERTIFICATE").val();
        passport = $("#IND_PASSPORT").val();
        passportIssueDt = $("#IND_PASSPORT_ISSUE_DATE").val();
        passportExpiryDt = $("#IND_PASSPORT_EXPIRY_DATE").val();
      } else {
        alert("Please Select A Customer First");
        return;
      }
    }

    if (id === "NI_AML_CHECK_RESULT") {
      if (dob === "" || dob === undefined) {
        alert("Please fille Incorporation Date");
        return;
      }
    }
    var entityType;
    var formType = tableLoader.FORM_TYPE;
    if (formType === "Individual" || formType === "NRI") {
      entityType = "1";
    } else if (formType === "Non Individual") {
      entityType = "2";
    } else {
      entityType = "";
    }

    var referenceNo = $.getProcessInstanceId().replace(/-/g, "") + custID;
    console.log(referenceNo);
    var x = new Date();
    $body.addClass("loading");
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&entityType=" +
        entityType +
        "&firstName=" +
        firstName +
        "&MiddleName=" +
        MiddleName +
        "&PAN=" +
        pan +
        "&AADHAR=" +
        aadhar +
        "&VOTERGST=" +
        voterGst +
        "&REGISTRATION=" +
        registration +
        "&BIRTH_CERTIFICATE=" +
        birthCertificate +
        "&LastName=" +
        LastName +
        "&dob=" +
        dob +
        "&PASSPORT=" +
        passport +
        "&PASSPORTISSUEDT=" +
        passportIssueDt +
        "&PASSPORTEXPIRYDT=" +
        passportExpiryDt +
        "&referenceNo=" +
        referenceNo +
        "&PINSTID=" +
        $.getProcessInstanceId() +
        "&APPLICANT_TYPE=CUSTOMER_1" +
        "&REQUEST_ID=" +
        (x.getDate().toString() +
          x.getMonth() +
          x.getFullYear() +
          x.getHours() +
          x.getMinutes() +
          x.getSeconds() +
          x.getMilliseconds()),
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          $("#" + id).attr("refNum", referenceNo);
          openWindow_AML(
            "../../ACO/ACO_AMLResponse.jsp",
            referenceNo,
            $("#" + id),
            data
          );
          $body.removeClass("loading");
        } else {
          alert("Something went wrong");
          $body.removeClass("loading");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

//firstname middlename lastname dateofbirth mandatory
function sendAMLRequest(id) {
  debugger;
  var lastName =
    $("#FORM_TYPE").val() === "Non-Individual"
      ? $("#PERSONALDETAILS_ENTITY_NAME").val()
      : $("#PERSONALDETAILS_LAST_NAME").val();
  try {
    var custID, firstName, MiddleName, LastName;
    if (id === "NI_AML_CHECK_RESULT") {
      custID = "APP01";
      //            custID = "CUST_0";
      //            firstName = $("#NI_CUSTNAME").val();
      //            MiddleName = $("#NI_CUSTNAME").val();
      LastName = $("#NI_CUSTNAME").val();
      //            DateOfBirth = $("#IND_DOB").val();
      //            aadharNo = $("#IND_AADHAR_NUMBER").val();
    } else {
      var selectedIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
        .parent()
        .parent()
        .index();
      if (selectedIndex > -1) {
        custID = "CUST_0" + selectedIndex;
        firstName = $("#IND_FIRST_NAME").val();
        MiddleName = $("#IND_MIDDLE_NAME").val();
        LastName = $("#IND_LAST_NAME").val();
      } else {
        alert("Please select a customer first");
        return;
      }
    }

    var entityType;
    var formType = tableLoader.FORM_TYPE;
    if (formType === "Individual") {
      entityType = "1";
    } else if (formType === "Non Individual") {
      entityType = "2";
    } else {
      entityType = "";
    }

    var referenceNo = $.getProcessInstanceId().replace(/-/g, "") + custID;
    var AMLObj = {
      Request: {
        Id: referenceNo,
        Request_type: "",
        Entity_type: entityType,
        Date_time_of_request: "",
        Requesting_person_name: "",
        APPSOURCE: "SERVO",
        Bank_Branch_ID: "",
        Customer_Info: {
          Customer_Id: "",
          First_Name: firstName ? firstName : "",
          Middle_Name: MiddleName ? MiddleName : "",
          Last_Name: LastName ? LastName : "",
          Date_of_Birth: "",
          AADHAR: "",
          PAN: "",
          Passport_Info: {
            Passport_Number: "",
            Issuing_Country: "",
            Expiry_Date: "",
          },
          Address: {
            Address_Type: {
              Address1: "",
              Address2: "",
              Address3: "",
              City: "",
              State: "",
              Country: "",
              Zipcode: "",
            },
          },
          Other_Identification_Info: {
            Identification_Type: "",
            Identification_Number: "",
          },
        },
      },
    };
    var x = new Date();
    $body.addClass("loading");
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&DETAILS=" +
        encodeURIComponent(JSON.stringify(AMLObj)) +
        "&PINSTID=" +
        $.getProcessInstanceId() +
        "&APPLICANT_TYPE=CUSTOMER_1" +
        "&REQUEST_ID=" +
        (x.getDate().toString() +
          x.getMonth() +
          x.getFullYear() +
          x.getHours() +
          x.getMinutes() +
          x.getSeconds() +
          x.getMilliseconds()),
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return;
          }
          $("#" + id).attr("refNum", referenceNo);
          openWindow_AML(
            "../../ACO/ACO_AMLResponse.jsp",
            referenceNo,
            $("#" + id),
            data
          );
        } else {
          alert("Something went wrong");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

// Added By Amir
function validateAadharNew(aadharNum) {
  debugger;
  if ($("#" + aadharNum + "_ERR").text()) {
    alert("Please correct PAN number first");
    return;
  }
  if ($("#" + aadharNum).val() === "") {
    alert("Please fill PAN number first");
    return;
  }
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&DETAILS=" +
        $("#" + aadharNum).val(),
      success: function (data) {
        console.log(data);
        if (data.toString().startsWith("Error")) {
          alert(data);
          $("#" + aadharNum).val("");
          return false;
        } else {
          $("#" + aadharNum)
            .val(data)
            .prop("readonly", true);
          $("#" + aadharNum).css("-webkit-text-security", "");
          localStorage.setItem("aadharNumber", aadharNum);
        }
      },
      error: function (jqXHR, error, errorThrown) {
        alert("Something went wrong");
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

function aadharReference(aadharId) {
  debugger;
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "DETAILS=" +
        $("#" + aadharId).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        debugger;
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            return false;
          } else {
            aadhar = data;
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
  if (aadhar.length > 0) {
    return true;
  } else {
    return false;
  }
}

var fetchInterestRespNew;
function fetchInterestRateNew(id, depositAmtId, yearId, monthId, dateId) {
  debugger;
  //    if ($.getActivityKey() !== "ACO_QC") {
  //        return;
  //    }
  var years, month, days, tenure;
  var depAmt = $("#" + depositAmtId).val();
  if (!depAmt) {
    alert("Please fill deposit amount");
    return;
  }
  years = $("#" + yearId).val() ? $("#" + yearId).val() + "Y" : "0Y";
  month = $("#" + monthId).val() ? $("#" + monthId).val() + "M" : "0M";
  days = $("#" + dateId).val() ? $("#" + dateId).val() + "D" : "0D";
  if (tenure === "0Y0M0D") {
    alert("Please fill tenure in term of years, months, or days");
    return;
  }

  if (years === "0Y") years = "";
  if (month === "0M") month = "";
  if (days === "0D") days = "";
  tenure = years + month + days;
  var valueDate = "";
  if ($.getActivity() === "ACO_Case_Initiation") {
    valueDate = $("#FD_VALUEDATE").val();
  } else {
    valueDate = $("#NI_INITIALPAYMENT_VALUEDATE").val();
  }
  var InterestRateObj = {
    Product_Type: $("#SCHEME_CODE").val(),
    Original_Amount: depAmt,
    Term: tenure,
    value_date: valueDate,
  };
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(InterestRateObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        //                debugger;
        fetchInterestRespNew = data;
        if (data.toString().startsWith("Error")) {
          // remove IP or domai
          alert(
            data.replace(
              /(\b\d{1,3}(?:\.\d{1,3}){3}\b)|([a-zA-Z0-9.-]+\.[a-zA-Z]{2,})/g,
              ""
            )
          );
          return false;
        } else if (data) {
          var interestRateValue = data.toString().split(":");
          if ($.getActivity() === "ACO_Case_Initiation") {
            $("#" + id)
              .val(parseInt(interestRateValue[1].trim()))
              .addClass("changed");
            $("#NI_LEI_CODE").attr("disabled", false);
          } else {
            $("#" + id)
              .val(interestRateValue[0].trim())
              .addClass("changed");
            $("#NI_LEI_CODE").attr("disabled", true);
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchInterestRespNew::" + e);
    $body.removeClass("loading");
  }
}

function generateCIFNew(obj, id) {
  debugger;
  if (!$.isInActivities("ACO_QC")) {
    return;
  }

  document.getElementById(id).disabled = true;
  var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .parent()
    .parent()
    .index();
  if (elementIndex === -1) {
    alert("Please Select A Customer");
    document.getElementById(id).disabled = false;
    return;
  }
  if ($("#NI_INITIALPAYMENT_MADE").val() === "Yes") {
    if ($("#NI_INITIALPAYMENT_VALUEDATE").val() === "") {
      alert("Please Enter Value Date for Initial Payment Details");
      document.getElementById(id).disabled = false;
      return;
    }
  }
  //    if ($(".SALARYACC_IS_STAFF").text().charAt(elementIndex) === "3" && (($("#IND_STAFF_DESIGNATION").val() === "") ||
  //            ($("#IND_STAFF_DESIGNATION").val() === undefined)))
  //    {
  //        alert("Please Select Staff Designation.");
  //        return;
  //    }

  if ($("#ACCOUNT_RELN_CODE").val() === "MI") {
    var cifArr = new Array();
    var i = 0;
    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
      cifArr[i] = primaryCif;
      i++;
    });
    if (obj.find(".IND_RELATIONSHIP_CODE").text() === "7") {
      if (cifArr[1] === "") {
        alert("Kindly Generate the CIF for Guardian");
        document.getElementById(id).disabled = false;
        return;
      } else {
        $("#IND_GUARDIAN_CIF").val("");
        obj.find(".IND_GUARDIAN_CIF").text("");
        $("#IND_GUARDIAN_CIF").val(cifArr[1]);
        obj.find(".IND_GUARDIAN_CIF").text(cifArr[1]);
      }
    }
  }

  var CIFObj = {
    MotherMaidenName:
      obj.find(".IND_MOTHER_FRST_NAME").text() +
      " " +
      obj.find(".IND_MOTHER_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_MOTHER_LAST_NAME").text(),
    Gender: obj.find(".IND_GENDER").text(),
    OrganizationName: obj.find(".KYC_VERIFIER_ORG").text(),
    EmployeeOrganizationName: obj.find(".CORPORATE_NAME").text(), //pending
    VerificationBranch: obj.find(".KYC_VERIFY_BRANCH").text(),
    Designation: obj.find(".KYC_VERIFIER_DESIGNATION").text(),
    VerificationDate: obj
      .find(".KYC_VERIFY_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    CKYCApplicationType: obj.find(".CKYC_APP_TYPE").text(),
    OrganizationCode: obj.find(".KYC_VERIFIER_ORG_CODE").text(),
    CKYCAccountType: obj.find(".CKYC_ACC_TYPE").text(),
    Id: obj.find(".KYC_VERIFIER_ID").text(),
    VerificationDoctype: obj.find(".POA_TYPE").text(),
    Name: obj.find(".KYC_VERIFIERNAME").text(),
    PANIdentityNumber: obj.find(".IND_PAN_NUMBER").text(),
    VOTERIdentityNumber: obj.find(".IND_VOTERS_ID").text(),
    DRIVINGIdentityNumber: obj.find(".IND_DRIVING_LICENSE").text(),
    DRIVINGIssueDate: obj
      .find(".IND_DRLICENSE_ISSUE_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    DRIVINGExpiryDate: obj
      .find(".IND_DRLICENSE_EXPIRY_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    AADHARIdentityNumber: obj.find(".IND_AADHAR_NUMBER").text(),
    NREGAIdentityNumber: obj.find(".IND_NREGA_CARD").text(),
    NREGAIssueDate: obj
      .find(".IND_NREGA_ISSUE_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    NREGAExpiryDate: obj
      .find(".IND_NREGA_EXPIRY_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    PASSPORTIdentityNumber: obj.find(".IND_PASSPORT").text(),
    PlaceOfIssue: obj.find(".PASSPORT_ISSUE_PLACE").text(),
    PASSPORTIssueDate: obj
      .find(".IND_PASSPORT_ISSUE_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    PASSPORTExpiryDate: obj
      .find(".IND_PASSPORT_EXPIRY_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    RATIONIdentityNumber: obj.find(".IND_RATION_CARD").text(),
    RATIONIssueDate: obj
      .find(".IND_RATIONCARD_ISSUE_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    RATIONExpiryDate: obj
      .find(".IND_RATIONCARD_EXPIRY_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    VISAIdentityNumber: obj.find(".VISA_NO").text(),
    VISAIssueDate: obj
      .find(".VISA_ISSUE_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    VISAExpiryDate: obj
      .find(".VISA_VALID_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    BCIdentityNumber: obj.find(".IND_BIRTH_CERTIFICATE").text(),
    FATCACompliance: obj.find(".FATCA_APPLICABLE").text() === "1" ? "Y" : "N",
    PermanentAddress1: obj.find(".ADD_LINE1_PERM").text(),
    PermanentAddress2: obj.find(".ADD_LINE2_PERM").text(),
    PermanentAddress3: obj.find(".ADD_LINE3_PERM").text(),
    PermanentTaluka: obj.find(".TALUKA_PERM").text(),
    PermanentDistrict: obj.find(".DISTRICT_PERM").text(),
    PermanentCity: obj.find(".CITY_PERM").text(),
    PermanentLandmark: obj.find(".LANDMARK_PERM").text(),
    PermanentState: obj.find(".STATE_PERM").text(),
    PermanentCountry: obj.find(".COUNTRY_PERM").text(),
    PermanentPostCode: obj.find(".PINCODE_PERM").text(),
    MobileNumber: obj.find(".IND_MOBILE").text(),
    EmailAddress: obj.find(".IND_EMAIL").text(),
    ResidenseAddress1: obj.find(".ADDRESS_LINE1_RESI").text(),
    ResidenseAddress2: obj.find(".ADDRESS_LINE2_RESI").text(),
    ResidenseAddress3: obj.find(".ADDRESS_LINE3_RESI").text(),
    ResidenseTaluka: obj.find(".TALUKA_RESI").text(),
    ResidenseDistrict: obj.find(".DISTRICT_RESI").text(),
    ResidenseCity: obj.find(".CITY_RESI").text(),
    ResidenseLandmark: obj.find(".LANDMARK_RESI").text(),
    ResidenseState: obj.find(".STATE_RESI").text(),
    ResidenseCountry: obj.find(".COUNTRY_RESI").text(),
    ResidensePostCode: obj.find(".PINCODE_RESI").text(),
    ResidencePhoneNumber: obj.find(".IND_RES_PHONE").text(),
    FaxNumber: obj.find(".IND_FAX").text(),
    CKYCDateOfDeclaration: obj
      .find(".CKYC_DECLARATION_DATE")
      .text()
      .split("-")
      .reverse()
      .join("-"),
    BranchId: $("#OTHERDETAILS_ACC_OPENING_BRANCH").val(),
    SMSRegistration: obj.find(".SMS_SERVICE").text() === "Y" ? "1" : "0",
    FatherNamePrefix: obj.find(".IND_FATHER_PREFIX").text(),
    Occupation: obj.find(".OCCUPATION").text(),
    MailingAddressType: obj.find(".ADDRESS_TYPE").text(),
    AlternateMobileNumber: obj.find(".IND_ALT_MOBILE").text(),
    EmployeeId: obj.find(".STAFF_ID").text(),
    MonthlyIncome: obj.find(".GROSS_INCOME").text(),
    MaidenNamePrefix: obj.find(".IND_MAIDEN_PREFIX").text(),
    Form60: obj.find(".OTHERDETAILS_FORM_SIXTY").text(),
    EducationQualification: obj.find(".PERSNL_QUALIFICATION").text(),
    FirstName: obj.find(".IND_FIRST_NAME").text(),
    CountryOfResidence: obj.find(".COUNTRY_RESI").text(),
    InternetBanking: obj.find(".INTERNET_SERVICE").text(),
    Religion: obj.find(".RELIGION").text(),
    RelationshipStatus: obj.find(".IND_RELATIONSHIP_CODE").text(),
    SpouseName:
      obj.find(".IND_SPOUSE_FRST_NAME").text() +
      " " +
      obj.find(".IND_SPOUSE_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_SPOUSE_LAST_NAME").text(),
    NetWorth: obj.find(".IND_NET_WORTH").text(),
    MobileBankingFlag: obj.find(".MOBILE_BANKING").text(),
    FatherName:
      obj.find(".IND_FATHER_FRST_NAME").text() +
      " " +
      obj.find(".IND_FATHER_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_FATHER_LAST_NAME").text(),
    EmailStatement:
      obj.find(".EMAIL_SERVICE").text() === "Y"
        ? obj.find(".IND_EMAIL").text()
        : "",
    FATCAAddressType: obj.find(".ADD_TYPE_FATCA").text(),
    BirthDt: obj.find(".IND_DOB").text().split("-").reverse().join("-"),
    CityOfBirth: obj.find(".CITYOFBIRTH").text(),
    CountryOfBirth: obj.find(".COUNTRYOFBIRTH").text(),
    AMLScreening:
      obj.find(".IND_AML_RESULT").text() === "Blacklisted" ? "1" : "0",
    PhysicalStatus: obj.find(".PHYSICAL_STATUS").text(),
    MaritalStatus: obj.find(".IND_MARITAL_STATUS").text(),
    CKYCId: "",
    LastName: obj.find(".IND_LAST_NAME").text(),
    MaidenName:
      obj.find(".IND_MAIDEN_FRST_NAME").text() +
      " " +
      obj.find(".IND_MAIDEN_LAST_NAME").text(),
    SpouseNamePrefix: obj.find(".IND_SPOUSE_PREFIX").text(),
    Source: obj.find(".SOURCE").text(),
    PoliticallyExposedPerson: obj.find(".IND_ISPOLITICALLY_EXPOSED").text(),
    NamePrefix: obj.find(".TITLE").text(),
    EmailStatementFrequency: obj.find(".FREQ_EMAIL").text(),
    MotherNamePrefix: obj.find(".IND_MOTHER_PREFIX").text(),
    MiddleName: obj.find(".IND_MIDDLE_NAME").text(),
    EmployeeNumber: obj.find(".EMP_CODE").text(),
    OFFICEAddress1: obj.find(".ADD_LINE1_OFF").text(),
    OFFICEAddress2: obj.find(".ADD_LINE2_OFF").text(),
    OFFICEAddress3: obj.find(".ADD_LINE3_OFF").text(),
    OFFICETaluka: obj.find(".TALUKA_OFF").text(),
    OFFICEDistrict: obj.find(".DISTRICT_OFF").text(),
    OFFICECity: obj.find(".CITY_OFF").text(),
    OFFICELandmark: obj.find(".LANDMARK_OFF").text(),
    OFFICEState: obj.find(".STATE_OFF").text(),
    OFFICECountry: obj.find(".COUNTRY_OFF").text(),
    OFFICEPostCode: obj.find(".PINCODE_OFF").text(),
    IdentityType: obj.find(".KYC_NAME_ID_PROOF").text(),
    IdentityNumber: obj.find(".KYC_NUM_ID_PROOF").text(),
    KYCIdentityType: obj.find(".KYC_NAME_ADDR_PROOF").text(),
    KYCIdentityNumber: obj.find(".KYC_NUM_ADDR_PROOF").text(),
    ResidentialStatus: obj.find(".IND_RESIDENTIAL_STATUS").text(),
    DND: obj.find(".NI_SERVICEDND").text(),
    Relationship: obj.find(".IND_RELATIONSHIP_CODE").text(),
    Caste: obj.find(".IND_CATEGORY").text(),
    EmbossedName: obj.find(".NI_ACCFACILITY_DEBITCARDNAME").text(),
    CustomerKnownSince: obj.find(".VISA_NRI_SINCE").text(),
    AdultDependent: obj.find(".NUMBER_OF_ADULTS").text(),
    GuardianName: obj.find(".GUARDIAN_NAME").text(),
    CustomerCode: obj.find(".SALARYACC_IS_STAFF").text(),
    PermanentAddressProofType: obj.find(".RESIDENCE_TYPE"),
    DNDEmailAddress: obj.find(".DND_SERVICE").text(),
    OtherBankAccount: obj.find(".NI_FD_OTHERBANKACC").text(),
    FATCAAddress1: obj.find(".FNI_FATCA_TAXADDR1").text(),
    FATCAAddress2: obj.find(".FNI_FATCA_TAXADDR2").text(),
    FATCAAddress3: obj.find(".FNI_FATCA_TAXADDR3").text(),
    FATCACity: obj.find(".NI_FATCA_CITY").text(),
    FATCALandmark: obj.find(".FNI_FATCA_LANDMARK").text(),
    FATCAState: obj.find(".NI_FATCA_STATE").text(),
    FATCACountry: obj.find(".NI_FATCA_COUNTRY").text(),
    FATCAPostCode: obj.find(".NI_FATCA_PIN").text(),
    SBRClassificationLayer: obj.find(".IND_SBR_CLASSIFICATION_LAYER").text(),
    MFIPortFolio: obj.find(".IND_MFI_PORTFOLIO").text(),
    LanguageId: obj.find(".IND_LANGUAGE_CODE").text(),
    UdyamAadhar: obj.find(".IND_UDHYAM_AADHAR").text(),
    MobileNumberCountryCode: obj.find(".IND_COUNTRY_CODE").text(),
    TdsCustomerId: obj.find(".IND_GUARDIAN_CIF").text(),
    AadhaarPanLinkStatus: obj.find(".AADHAR_PAN_LINK").text(),
    OneCIFException: obj.find(".IND_ONE_CIF_ONE_MOBILE").text(),
    AepsService: obj.find(".IND_AEPS").text(),
    VpaID: obj.find(".IND_VPA_ID").text(),
  };
  //    console.log(CIFObj);

  var valueDate =
    $("#NI_INITIALPAYMENT_VALUEDATE").val() === ""
      ? ""
      : $("#NI_INITIALPAYMENT_VALUEDATE").val().split("-").reverse().join("-");
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(CIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&VALUE_DATE=" +
        valueDate +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            document.getElementById(id).disabled = false;
            alert(data);
            return false;
          }
          var parser = JSON.parse(data);
          var matchStatus = parser.MatchStatus;
          if (matchStatus.toUpperCase().trim() === "100% MATCH") {
            if (
              confirm(
                "Customer already exists = " +
                  parser.MatchStatus +
                  ", Do you want to continue with the same CIF?"
              )
            ) {
              $("#IND_IS_EXISTING").val("Existing");
              $("#IND_CIF_NUMBER").val(parser.UCIC);
              if (
                $.getValue("FORM_TYPE") === "Non Individual" &&
                $.getValue("NI_PAN_NUMBER") === ""
              ) {
                $.setValue("NI_PROPRIETOR_CIF", parser.UCIC);
              }

              return;
            } else {
              return;
            }
          } else if (matchStatus.toUpperCase().trim() === "NOMATCH") {
            alert("CIF received : " + parser.UCIC);
            $("#IND_CIF_NUMBER").val(parser.UCIC);
            if (
              $.getValue("FORM_TYPE") === "Non Individual" &&
              $.getValue("NI_PAN_NUMBER") === ""
            ) {
              $.setValue("NI_PROPRIETOR_CIF", parser.UCIC);
            }
          } else {
            alert("No response received");
          }
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("generateCIFNew::" + e);
    $body.removeClass("loading");
  }
}

function fillSmileAccountCif(cifId) {
  if (
    $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy") &&
    $("#SCHEME_CODE").val() === "1018"
  ) {
    var cifNumber = $("#" + cifId).val();
    if (cifNumber !== null && cifNumber !== "") {
      $("#CIF_SMILE").val(cifNumber).prop("disabled", true);
    }
  }
}

//Added By Amir
function validateAccountNumberNew(id) {
  debugger;
  if ($("#ACC_NUM_TYPE").val() === "InstaKit") {
    if ($("#" + id + "_ERR").text()) {
      alert("Please correct Account number first");
      return;
    }
    if ($("#" + id).val() === "") {
      alert("Please fill Account number first");
      return;
    }
    var accountNumber = $("#ACCOUNT_NUMBER").val();
    try {
      $.ajax({
        type: "POST",
        data:
          "DETAILS=" +
          accountNumber +
          "&FORM_TYPE=" +
          $("#FORM_TYPE").val() +
          "&DML_TYPE=" +
          $.getActivity() +
          "&PINSTID=" +
          ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
          "&OPERATION=" +
          arguments.callee.name,
        url: "../ACO/GenericService",
        success: function (data) {
          if (data) {
            console.log(data);
            if (data.toString().startsWith("Error")) {
              alert(data);
              isAccValid = false;
              return false;
            }
            //                        if (!data.toString().startsWith("Success")) {
            //                            alert(data);
            //                        }
            //                        $("#ACCOUNT_NUMBER").prop("disabled", true);
            //                        if (data.toString().trim().toUpperCase() === "SUCCESS") {
            var parser = JSON.parse(data);
            var BranchCode = parser.BranchCode;
            //                            var ProductCode = parser.ProductCode;
            var TransactionStatus = parser.TransactionStatus;
            TransactionStatus = TransactionStatus.ReplyText;
            if (TransactionStatus.trim().toUpperCase() === "SUCCESS") {
              if (BranchCode === $("#OTHERDETAILS_ACC_OPENING_BRANCH").val()) {
                $("#ACCOUNT_NUMBER").prop("disabled", true);
                isAccValid = true;
                alert("Account Number Validated Successfully");
              } else {
                alert("Branch Code does not match with form details");
                isAccValid = false;
              }
            } else {
              alert("TransactionStatus is Not Successful");
              isAccValid = false;
            }
            //                        }
          } else {
            alert("Something went wrong.");
          }

          $body.removeClass("loading");
        },
        error: function (jqXHR, error, errorThrown) {
          errorHandler(jqXHR, error, errorThrown);
          $body.removeClass("loading");
          alert("Something went wrong");
        },
      });
    } catch (e) {
      alert("validateAccountNumberNew::" + e);
      $body.removeClass("loading");
    }
  } else if ($("#ACC_NUM_TYPE").val() === "SpecialAccount") {
    isAccValid = true;
    console.log("Special Account Number");
  }
}

function NI_generateCIFNew(id) {
  debugger;
  if ($.getValue("NI_PAN_NUMBER") === "") {
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (elementIndex === -1) {
      alert("Please Select A Customer");
      return;
    }
    if (
      $("#IND_IS_EXISTING").val() === "New" &&
      $("#IND_CIF_NUMBER").val() === ""
    ) {
      alert("Please First Create Customer");
      return;
    }
  }
  document.getElementById(id).disabled = true;
  if ($.getValue("NI_CIF_NUMBER") !== "") {
    alert("CIF IS ALREADY CREATED");
    return;
  }

  if ($("#NI_INITIALPAYMENT_MADE").val() === "Yes") {
    if ($("#NI_INITIALPAYMENT_VALUEDATE").val() === "") {
      alert("Please Enter Value Date for Initial Payment Details");
      return;
    }
  }
  var NICIFObj = {
    PANIdentityNumber: $.getValue("NI_PAN_NUMBER"),
    AADHARIdentityNumber: $.getValue("NI_UDYOG_AADHAR"),
    //        "GSTNumber": $.getValue("NI_GSTIN_NUMBER"),
    GSTNumber: $.getValue("NI_GSTIN_NUMBER"),
    TanNumber: $.getValue("NI_TAN_NUMBER"),
    Form49A: $.getValue("FORM_FORTY_NINE_A"),
    CIN: $.getValue("NI_COMPANY_ID"),
    LEICode: $.getValue("NI_LEI_CODE"),
    LEICodeIssueDate: $.getValue("NI_LEI_CODE_ISSUE_DATE")
      .split("-")
      .reverse()
      .join("-"),
    LEICodeExpiryDate: $.getValue("NI_LEI_CODE_EXPIRY_DATE")
      .split("-")
      .reverse()
      .join("-"),
    FATCACompliance: $.getValue("NI_FATCA_DROPDOWN") === "1" ? "Y" : "N", //FATCA_APPLICABLE
    MailingAddressType: $.getValue("NI_PREF_MAILADDR"),
    PermanentAddress1: $.getValue("NICORR_ADD_LINE1"),
    PermanentAddress2: $.getValue("NICORR_ADD_LINE2"),
    PermanentAddress3: $.getValue("NICORR_ADD_LINE3"),
    PermanentTaluka: $.getValue("NICORR_TALUKA"),
    PermanentDistrict: $.getValue("NICORR_DISTRICT"),
    PermanentCity: $.getValue("NICORR_CITY"),
    PermanentLandmark: $.getValue("NICORR_LANDMARK"),
    PermanentState: $.getValue("NICORR_STATE"),
    PermanentCountry: $.getValue("NICORR_COUNTRY"),
    PermanentPostCode: $.getValue("NICORR_PINCODE"),
    MobileNumber: $.getValue("NI_CONTACT_MOB"),
    TradeServicesAvailed: $.getValue("NI_AVAILED_TRADE_SERVICE"),
    EmailAddress: $.getValue("NI_CONTACT_EMAIL"),
    ResidenseAddress1: $.getValue("NICORR_ADD_LINE1"),
    ResidenseAddress2: $.getValue("NICORR_ADD_LINE2"),
    ResidenseAddress3: $.getValue("NICORR_ADD_LINE3"),
    ResidenseTaluka: $.getValue("NICORR_TALUKA"),
    ResidenseDistrict: $.getValue("NICORR_DISTRICT"),
    ResidenseCity: $.getValue("NICORR_CITY"),
    ResidenseLandmark: $.getValue("NICORR_LANDMARK"),
    ResidenseState: $.getValue("NICORR_STATE"),
    ResidenseCountry: $.getValue("NICORR_COUNTRY"),
    ResidensePostCode: $.getValue("NICORR_PINCODE"),
    ResidencePhoneNumber: $.getValue("NI_CONTACT_TEL1"),
    FaxNumber: $.getValue("NI_CONTACT_FAX"),
    BranchId: $.getValue("OTHERDETAILS_ACC_OPENING_BRANCH"),
    SMSRegistration: $.getValue("NI_SERVICESMS") === "Y" ? "1" : "0",
    OwnershipStatus: $.getValue("RESIDENCE_TYPE"), //RESIDENCE_TYPE
    Occupation: $.getValue("NATURE_OF_BUSINESS"), //OCCUPATION
    CommunicationAddressType: $.getValue("NI_REG_ADD_TYPE"), //ADDRESS_TYPE
    FirstName: $.getValue("NI_CUSTNAME"),
    CountryOfResidence: $.getValue("NICORR_COUNTRY"), //COUNTRY_RESI
    InternetBanking: $.getValue("NI_SERVICEINTERNET"),
    NetWorth: $.getValue("ENTITY_ANNUAL_TURNOVER"),
    MobileBankingFlag: $.getValue("NI_SERVICEMOBBANKING"),
    EmailStatement: $.getValue("NI_SERVICEEMAIL"),
    FATCAAddressType: $.getValue("NI_FATCA_ADDRTYPE"),
    AMLScreening:
      $.getValue("NI_AML_CHECK_RESULT") === "Blacklisted" ? "1" : "0",
    Source: $.getValue("SOURCE"),
    EmailStatementFrequency: $.getValue("NI_FREQ_EMAIL"),
    OFFICEAddress1: $.getValue("NIOFFC_ADD_LINE1"),
    OFFICEAddress2: $.getValue("NIOFFC_ADD_LINE2"),
    OFFICEAddress3: $.getValue("NIOFFC_ADD_LINE3"),
    OFFICETaluka: $.getValue("NIOFFC_TALUKA"),
    OFFICEDistrict: $.getValue("NIOFFC_DISTRICT"),
    OFFICECity: $.getValue("NIOFFC_CITY"),
    OFFICELandmark: $.getValue("NIOFFC_LANDMARK"),
    OFFICEState: $.getValue("NIOFFC_STATE"),
    OFFICECountry: $.getValue("NIOFFC_COUNTRY"),
    OFFICEPostCode: $.getValue("NIOFFC_PINCODE"),
    DND: $.getValue("NI_SERVICEDND"),
    DateOfIncorporation: $("#NI_DATE_INCORPORATION")
      .val()
      .split("-")
      .reverse()
      .join("-"),
    RegistrationNumber: $.getValue("NI_REGISTRATION_NUMBER"),
    CountryOfRegistration: $.getValue("NI_COUNTRY_INCORPORATION"),
    PlaceOfIncorporation: $.getValue("NI_CITY_INCORPORATION"),
    DateUpdated: "",
    //        "CreateDateTime": currentDate,
    PANValidationDate: "",
    MailingAddressProofType: $.getValue("NI_PREF_MAILADDR"),
    FATCAAddress1: $.getValue("FNI_FATCA_TAXADDR1"),
    FATCAAddress2: $.getValue("FNI_FATCA_TAXADDR2"),
    FATCAAddress3: $.getValue("FNI_FATCA_TAXADDR3"),
    FATCATaluka: $.getValue("NIOFFC_TALUKA"),
    FATCADistrict: "",
    FATCACity: $.getValue("NI_FATCA_CITY"),
    FATCALandmark: $.getValue("FNI_FATCA_LANDMARK"),
    FATCAState: $.getValue("NI_FATCA_STATE"),
    FATCACountry: $.getValue("NI_FATCA_COUNTRY"),
    FATCAPostCode: $.getValue("NI_FATCA_PIN"),
    DateOfCommencement: $("#NI_BUSINESS_COMMENCEMENT_DATE")
      .val()
      .split("-")
      .reverse()
      .join("-"), // NI_BUSINESS_COMMENCEMENT_DATE
    TdsCustomerId: $.getValue("NI_PROPRIETOR_CIF"),
    ConstitutionCode: $.getValue("CONSTITUTION"),
    SBRClassificationLayer: $.getValue("SBR_CLASSIFICATION_LAYER"),
    MFIPortFolio: $.getValue("MFI_PORTFOLIO"),
    Segment: $.getValue("NI_CORPORATE_SEGMENT"),
    SubSegment: $.getValue("NI_CORPORATE_SUB_SEGMENT"),
    LineOfActivity: $.getValue("NATURE_OF_INDUSTRY"),
    TaxDeductionTable: $.getValue("NI_SUB_SEGMENT_TDS"),
    //        "OneCIFException": $.getValue("NI_ONE_CIF_ONE_MOBILE")
  };
  console.log(NICIFObj);
  var valueDate =
    $("#NI_INITIALPAYMENT_VALUEDATE").val() === ""
      ? ""
      : $("#NI_INITIALPAYMENT_VALUEDATE").val().split("-").reverse().join("-");
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(NICIFObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&VALUE_DATE=" +
        valueDate +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            document.getElementById(id).disabled = false;
            return false;
          }
          var parser = JSON.parse(data);
          var matchStatus = parser.MatchStatus;
          if (matchStatus.toUpperCase().trim() === "100% MATCH") {
            if (
              confirm(
                "Customer already exists = " +
                  parser.MatchStatus +
                  ", Do you want to continue with the same CIF?"
              )
            ) {
              $("#NI_EXISTING_CUST").val("Existing");
              $("#NI_CIF_NUMBER").val(parser.UCIC).addClass("changed");
              return;
            } else {
              return;
            }
          } else if (matchStatus.toUpperCase().trim() === "NOMATCH") {
            alert("CIF received : " + parser.UCIC);
            $("#NI_CIF_NUMBER").val(parser.UCIC).addClass("changed");
          } else {
            alert("No response received");
          }
          $("#NI_CIF_NUMBER").trigger("blur");
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("NI_generateCIFNew::" + e);
    $body.removeClass("loading");
  }
}

function getColumnNames(ACO_COLUMNS) {
  var colMap = new Map();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/FetchColumnNames",
      async: false,
      data: "ACO_COLUMNS=" + ACO_COLUMNS,
      success: function (data) {
        //debugger;
        var columnNameMap = JSON.parse(data);
        for (var i in columnNameMap) {
          var mapObj = new Object();
          mapObj[i] = columnNameMap[i];
          colMap[i] = columnNameMap[i];
        }
        //  console.log(colArray);
        return colMap;
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    //  alert("====Exception occured while fetching values=====");
  }

  return colMap;
}

var TESTmasterData;
function getCustDetails(callType) {
  //GET_QC_DATA, GET_DATA_CORR
  debugger;
  $("#CUSTDETAILS_TBODY").html("");
  var newMapCol = new Map();
  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_Maker,ACO_Checker,DEFERRAL_COMPLIANCE,DEFERRAL_BRANCH"
    )
  ) {
    newMapCol = getColumnNames("ACO_COLUMNS");
  }
  if (
    $.isInActivities(
      "ACO_QC,ACO_Data_Correction,ACO_RCU,RCU_OPS,RCU_BRANCH,ACO_End"
    )
  ) {
    newMapCol = getColumnNames("ACO_QC");
  }

  var decisionDVU = $.getValue("DECISION_DVU");
  var decisionDiscp = $.getValue("DECISION_DISCREPANCY");
  try {
    var param = new Object();
    param.CALL = callType;
    param.PINSTID = $.getProcessInstanceId();
    param.ACTIVITYNAME = "";
    param.NEXTACTIVITYNAME = "";
    param.DECISION = $.getValue("DECISION_DISCREPANCY");
    if (callType === "GET_INITIATION_DATA_DVU") {
      param.ACTIVITYNAME = "ACO_Case_Initiation";
      param.NEXTACTIVITYNAME = "ACO_Maker";
    } else if (callType === "GET_INITIATION_DATA") {
      param.ACTIVITYNAME = "FIRST_FILL";
    } else if (callType === "GET_INITIATION_DATA_DISCP") {
      param.ACTIVITYNAME = "ACO_DVU";
    } else if (callType === "GET_CUSTMAKERS_DATA") {
      param.ACTIVITYNAME = "ACO_DVU";
    } else if (callType === "GET_QC_DATA") {
      {
        param.ACTIVITYNAME = "ACO_Checker";
      }
    } else if (callType === "GET_DATA_CORR_DATA") {
      param.ACTIVITYNAME = "ACO_QC";
    } else if (callType === "GET_END_DATA") {
      param.ACTIVITYNAME = "ACO_QC";
    }

    {
      param.CURRENTACTIVITYNAME = $.getActivityKey();
    }

    $.callJavaExtensionCustom(
      "com.servo.getData.getCustomerDetails",
      param,
      function (data) {
        var masterData = JSON.parse(data);
        //console.log(masterData);
        if (masterData) {
          var x = 0;
          for (var i in masterData) {
            TESTmasterData = masterData;
            if ($.isInActivities("ACO_DVU")) {
              TESTmasterData = masterData;
              var firstData;
              var dataToAppend = "";
              var lastData = "";
              if ($.getProcessInstanceId() !== "null") {
                //debugger;
                firstData =
                  "<tr rowId='' style='text-align:center;'  >" +
                  "<td ><input style = 'margin-left: 20px;' type='radio' mod = 'custRadio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                var list = new Array();
                var storeType;
                var statusColumn;
                var colType;
                var typeCheck;
                for (var j in newMapCol) {
                  list = newMapCol[j];
                  for (var m in list) {
                    storeType = list[0];
                    statusColumn = list[1];
                    colType = list[2];
                    typeCheck = list[3];
                  }

                  if (typeCheck === "checkBoxField") {
                    if (colType === "hidden") {
                      dataToAppend =
                        dataToAppend +
                        "<td hidden class ='" +
                        j +
                        "' typeCheck ='checkBoxField' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    } else {
                      dataToAppend =
                        dataToAppend +
                        "<td  class ='" +
                        j +
                        "' typeCheck ='checkBoxField' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    }
                  } else {
                    if (colType === "hidden") {
                      dataToAppend =
                        dataToAppend +
                        "<td hidden class ='" +
                        j +
                        "' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    } else {
                      dataToAppend =
                        dataToAppend +
                        "<td class ='" +
                        j +
                        "' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    }
                  }
                  x++;
                }

                var totalLength = TESTmasterData[0]["length"];
                lastData =
                  "<td class='FILLED_DATE' storeType='custALL'>" +
                  (!masterData[i][x] ? "" : masterData[i][x]) +
                  "</td>" +
                  "<td class='FILLED_BY' storeType='custALL'>" +
                  (!masterData[i][x++] ? "" : masterData[i][x++]) +
                  "</td>" +
                  "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                  (!masterData[i][totalLength - 1]
                    ? ""
                    : masterData[i][totalLength - 1]) +
                  "</td>" +
                  "<td class ='hidden' type ='modified'>" +
                  "N" +
                  "</td>";
                $("#CUSTDETAILS_TBODY").append(
                  firstData + dataToAppend + lastData + "</tr>"
                );
              }
            } else if ($.isInActivities("ACO_Maker,ACO_Checker")) {
              console.log("inside ACO_Checker");
              if (masterData[0].length === 51) {
                console.log("inside first time filling");
                TESTmasterData = masterData;
                var firstData;
                var dataToAppend = "";
                var lastData = "";
                if ($.getProcessInstanceId() !== "null") {
                  //debugger;
                  firstData =
                    "<tr rowId='' style='text-align:center;'  >" +
                    "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                  var list = new Array();
                  var storeType;
                  var statusColumn;
                  for (var j in newMapCol) {
                    list = newMapCol[j];
                    for (var m in list) {
                      storeType = list[0];
                      statusColumn = list[1];
                    }

                    if (statusColumn === "F") {
                      if (
                        storeType === "cust,checkBoxField" ||
                        storeType === "ADDR,checkBoxField" ||
                        storeType === "PERSNL,checkBoxField"
                      ) {
                        dataToAppend =
                          dataToAppend +
                          "<td class ='" +
                          j +
                          "' typeCheck ='checkBoxField' storeType='" +
                          storeType +
                          "'>" +
                          (!masterData[i][x] ? "" : masterData[i][x]) +
                          "</td>";
                      } else {
                        dataToAppend =
                          dataToAppend +
                          "<td class ='" +
                          j +
                          "' storeType='" +
                          storeType +
                          "'>" +
                          (!masterData[i][x] ? "" : masterData[i][x]) +
                          "</td>";
                      }
                      x++;
                    } else {
                      if (
                        storeType === "cust,checkBoxField" ||
                        storeType === "ADDR,checkBoxField" ||
                        storeType === "PERSNL,checkBoxField"
                      ) {
                        dataToAppend =
                          dataToAppend +
                          "<td class ='" +
                          j +
                          "' typeCheck ='checkBoxField' storeType='" +
                          storeType +
                          "'></td>";
                      } else {
                        dataToAppend =
                          dataToAppend +
                          "<td class ='" +
                          j +
                          "' storeType='" +
                          storeType +
                          "'></td>";
                      }
                    }
                  }

                  var totalLength = TESTmasterData[0]["length"];
                  lastData =
                    "<td class='FILLED_DATE' storeType='custALL'>" +
                    (!masterData[i][x] ? "" : masterData[i][x]) +
                    "</td>" +
                    "<td class='FILLED_BY' storeType='custALL'>" +
                    (!masterData[i][x++] ? "" : masterData[i][x++]) +
                    "</td>" +
                    "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                    (!masterData[i][totalLength - 1]
                      ? ""
                      : masterData[i][totalLength - 1]) +
                    "</td>" +
                    "<td class ='hidden' type ='modified'>" +
                    "N" +
                    "</td>";
                  $("#CUSTDETAILS_TBODY").append(
                    firstData + dataToAppend + lastData + "</tr>"
                  );
                }
              } else {
                TESTmasterData = masterData;
                var firstData;
                var dataToAppend = "";
                var lastData = "";
                if ($.getProcessInstanceId() !== "null") {
                  //debugger;
                  firstData =
                    "<tr rowId='' style='text-align:center;'  >" +
                    "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                  var list = new Array();
                  var storeType;
                  var statusColumn;
                  var typeCheck;
                  for (var j in newMapCol) {
                    list = newMapCol[j];
                    for (var m in list) {
                      storeType = list[0];
                      statusColumn = list[1];
                      typeCheck = list[3];
                    }

                    if (typeCheck === "checkBoxField") {
                      dataToAppend =
                        dataToAppend +
                        "<td class ='" +
                        j +
                        "' typeCheck ='checkBoxField' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    } else {
                      dataToAppend =
                        dataToAppend +
                        "<td class ='" +
                        j +
                        "' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    }
                    x++;
                  }

                  var totalLength = TESTmasterData[0]["length"];
                  lastData =
                    "<td class='FILLED_DATE' storeType='custALL'>" +
                    (!masterData[i][x] ? "" : masterData[i][x]) +
                    "</td>" +
                    "<td class='FILLED_BY' storeType='custALL'>" +
                    (!masterData[i][x++] ? "" : masterData[i][x++]) +
                    "</td>" +
                    "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                    (!masterData[i][totalLength - 1]
                      ? ""
                      : masterData[i][totalLength - 1]) +
                    "</td>" +
                    "<td class ='hidden' type ='modified'>" +
                    "N" +
                    "</td>";
                  $("#CUSTDETAILS_TBODY").append(
                    firstData + dataToAppend + lastData + "</tr>"
                  );
                }
              }
            } else if ($.isInActivities("ACO_QC,ACO_Data_Correction")) {
              if (masterData[0].length === 51) {
                if (
                  masterData[i][1] !== null &&
                  masterData[i][1] !== "" &&
                  masterData[i][1] !== "undefined"
                ) {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    var typeCheck;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                        typeCheck = list[3];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          dataToAppend = dataToAppend + "<td ></td>";
                        }
                      } else if (statusColumn === "F") {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      } else {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'></td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'></td>";
                        }
                      }
                    }
                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td hidden class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                } else {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          dataToAppend =
                            dataToAppend +
                            "<td ><button style = 'color:white; width:110px; font-size: 10px; height: 27px; " +
                            "     margin-top: -5px; background: -webkit-linear-gradient(top, rgb(220, 105, 6) 0%, rgb(246, 86, 67) 100%); '" +
                            "  id = 'cifButton_" +
                            i +
                            "' onclick='generateCIFNew($(this).parent().parent(),this.id);' >GENERATE CIF</button></td>";
                        }
                      } else if (statusColumn === "F") {
                        if (
                          storeType === "cust,checkBoxField" ||
                          storeType === "ADDR,checkBoxField" ||
                          storeType === "PERSNL,checkBoxField"
                        ) {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      } else {
                        if (
                          storeType === "cust,checkBoxField" ||
                          storeType === "ADDR,checkBoxField" ||
                          storeType === "PERSNL,checkBoxField"
                        ) {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'></td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'></td>";
                        }
                      }
                    }
                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td hidden class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                }
              } else {
                if (
                  masterData[i][1] !== null &&
                  masterData[i][1] !== "" &&
                  masterData[i][1] !== "undefined"
                ) {
                  {
                    TESTmasterData = masterData;
                    var firstData;
                    var dataToAppend = "";
                    var lastData = "";
                    if ($.getProcessInstanceId() !== "null") {
                      //debugger;
                      firstData =
                        "<tr rowId='' style='text-align:center;'  >" +
                        "<td ><input style = 'margin-left: 20px;' type='radio'  name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                      var list = new Array();
                      var storeType;
                      var statusColumn;
                      var typeCheck;
                      for (var j in newMapCol) {
                        list = newMapCol[j];
                        for (var m in list) {
                          storeType = list[0];
                          statusColumn = list[1];
                          typeCheck = list[3];
                        }

                        if (statusColumn === "button") {
                          if (storeType === "button") {
                            dataToAppend =
                              dataToAppend + "<td id = 'hideTd'></td>";
                          }
                        } else {
                          if (typeCheck === "checkBoxField") {
                            dataToAppend =
                              dataToAppend +
                              "<td class ='" +
                              j +
                              "' typeCheck ='checkBoxField' storeType='" +
                              storeType +
                              "'>" +
                              (!masterData[i][x] ? "" : masterData[i][x]) +
                              "</td>";
                          } else {
                            dataToAppend =
                              dataToAppend +
                              "<td class ='" +
                              j +
                              "' storeType='" +
                              storeType +
                              "'>" +
                              (!masterData[i][x] ? "" : masterData[i][x]) +
                              "</td>";
                          }
                          x++;
                        }
                      }

                      var totalLength = TESTmasterData[0]["length"];
                      lastData =
                        "<td class='FILLED_DATE' storeType='custALL'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>" +
                        "<td class='FILLED_BY' storeType='custALL'>" +
                        (!masterData[i][x++] ? "" : masterData[i][x++]) +
                        "</td>" +
                        "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                        (!masterData[i][totalLength - 2]
                          ? ""
                          : masterData[i][totalLength - 2]) +
                        "</td>" +
                        "<td class ='hidden' type ='modified'>" +
                        "N" +
                        "</td>" +
                        "<td hidden class='MODIFICATION' storeType='cust'>" +
                        (!masterData[i][totalLength - 1]
                          ? ""
                          : masterData[i][totalLength - 1]) +
                        "</td>";
                      $("#CUSTDETAILS_TBODY").append(
                        firstData + dataToAppend + lastData + "</tr>"
                      );
                    }
                  }
                } else {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    var typeCheck;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                        typeCheck = list[3];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          //CIF GENERATE TO MODIFY DATA
                          dataToAppend =
                            dataToAppend +
                            "<td ><button style = 'color:white; width:110px; font-size: 10px; height: 27px; " +
                            "     margin-top: -5px; background: -webkit-linear-gradient(top, rgb(220, 105, 6) 0%, rgb(246, 86, 67) 100%); '" +
                            "  id = 'modifyButton_" +
                            i +
                            "' onclick='generateCIFNew($(this).parent().parent(),this.id);'>GENERATE CIF</button></td>";
                        }
                      } else {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      }
                    }

                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td hidden class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                }
              }
            } else if ($.isInActivities("ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH")) {
              if (masterData[0].length === 51) {
                if (
                  masterData[i][1] !== null &&
                  masterData[i][1] !== "" &&
                  masterData[i][1] !== "undefined"
                ) {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    var typeCheck;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                        typeCheck = list[3];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          dataToAppend = dataToAppend + "<td ></td>";
                        }
                      } else if (statusColumn === "F") {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      } else {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'></td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'></td>";
                        }
                      }
                    }
                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                } else {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          dataToAppend =
                            dataToAppend +
                            "<td ><button style = 'color:white; width:110px; font-size: 10px; height: 27px; " +
                            "     margin-top: -5px; background: -webkit-linear-gradient(top, rgb(220, 105, 6) 0%, rgb(246, 86, 67) 100%); '" +
                            "  id = 'cifButton_" +
                            i +
                            "' onclick='generateCIFNew($(this).parent().parent(),this.id);' >GENERATE CIF</button></td>";
                        }
                      } else if (statusColumn === "F") {
                        if (
                          storeType === "cust,checkBoxField" ||
                          storeType === "ADDR,checkBoxField" ||
                          storeType === "PERSNL,checkBoxField"
                        ) {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      } else {
                        if (
                          storeType === "cust,checkBoxField" ||
                          storeType === "ADDR,checkBoxField" ||
                          storeType === "PERSNL,checkBoxField"
                        ) {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'></td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'></td>";
                        }
                      }
                    }
                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                }
              } else {
                if (
                  masterData[i][1] !== null &&
                  masterData[i][1] !== "" &&
                  masterData[i][1] !== "undefined"
                ) {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio'  name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    var typeCheck;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                        typeCheck = list[3];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          $("#buttonHeader").text("Modify Data");
                          dataToAppend =
                            dataToAppend +
                            "<td ><button style = 'color:white; width:110px; font-size: 10px; height: 27px; " +
                            "     margin-top: -5px; background: -webkit-linear-gradient(top, rgb(220, 105, 6) 0%, rgb(246, 86, 67) 100%); '" +
                            "  id = 'modifyButton_" +
                            i +
                            "' onclick='customerModification($(this).parent().parent());'>MODIFY DATA</button></td>";
                        }
                      } else {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      }
                    }

                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                } else {
                  TESTmasterData = masterData;
                  var firstData;
                  var dataToAppend = "";
                  var lastData = "";
                  if ($.getProcessInstanceId() !== "null") {
                    //debugger;
                    firstData =
                      "<tr rowId='' style='text-align:center;'  >" +
                      "<td ><input style = 'margin-left: 20px;' type='radio' id = 'custId' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                    var list = new Array();
                    var storeType;
                    var statusColumn;
                    var typeCheck;
                    for (var j in newMapCol) {
                      list = newMapCol[j];
                      for (var m in list) {
                        storeType = list[0];
                        statusColumn = list[1];
                        typeCheck = list[3];
                      }

                      if (statusColumn === "button") {
                        if (storeType === "button") {
                          //CIF GENERATE TO MODIFY DATA
                          dataToAppend =
                            dataToAppend +
                            "<td ><button style = 'color:white; width:110px; font-size: 10px; height: 27px; " +
                            "     margin-top: -5px; background: -webkit-linear-gradient(top, rgb(220, 105, 6) 0%, rgb(246, 86, 67) 100%); '" +
                            "  id = 'modifyButton_" +
                            i +
                            "' onclick='customerModification($(this).parent().parent());'>MODIFY DATA</button></td>";
                        }
                      } else {
                        if (typeCheck === "checkBoxField") {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' typeCheck ='checkBoxField' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        } else {
                          dataToAppend =
                            dataToAppend +
                            "<td class ='" +
                            j +
                            "' storeType='" +
                            storeType +
                            "'>" +
                            (!masterData[i][x] ? "" : masterData[i][x]) +
                            "</td>";
                        }
                        x++;
                      }
                    }

                    var totalLength = TESTmasterData[0]["length"];
                    lastData =
                      "<td class='FILLED_DATE' storeType='custALL'>" +
                      (!masterData[i][x] ? "" : masterData[i][x]) +
                      "</td>" +
                      "<td class='FILLED_BY' storeType='custALL'>" +
                      (!masterData[i][x++] ? "" : masterData[i][x++]) +
                      "</td>" +
                      "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                      (!masterData[i][totalLength - 2]
                        ? ""
                        : masterData[i][totalLength - 2]) +
                      "</td>" +
                      "<td class ='hidden' type ='modified'>" +
                      "N" +
                      "</td>" +
                      "<td class='MODIFICATION' storeType='cust'>" +
                      (!masterData[i][totalLength - 1]
                        ? ""
                        : masterData[i][totalLength - 1]) +
                      "</td>";
                    $("#CUSTDETAILS_TBODY").append(
                      firstData + dataToAppend + lastData + "</tr>"
                    );
                  }
                }
              }
            } else if (
              $.isInActivities(
                "ACO_Case_Initiation,ACO_Discrepancy,DEFERRAL_COMPLIANCE,DEFERRAL_BRANCH"
              )
            ) {
              TESTmasterData = masterData;
              var firstData;
              var dataToAppend = "";
              var lastData = "";
              if ($.getProcessInstanceId()) {
                //debugger;
                firstData =
                  "<tr rowId='' style='text-align:center;'  >" +
                  "<td ><input style = 'margin-left: 20px;' type='radio'   name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>";
                var list = new Array();
                var storeType;
                var statusColumn;
                var colType;
                var typeCheck;
                for (var j in newMapCol) {
                  list = newMapCol[j];
                  for (var m in list) {
                    storeType = list[0];
                    statusColumn = list[1];
                    colType = list[2];
                    typeCheck = list[3];
                  }

                  if (typeCheck === "checkBoxField") {
                    if (colType === "hidden" || colType === "hiddenCI") {
                      dataToAppend =
                        dataToAppend +
                        "<td hidden class ='" +
                        j +
                        "' typeCheck ='checkBoxField' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    } else {
                      dataToAppend =
                        dataToAppend +
                        "<td  class ='" +
                        j +
                        "' typeCheck ='checkBoxField' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    }
                  } else {
                    if (colType === "hidden" || colType === "hiddenCI") {
                      dataToAppend =
                        dataToAppend +
                        "<td hidden class ='" +
                        j +
                        "' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    } else {
                      dataToAppend =
                        dataToAppend +
                        "<td class ='" +
                        j +
                        "' storeType='" +
                        storeType +
                        "'>" +
                        (!masterData[i][x] ? "" : masterData[i][x]) +
                        "</td>";
                    }
                  }
                  x++;
                }

                var totalLength = TESTmasterData[0]["length"];
                lastData =
                  "<td class='FILLED_DATE' storeType='custALL'>" +
                  (!masterData[i][x] ? "" : masterData[i][x]) +
                  "</td>" +
                  "<td class='FILLED_BY' storeType='custALL'>" +
                  (!masterData[i][x++] ? "" : masterData[i][x++]) +
                  "</td>" +
                  "<td  hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
                  (!masterData[i][totalLength - 1]
                    ? ""
                    : masterData[i][totalLength - 1]) +
                  "</td>";
                //+ "<td class ='hidden' type ='modified'>" + "N" + "</td>";

                // console.log("last Data : " + lastData);

                $("#CUSTDETAILS_TBODY").append(
                  firstData + dataToAppend + lastData + "</tr>"
                );
              }
            }

            x = 0;
          }
        }
      }
    );
  } catch (e) {
    alert("getCustDetails : " + e);
  }
}

var poiMapTest = new Object();
function getPOIValues(type, map) {
  var poiMap = new Object();
  var poiId;
  var poiNo;
  var poiExpiry;
  poiId = "POI_TYPE";
  poiNo = "POI_NUMBER";
  poiExpiry = "POI_EXPIRY_DATE";
  var kycId = map["KYC_NAME_ID_PROOF"];
  var kycIdNo = map["KYC_NUM_ID_PROOF"];
  var kycIdExpiry = map["KYC_EXPIRYDATE"];
  var userId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetPOIPOAValues",
      data: "userId=" + userId + "&type=" + type,
      async: false,
      success: function (data) {
        poiMap = JSON.parse(data);
        poiMapTest = poiMap;
        if (type === "POI") {
          for (var i in poiMap) {
            $("#" + poiId).append(
              "<option id='" +
                i +
                "'  value='" +
                poiMap[i][0] +
                "'>" +
                poiMap[i][1] +
                "</option>"
            );
          }

          if (
            $.isInActivities(
              "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
            )
          ) {
            if (
              kycId === "1" ||
              kycId === "2" ||
              kycId === "3" ||
              kycId === "5" ||
              kycId === "17" ||
              kycId === "25"
            ) {
              $("#" + poiId)
                .val($("#" + poiId + " option[id = '" + kycId + "']").val())
                .prop("disabled", true);
              if (
                $("#" + poiId).val() !== null &&
                $("#" + poiId).val() !== ""
              ) {
                $("#" + poiNo)
                  .val(kycIdNo)
                  .prop("disabled", true);
                $("#" + poiExpiry)
                  .val(kycIdExpiry)
                  .prop("disabled", true);
              }
            } else {
              $("#" + poiId).prop("disabled", false);
              $("#" + poiNo).prop("disabled", false);
              $("#" + poiExpiry).prop("disabled", false);
            }
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    // alert("====Exception occured while fetching values=====");
  }
}

function getPOAValues(type, map) {
  var poaMap = new Object();
  var poaId;
  var poaNo;
  var poaExpiry;
  poaId = "POA_TYPE";
  poaNo = "POA_NUMBER";
  poaExpiry = "POA_EXPIRY_DATE";
  var kycAdd = map["KYC_NAME_ADDR_PROOF"];
  var kycAddNo = map["KYC_NUM_ADDR_PROOF"];
  var kycAddExpiry = map["KYC_ADDPROOF_EXPDATE"];
  var userId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetPOIPOAValues",
      data: "userId=" + userId + "&type=" + type,
      async: false,
      success: function (data) {
        poaMap = JSON.parse(data);
        if (type === "POA") {
          for (var i in poaMap) {
            $("#" + poaId).append(
              "<option id='" +
                i +
                "'  value='" +
                poaMap[i][0] +
                "'>" +
                poaMap[i][1] +
                "</option>"
            );
          }

          if (
            $.isInActivities(
              "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
            )
          ) {
            if (
              kycAdd === "AADRCD" ||
              kycAdd === "PASSPT" ||
              kycAdd === "DRIVLI" ||
              kycAdd === "VTERID" ||
              kycAdd === "NREGA"
            ) {
              $("#" + poaId)
                .val($("#" + poaId + " option[id = '" + kycAdd + "']").val())
                .prop("disabled", true);
              if (
                $("#" + poaId).val() !== null &&
                $("#" + poaId).val() !== ""
              ) {
                $("#" + poaNo)
                  .val(kycAddNo)
                  .prop("disabled", true);
                $("#" + poaExpiry)
                  .val(kycAddExpiry)
                  .prop("disabled", true);
              }
            } else {
              $("#" + poaId).prop("disabled", false);
              $("#" + poaNo).prop("disabled", false);
              $("#" + poaExpiry).prop("disabled", false);
            }
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    // alert("====Exception occured while fetching values=====");
  }
}

var vendor;
function findVendor(vemdorNameId) {
  //debugger;
  var pInstId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/AutomaticVendorLoad",
      data: "pInstId=" + pInstId,
      async: false,
      success: function (data) {
        //debugger;
        vendor = JSON.parse(data);
        $("#" + vemdorNameId)
          .val(vendor)
          .addClass("changed");
        if (
          $("#" + vemdorNameId).val() !== null &&
          $("#" + vemdorNameId).val() !== ""
        ) {
          document.getElementById("OTHERDETAILS_VENDOR_SPAN").innerHTML = "";
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (e) {
    alert("vemdorNameId : " + e);
    $body.removeClass("loading");
  }
}

function emptyRefNo(idName) {
  $("#IND_AADHAR_NUMBER").val("");
  $("#IND_AADHAR_NUMBER").css("-webkit-text-security", "disc");
}

function checkAadharNumber(aadharId, orginalAadhar) {
  debugger;
  var aadharNum = $("#" + aadharId).val();
  var span1 = aadharId + "_ERR";
  var span2 = orginalAadhar + "_ERR";
  if (
    (aadharId === "IND_AADHAR" || aadharId === "IND_AADHAR_UBO") &&
    aadharNum !== "" &&
    aadharNum !== null
  ) {
    var regex = "^[0-9]{12}$";
    if (!aadharNum.match(regex)) {
      document.getElementById(span1).innerHTML = "Enter valid aadhar number";
      return false;
    } else {
      document.getElementById(span1).innerHTML = "";
      $("#" + orginalAadhar).prop("readonly", false);
    }
  } else if (
    aadharId === "IND_AADHAR_NUMBER" ||
    aadharId === "IND_AADHAR_NUMBER_UBO"
  ) {
    if ($("#" + aadharId).val() === $("#" + orginalAadhar).val()) {
      $("#" + orginalAadhar).css("-webkit-text-security", "disc");
      validateAadharNew(orginalAadhar);
    } else {
      alert("Aadhar Numbers entered do not match");
      $("#" + orginalAadhar).val("");
      $("#" + orginalAadhar).css("-webkit-text-security", "disc");
    }
  }
}

$("#IND_AADHAR").blur("input", function (e) {
  alert("Changed!");
});
var vendorData;
function popUpDialogTransaction() {
  //debugger;
  $("#VENDOR_LOAD_TBODY").html("");
  try {
    var param = new Object();
    param.CALL = "GET_VENDOR_LOAD";
    $.callJavaExtensionCustom(
      "com.servo.getData.getCustomerDetails",
      param,
      function (data) {
        var masterData = JSON.parse(data);
        vendorData = masterData;
        //console.log(masterData);
        if (masterData) {
          var serial = 1;
          for (var i in masterData) {
            $("#VENDOR_LOAD_TBODY").append(
              "<tr>" +
                "<td >" +
                serial +
                "</td>" +
                "<td >" +
                masterData[i][0] +
                "</td>" +
                "<td>" +
                masterData[i][1] +
                "</td>" +
                "<td>" +
                masterData[i][2] +
                "</td>" +
                "</tr>"
            );
            serial++;
            //                    } else {
            //                        $("#VENDOR_LOAD_TBODY").append("<tr>"
            //                                + "<td>" + masterData[i][1] + "</td>"
            //                                + "<td>" + masterData[i][2] + "</td>"
            //                                + "</tr>");
            //                    }
          }
        }
      }
    );
    $("#VENDOR_LOAD_DIALOG").dialog("open");
  } catch (e) {
    alert("popUpDialogTransaction : " + e);
  }
}

function updatePendingDocStatus() {
  //debugger;
  if (confirm("Do you want to update the selected case?")) {
    $("#pendingDocTable tr")
      .find('input[type="checkbox"]:checked')
      .each(function () {
        $(this)
          .parent()
          .parent()
          .find("td:nth-child(5)")
          .html("DOCUMENTS VERIFIED");
      });
    updateDocSubmissionDateInDB();
  }
}

function updateDocSubmissionDateInDB() {
  // alert("inside func");
  //debugger;
  var pinstIdList = [];
  var docNameList = [];
  $("#pendingDocBody tr").each(function () {
    var x = $.trim($(this).find("td:eq(4)").text());
    if (x === "DOCUMENTS VERIFIED") {
      var pinstId = $.trim($(this).find("td:eq(1)").text());
      pinstIdList.push(pinstId);
      var docName = $.trim($(this).find("td:eq(2)").text());
      docNameList.push(docName);
    }
  });
  //AJAX CALL TO UPDATE IN DB
  console.log(
    "==== ==== console logs saveValuesForIndiChecker ==== ====" +
      encodeURIComponent(JSON.stringify(pinstIdList))
  );
  console.log(
    "==== ==== console logs saveValuesForIndiChecker ==== ====" +
      encodeURIComponent(JSON.stringify(docNameList))
  );
  //debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/UpdateDocSubDateInDB",
      dataType: "json",
      data: {
        pinstIdList: JSON.stringify(pinstIdList),
        docNameList: JSON.stringify(docNameList),
      },
      beforeSend: function () {
        $(".overlay").show();
      },
      complete: function () {
        $(".overlay").hide();
      },
      success: function (jsonData) {
        var responseObj = JSON.parse(jsonData);
        // console.log("=== Update Status === " + responseObj);
        if (responseObj >= 1) {
          // alert("Data Updation Successfully");
          return true;
        } else {
          // alert("Data Updation failed,\n" );
          return false;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (ex) {
    $body.removeClass("loading");
  }
}

var docs = new Object();
function getPendingDocuments() {
  //debugger;
  var pInstId = localStorage.servobpm_current_processInstanceId;
  var cb = 0;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GetPendingDocumentDetailsFromDB",
      data: "pInstId=" + pInstId,
      async: false,
      success: function (data) {
        // alert("getPendingDocuments : " +pInstId);
        //debugger;
        //console.log(data);
        docs = JSON.parse(data);
        var pendingDocDetailsMap = JSON.parse(data);
        for (var x in pendingDocDetailsMap) {
          cb++;
          var pendingDetailsRow = pendingDocDetailsMap[x];
          for (var i in pendingDetailsRow) {
            if (
              pendingDetailsRow[i] === null ||
              pendingDetailsRow[i] === "null"
            )
              pendingDetailsRow[i] = "";
          }

          var pendingDetailsRowFull = pendingDetailsRow[2].split("-");
          var finalDate =
            pendingDetailsRowFull[2] +
            "-" +
            pendingDetailsRowFull[1] +
            "-" +
            pendingDetailsRowFull[0];
          var pendingDetailsRow =
            "<tr id= 'rowIdDocs_" +
            cb +
            "'" +
            "style = 'border: 1px solid black ;'  ><td  ><input  type='checkbox' id =" +
            "'" +
            cb +
            "'" +
            "/></td>\n\
                                   <td >" +
            pendingDetailsRow[0] +
            "</td>\n\
                                   <td >" +
            pendingDetailsRow[1] +
            "</td>\n\
                                   <td >" +
            finalDate +
            "</td>\n\
                                   <td >" +
            "PENDING" +
            "</td></tr>";
          $("#pendingDocBody").append(pendingDetailsRow);
          //  console.log(pendingDetailsRow);
        }

        var rowLen = $("#pendingDocTable tbody tr").length;
        //debugger;
        //  console.log(rowLen);
        if (rowLen === 0) {
          alert("No Pending Documents found");
          window.close();
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    // alert("====Exception occured while fetching values=====");
    //$body.removeClass("loading");
  }
}

function validateFormOnSave(columnId, ColValue, custNo) {
  //debugger;
  var spanName = columnId + "_SPAN";
  if (
    ColValue === null ||
    ColValue === "" ||
    ColValue === "Select" ||
    ColValue === "undefined" ||
    ColValue === undefined
  ) {
    document.getElementById(spanName).innerHTML =
      "Field cannot be empty for Customer " + custNo;
  } else {
    document.getElementById(spanName).innerHTML = "";
    //$("#"+columnId).removeClass("requiredIndiCustTable");
  }
}

function validateFatherSpouseName(newMap, custNo) {
  if (newMap["IND_IS_EXISTING"] === "New") {
    if (
      (newMap["IND_FATHER_PREFIX"] === null ||
        newMap["IND_FATHER_PREFIX"] === "" ||
        newMap["IND_FATHER_FRST_NAME"] === null ||
        newMap["IND_FATHER_FRST_NAME"] === "") &&
      (newMap["IND_SPOUSE_PREFIX"] === null ||
        newMap["IND_SPOUSE_PREFIX"] === "" ||
        newMap["IND_SPOUSE_FRST_NAME"] === null ||
        newMap["IND_SPOUSE_FRST_NAME"] === "")
    ) {
      throw new Error(
        "Father or spouse name is mandatory for Customer " + custNo
      );
    }
  }
}

function conditionalValidationOnTableValues(
  columnId,
  ColValue,
  custNo,
  newMap
) {
  //debugger;
  var idVal = ColValue;
  var idName = columnId;
  //===========================CIF NUMBER==============================================================
  if (idName === "IND_IS_EXISTING") {
    if (idVal === "Existing") {
      if (
        newMap["IND_CIF_NUMBER"] === null ||
        newMap["IND_CIF_NUMBER"] === "" ||
        newMap["IND_CIF_NUMBER"] === "undefined"
      ) {
        document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("IND_CIF_NUMBER_SPAN").innerHTML = "";
      }
    }
  }

  if (idName === "NI_EXISTING_CUST") {
    if (idVal === "Existing") {
      if (
        newMap["NI_CIF_NUMBER"] === null ||
        newMap["NI_CIF_NUMBER"] === "" ||
        newMap["NI_CIF_NUMBER"] === "undefined"
      ) {
        document.getElementById("NI_CIF_NUMBER_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("NI_CIF_NUMBER_SPAN").innerHTML = "";
      }
    }
  }
  //=================================NON INDI PAN NUMBER=======================================================

  if (idName === "NI_PAN_NUMBER") {
    if (idVal !== null && idVal !== "" && idVal !== "undefined") {
      if (
        newMap["NI_NONIND_PAN_RESULT"] === null ||
        newMap["NI_NONIND_PAN_RESULT"] === "" ||
        newMap["NI_NONIND_PAN_RESULT"] === "Select" ||
        newMap["NI_NONIND_PAN_RESULT"] === "undefined"
      ) {
        document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("NI_NONIND_PAN_RESULT_SPAN").innerHTML = "";
      }
    }
  }

  //================================PASSPORT AND RESIDENTIAL STATUS CONDITION============================================
  if (idName === "IND_RESIDENTIAL_STATUS") {
    if (
      newMap["IND_RESIDENTIAL_STATUS"] === "0" ||
      newMap["IND_RESIDENTIAL_STATUS"] === "3" ||
      newMap["IND_RESIDENTIAL_STATUS"] === "4"
    ) {
      if (
        newMap["IND_PASSPORT"] === "" ||
        newMap["IND_PASSPORT"] === null ||
        newMap["IND_PASSPORT"] === "undefined"
      ) {
        document.getElementById("IND_PASSPORT_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("IND_PASSPORT_SPAN").innerHTML = "";
      }
    }
  }

  //==============================KYC ID PROOF===============================================================
  if (idName === "KYC_NAME_ID_PROOF") {
    if (idVal === "1" || idVal === "5") {
      if (
        newMap["KYC_EXPIRYDATE"] === null ||
        newMap["KYC_EXPIRYDATE"] === "" ||
        newMap["KYC_EXPIRYDATE"] === "undefined"
      ) {
        document.getElementById("KYC_EXPIRYDATE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("KYC_EXPIRYDATE_SPAN").innerHTML = "";
      }
    }
  }

  //==============================KYC ADDRESS PROOF===============================================================
  if (idName === "KYC_NAME_ADDR_PROOF") {
    if (idVal === "PASSPT" || idVal === "DRIVLI") {
      if (
        newMap["KYC_ADDPROOF_EXPDATE"] === null ||
        newMap["KYC_ADDPROOF_EXPDATE"] === "" ||
        newMap["KYC_ADDPROOF_EXPDATE"] === "undefined"
      ) {
        document.getElementById("KYC_ADDPROOF_EXPDATE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("KYC_ADDPROOF_EXPDATE_SPAN").innerHTML = "";
      }
    }
  }

  //=====================FUNDING DETAILS====================================================================

  //==================MARITAL STSTUS MARRIED==========================================================

  //    if (idName === "IND_MARITAL_STATUS") {
  //        if (idVal === "M") {
  //            if (newMap["IND_SPOUSE_PREFIX"] === null || newMap["IND_SPOUSE_PREFIX"] === "" || newMap["IND_SPOUSE_PREFIX"] === "Select"
  //                    || newMap["IND_SPOUSE_PREFIX"] === "undefined") {
  //                document.getElementById("IND_SPOUSE_PREFIX_SPAN").innerHTML = "Field cannot be empty for Customer " + custNo;
  //                condCount++;
  //            } else {
  //                document.getElementById("IND_SPOUSE_PREFIX_SPAN").innerHTML = "";
  //            }
  //            if (newMap["IND_SPOUSE_FRST_NAME"] === null || newMap["IND_SPOUSE_FRST_NAME"] === "" || newMap["IND_SPOUSE_FRST_NAME"] === "Select"
  //                    || newMap["IND_SPOUSE_FRST_NAME"] === "undefined") {
  //                document.getElementById("IND_SPOUSE_FRST_NAME_SPAN").innerHTML = "Field cannot be empty for Customer " + custNo;
  //                condCount++;
  //            } else {
  //                document.getElementById("IND_SPOUSE_FRST_NAME_SPAN").innerHTML = "";
  //            }
  ////            if (newMap["IND_MAIDEN_PREFIX"] === null || newMap["IND_MAIDEN_PREFIX"] === "" || newMap["IND_MAIDEN_PREFIX"] === "Select"
  ////                    || newMap["IND_MAIDEN_PREFIX"] === "undefined") {
  ////                document.getElementById("IND_MAIDEN_PREFIX_SPAN").innerHTML = "Field cannot be empty for Customer " + custNo;
  ////                condCount++;
  ////
  ////            }else{
  ////                document.getElementById("IND_MAIDEN_PREFIX_SPAN").innerHTML = "";
  ////            }
  ////            if (newMap["IND_MAIDEN_FRST_NAME"] === null || newMap["IND_MAIDEN_FRST_NAME"] === "" || newMap["IND_MAIDEN_FRST_NAME"] === "Select"
  ////                    || newMap["IND_MAIDEN_FRST_NAME"] === "undefined") {
  ////                document.getElementById("IND_MAIDEN_FRST_NAME_SPAN").innerHTML = "Field cannot be empty for Customer " + custNo;
  ////                condCount++;
  ////
  ////            }else{
  ////                document.getElementById("IND_MAIDEN_FRST_NAME_SPAN").innerHTML = "";
  ////            }
  //
  //        }
  //
  //    }

  //====================FATCA VALIDATION================================================================

  if (idName === "FATCA_APPLICABLE") {
    if (idVal === "1") {
      if (
        newMap["CITYOFBIRTH"] === null ||
        newMap["CITYOFBIRTH"] === "" ||
        newMap["CITYOFBIRTH"] === "Select" ||
        newMap["CITYOFBIRTH"] === "undefined"
      ) {
        document.getElementById("CITYOFBIRTH_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("CITYOFBIRTH_SPAN").innerHTML = "";
      }

      if (
        newMap["COUNTRYOFBIRTH"] === null ||
        newMap["COUNTRYOFBIRTH"] === "" ||
        newMap["COUNTRYOFBIRTH"] === "Select" ||
        newMap["COUNTRYOFBIRTH"] === "undefined"
      ) {
        document.getElementById("COUNTRYOFBIRTH_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("COUNTRYOFBIRTH_SPAN").innerHTML = "";
      }

      if (
        newMap["ADD_TYPE_FATCA"] === null ||
        newMap["ADD_TYPE_FATCA"] === "" ||
        newMap["ADD_TYPE_FATCA"] === "Select" ||
        newMap["ADD_TYPE_FATCA"] === "undefined"
      ) {
        document.getElementById("ADD_TYPE_FATCA_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("ADD_TYPE_FATCA_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_ADD_1"] === null ||
        newMap["FATCA_ADD_1"] === "" ||
        newMap["FATCA_ADD_1"] === "Select" ||
        newMap["FATCA_ADD_1"] === "undefined"
      ) {
        document.getElementById("FATCA_ADD_1_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_ADD_1_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_CITY"] === null ||
        newMap["FATCA_CITY"] === "" ||
        newMap["FATCA_CITY"] === "Select" ||
        newMap["FATCA_CITY"] === "undefined"
      ) {
        document.getElementById("FATCA_CITY_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_CITY_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_COUNTRY"] === null ||
        newMap["FATCA_COUNTRY"] === "" ||
        newMap["FATCA_COUNTRY"] === "Select"
      ) {
        document.getElementById("FATCA_COUNTRY_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_COUNTRY_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_STATE"] === null ||
        newMap["FATCA_STATE"] === "" ||
        newMap["FATCA_STATE"] === "Select" ||
        newMap["FATCA_STATE"] === "undefined"
      ) {
        document.getElementById("FATCA_STATE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_STATE_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_PINCODE"] === null ||
        newMap["FATCA_PINCODE"] === "" ||
        newMap["FATCA_PINCODE"] === "Select" ||
        newMap["FATCA_PINCODE"] === "undefined"
      ) {
        document.getElementById("FATCA_PINCODE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_PINCODE_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_FATHERNAME"] === null ||
        newMap["FATCA_FATHERNAME"] === "" ||
        newMap["FATCA_FATHERNAME"] === "Select" ||
        newMap["FATCA_FATHERNAME"] === "undefined"
      ) {
        document.getElementById("FATCA_FATHERNAME_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_FATHERNAME_SPAN").innerHTML = "";
      }

      if (
        newMap["FATCA_ADDRESS_TAX_PURPOSE"] === null ||
        newMap["FATCA_ADDRESS_TAX_PURPOSE"] === "" ||
        newMap["FATCA_ADDRESS_TAX_PURPOSE"] === "Select" ||
        newMap["FATCA_ADDRESS_TAX_PURPOSE"] === "undefined"
      ) {
        document.getElementById("FATCA_ADDRESS_TAX_PURPOSE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("FATCA_ADDRESS_TAX_PURPOSE_SPAN").innerHTML =
          "";
      }
    }
  }

  //POA ISSUE DATE MANDATORY ON PASSPORT AND DRIVING =====================================================

  if (idName === "POA_TYPE") {
    if (idVal === "2" || idVal === "3") {
      if (
        newMap["POA_ISSUE_DATE"] === null ||
        newMap["POA_ISSUE_DATE"] === "" ||
        newMap["POA_ISSUE_DATE"] === "undefined"
      ) {
        document.getElementById("POA_ISSUE_DATE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("POA_ISSUE_DATE_SPAN").innerHTML = "";
      }

      if (
        newMap["POA_EXPIRY_DATE"] === null ||
        newMap["POA_EXPIRY_DATE"] === "" ||
        newMap["POA_EXPIRY_DATE"] === "undefined"
      ) {
        document.getElementById("POA_EXPIRY_DATE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("POA_EXPIRY_DATE_SPAN").innerHTML = "";
      }
    }
  }

  //====================STAFF CUSTOMER VALIDATION=================================================

  if (idName === "SALARYACC_IS_STAFF") {
    if (idVal === "3") {
      $("#EMP_CODE").prop("disabled", false);
      $("#STAFF_ID").prop("disabled", false);
      if (
        newMap["EMP_CODE"] === null ||
        newMap["EMP_CODE"] === "" ||
        newMap["EMP_CODE"] === "undefined"
      ) {
        document.getElementById("EMP_CODE_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("EMP_CODE_SPAN").innerHTML = "";
      }
      if (
        newMap["STAFF_ID"] === null ||
        newMap["STAFF_ID"] === "" ||
        newMap["STAFF_ID"] === "undefined"
      ) {
        document.getElementById("STAFF_ID_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        condCount++;
      } else {
        document.getElementById("STAFF_ID_SPAN").innerHTML = "";
      }
    }
  }

  //========================================================================================

  //==========================MINOR AND SENIOR CITIZEN=================================================================
  if (idName === "IND_DOB") {
    if (idVal !== null && idVal !== "" && idVal !== "undefined") {
      var dob = idVal.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3");
      var start = new Date(dob);
      var end = new Date();
      var age_year = Math.floor((end - start) / 31536000000);
      //            var dobSplit = dob.split("-");
      //            var dobYear = dobSplit[2];
      //            var currentDate = new Date();
      //            var currentYear = currentDate.getFullYear();
      //            var age_year = currentYear - dobYear;
      if (
        $.isInActivities(
          "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
        )
      ) {
        if (age_year < 18) {
          if (
            newMap["GUARDIAN_NAME"] === null ||
            newMap["GUARDIAN_NAME"] === "" ||
            newMap["GUARDIAN_NAME"] === "undefined"
          ) {
            document.getElementById("GUARDIAN_NAME_SPAN").innerHTML =
              "Field cannot be empty for Customer " + custNo;
            condCount++;
          } else {
            document.getElementById("GUARDIAN_NAME_SPAN").innerHTML = "";
          }
          if (
            newMap["PERSNL_RELN_WITH_MINOR"] === null ||
            newMap["PERSNL_RELN_WITH_MINOR"] === "" ||
            newMap["PERSNL_RELN_WITH_MINOR"] === "Select" ||
            newMap["PERSNL_RELN_WITH_MINOR"] === "undefined"
          ) {
            document.getElementById("PERSNL_RELN_WITH_MINOR_SPAN").innerHTML =
              "Field cannot be empty for Customer " + custNo;
            condCount++;
          } else {
            document.getElementById("PERSNL_RELN_WITH_MINOR_SPAN").innerHTML =
              "";
          }
        } else if (age_year >= 60) {
          if (
            newMap["IS_SENIOR_CITIZEN"] === null ||
            newMap["IS_SENIOR_CITIZEN"] === "" ||
            newMap["IS_SENIOR_CITIZEN"] === "Select" ||
            newMap["IS_SENIOR_CITIZEN"] === "undefined"
          ) {
            document.getElementById("IS_SENIOR_CITIZEN_SPAN").innerHTML =
              "Field cannot be empty for Customer " + custNo;
            condCount++;
          } else {
            document.getElementById("IS_SENIOR_CITIZEN_SPAN").innerHTML = "";
          }
        }
      }
    }
  }

  //===============VISA DETAILS=============================================================
}

function validateVisadetails(columnId, ColValue, custNo, newMap) {
  //debugger;
  if (tableLoader.FORM_TYPE === "NRI") {
    var spanName = columnId + "_SPAN";
    if (
      newMap[columnId] === null ||
      newMap[columnId] === "" ||
      newMap[columnId] === undefined
    ) {
      document.getElementById(spanName).innerHTML =
        "Field cannot be empty for Customer " + custNo;
      regexCount++;
    }
  }
}

function validateNonMandatoryFields(columnId, ColValue, custNo, newMap) {
  //debugger;
  var spanName = columnId + "_ERR";
  //=============EMAIL VALIDATION===========================================
  if (
    ColValue !== null &&
    ColValue !== "" &&
    ColValue !== "undefined" &&
    ColValue !== undefined
  ) {
    if (columnId === "IND_EMAIL" || columnId === "NI_CONTACT_EMAIL") {
      var regex = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
      if (!ColValue.match(regex)) {
        document.getElementById(spanName).innerHTML =
          "Enter valid email id for Customer " + custNo;
        regexCount++;
      } else {
        document.getElementById(spanName).innerHTML = "";
      }
    }
    //====================AADHAR VALIDATION ==========================================================
    if (columnId === "IND_AADHAR_NUMBER") {
      var regex = "^[0-9]{12}$";
      if (!ColValue.match(regex)) {
        document.getElementById(spanName).innerHTML =
          "Enter valid aadhar number for Customer " + custNo;
        regexCount++;
      } else {
        document.getElementById(spanName).innerHTML = "";
      }
    }

    //=================PASSPORT VALIDATION===================================================

    if (columnId === "IND_PASSPORT") {
      if ($("#FORM_TYPE").val() !== "NRI" && tableLoader.FORM_TYPE !== "NRI") {
        if (
          $("#IND_PASSPORT").val() !== null &&
          $("#IND_PASSPORT").val() !== ""
        ) {
          var patt = new RegExp("^([A-Z a-z]){1}([0-9]){7}$");
          if (patt.test(ColValue)) {
          } else {
            $("#" + spanName).html(
              "Enter valid passport Number for Customer " + custNo
            );
            regexCount++;
          }
        }
      }
    }
    //================PAN NUMBER============================================================
    if (columnId === "IND_PAN_NUMBER") {
      if (
        $("#IND_PAN_NUMBER").val() !== null &&
        $("#IND_PAN_NUMBER").val() !== ""
      ) {
        var patt = new RegExp("^[A-Z]{5}[0-9]{4}[A-Z]{1}$");
        if ($("#OTHERDETAILS_FORM_SIXTY").prop("checked")) {
        } else {
          if (patt.test(ColValue)) {
          } else {
            $("#" + spanName).html(
              "Enter Valid PAN Number for Customer " + custNo
            );
            regexCount++;
          }
        }
      }
    }

    //==========================MOBILE NUMBER VALIDATION===============================
    if (columnId === "IND_MOBILE") {
      if ($("#FORM_TYPE").val() !== "NRI") {
        var regex = "^[0-9]{10}$";
        if (!ColValue.match(regex)) {
          $("#" + spanName).html(
            "Enter valid mobile number for Customer " + custNo
          );
          regexCount++;
        } else {
          document.getElementById("IND_MOBILE_ERR").innerHTML = "";
        }
      }
    }

    //===========OFF ADDRESS VALIDATION=====================================================
    //===================OFFICE ADDRESS VALIDATION PART ==============================================================
    if (
      columnId === "ADD_LINE1_OFF" ||
      columnId === "ADD_LINE2_OFF" ||
      columnId === "ADD_LINE3_OFF"
    ) {
      if (ColValue !== "" && ColValue !== null) {
        if (
          newMap["COUNTRY_OFF"] === "" ||
          newMap["COUNTRY_OFF"] === null ||
          newMap["COUNTRY_OFF"] === "Select" ||
          newMap["COUNTRY_OFF"] === "undefined"
        ) {
          document.getElementById("COUNTRY_OFF_SPAN").innerHTML =
            "Field cannot be empty for Customer " + custNo;
          regexCount++;
        } else {
          document.getElementById("COUNTRY_OFF_SPAN").innerHTML = "";
        }
        if (
          newMap["STATE_OFF"] === "" ||
          newMap["STATE_OFF"] === null ||
          newMap["STATE_OFF"] === "Select" ||
          newMap["STATE_OFF"] === "undefined"
        ) {
          document.getElementById("STATE_OFF_SPAN").innerHTML =
            "Field cannot be empty for Customer " + custNo;
          regexCount++;
        } else {
          document.getElementById("STATE_OFF_SPAN").innerHTML = "";
        }
        if (
          newMap["CITY_OFF"] === "" ||
          newMap["CITY_OFF"] === null ||
          newMap["CITY_OFF"] === "undefined"
        ) {
          document.getElementById("CITY_OFF_SPAN").innerHTML =
            "Field cannot be empty for Customer " + custNo;
          regexCount++;
        } else {
          document.getElementById("CITY_OFF_SPAN").innerHTML = "";
        }
        if (
          newMap["PINCODE_OFF"] === "" ||
          newMap["PINCODE_OFF"] === null ||
          newMap["PINCODE_OFF"] === "undefined"
        ) {
          document.getElementById("PINCODE_OFF_SPAN").innerHTML =
            "Field cannot be empty for Customer " + custNo;
          regexCount++;
        } else {
          document.getElementById("PINCODE_OFF_SPAN").innerHTML = "";
        }
      }
    }
  }

  //=========================DEDUPE RESULT=============================================================
  if (columnId === "IND_DEDUPE_RESULT") {
    if (newMap["IND_IS_EXISTING"] === "New") {
      if (ColValue === null || ColValue === "") {
        document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML =
          "Field cannot be empty for Customer " + custNo;
        regexCount++;
      } else {
        document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML = "";
      }
    } else {
      document.getElementById("IND_DEDUPE_RESULT_SPAN").innerHTML = "";
    }
  }
}

function insertDateTimeInDB() {
  $.setValue("PROCESSED_BY", $.getUserId());
  var pInstId = $.getProcessInstanceId();
  var actName = $.getActivity();
  var columnName;
  if (actName === "ACO_Case_Initiation") {
    columnName = "SCAN_DATETIME";
  } else if (actName === "ACO_Scanning") {
    columnName = "dvu_datetime";
  }
  //DVU CONDITIONS
  else if (actName === "ACO_DVU" && $("#DECISION_DVU").val() === "Approve") {
    columnName = "maker_datetime";
  } else if (
    actName === "ACO_DVU" &&
    $("#DECISION_DVU").val() === "Raise_Discrepancy"
  ) {
    columnName = "DISCP_DATETIME";
  } else if (
    actName === "ACO_DVU" &&
    $("#DECISION_DVU").val() === "Compliance_Queue"
  ) {
    columnName = "COMP_DATETIME";
  } else if (actName === "ACO_DVU" && $("#DECISION_DVU").val() === "Reject") {
    columnName = "REJECT_DATETIME";
  }

  //MAKER COND
  else if (
    actName === "ACO_Maker" &&
    $("#DECISION_MAKER").val() === "Approve"
  ) {
    columnName = "checker_datetime";
  } else if (
    actName === "ACO_Maker" &&
    $("#DECISION_MAKER").val() === "SEND_BACK"
  ) {
    columnName = "dvu_datetime";
  }

  //CHECKER COND
  else if (
    actName === "ACO_Checker" &&
    $("#DECISION_CHECKER").val() === "Approve"
  ) {
    columnName = "qc_datetime";
  } else if (
    actName === "ACO_Checker" &&
    $("#DECISION_CHECKER").val() === "SEND_BACK"
  ) {
    columnName = "maker_datetime";
  }

  //DISCP COND

  try {
    $.ajax({
      type: "POST",
      url: "../ACO/InsertDateTimeOfAct",
      data:
        "pInstId=" +
        pInstId +
        "&actName=" +
        actName +
        "&columnName=" +
        columnName,
      async: false,
      success: function (data) {
        //debugger;
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception Occured deleting Exception values from DB" + e);
    // alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

var docList = new Object();
function documentMandatory() {
  //debugger;
  var pInstId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/ScanningDocumentMandatory",
      data: "pInstId=" + pInstId,
      async: false,
      success: function (data) {
        //debugger;
        docList = JSON.parse(data);
        //  console.log(docList);
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception Occured deleting Exception values from DB" + e);
    // alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function getValues(tr, newMap) {
  $(tr)
    .find("td")
    .each(function () {
      newMap[$(this).attr("class")] = $(this).text();
    });
  return newMap;
}

var docType = "";
function preSave() {
  debugger;
  $.setValue("FILLED_BY", $.getUserName());
  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_QC") &&
    ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1")
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      //  case  '6':
      //  case  '3':
      //  case  '7':
      case "100":
        $.setValue("TOTAL_UBO", $("#TOTAL_UBO").val());
        if (
          $("#UBO_TABLE tbody tr").length !== parseInt($("#TOTAL_UBO").val())
        ) {
          alert("Total UBO and UBO table details dosen't match.");
          return false;
        }
        var errorCount = validateUBODetailsOnSave(0);
        if (errorCount > 0) {
          return false;
        }
    }
  }
  //New Method

  if ($.isInActivities("ACO_Case_Initiation")) {
    var cifArr = new Array();
    var existingCifArr = new Array();
    if ($.getValue("FORM_TYPE") === "Non Individual") {
      if ($.getValue("NI_EXISTING_CUST") === "Existing") {
        if ($.getValue("CONSTITUTION") !== "8") {
          cifArr[0] = $("#NI_CIF_NUMBER").val();
          existingCifArr[0] = "Existing";
        }
      }
    } else {
      var i = 0;
      $("#CUSTDETAILS_TABLE tbody tr").each(function () {
        var existingCif = $(this).find(".IND_IS_EXISTING").html();
        var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
        cifArr[i] = primaryCif;
        existingCifArr[i] = existingCif;
        i++;
      });
    }
    if (existingCifArr[0] === "Existing") {
      if (countForSave === 0) {
        countForSave++; //1
        var isExist = cbAccountList(cifArr);
        if (isExist.startsWith("Errors")) {
          if (confirm(isExist)) {
            $(".saveProcessInstance").click();
          }
        }
      } else {
        $(".uploadFile").click();
      }
    }
  }
  if ($.isInActivities("ACO_Case_Initiation")) {
    var cifExistArr = new Array();
    if ($("#SCHEME_CODE").val() === "1007") {
      $("#CUSTDETAILS_TABLE tbody tr").each(function () {
        var isExist = $(this).find(".IND_IS_EXISTING").html();
        var empCode = $(this).find(".EMP_CODE").html();
        var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
        cifExistArr[0] = primaryCif;
        cifExistArr[1] = empCode;
        cifExistArr[2] = isExist;
      });
      if (cifExistArr[2] === "Existing") {
        if (cifExistArr[1] !== "") {
          var response = validateLeadNo(cifExistArr);
          if (response.startsWith("Error")) {
            alert(response);
            return false;
          }
        } else {
          alert("Scheme Code is SA Staff But Customer isn't Staff.");
          return false;
        }
      }
    }
  }

  if ($.isInActivities("ACO_Case_Initiation")) {
    //$("#LEAD_CONVERTOR_CODE").val("");
    //$("#LEAD_GENERATOR_CODE").val("");
    if (
      $("#LEAD_CONVERTOR_CODE").val() === "" ||
      $("#LEAD_GENERATOR_CODE").val() === ""
    ) {
      $("#LEAD_CONVERTOR_CODE_SPAN").val("Please Filled the Mandatory Details");
      $("#LEAD_GENERATOR_CODE_SPAN").val("Please Filled the Mandatory Details");
      return false;
    }
  }

  if ($.isInActivities("ACO_QC")) {
    var minorAge = $("#NI_NOMINATIONDET_AGE").val();
    if (minorAge !== "") {
      if ($("#DECISION_QC").val() === "Approve") {
        if (minorAge < 18 && $("#NI_NOMINATIONDET_ISMINOR").val() !== "Yes") {
          alert("Minor value should be Yes");
          return false;
        }
      }
    }
  }

  //SMILE ACC VALIDATION=====================================================================
  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    //debugger;
    if (
      $("#SCHEME_CODE").val() === "1018" ||
      tableLoader.SCHEME_CODE === "1018"
    ) {
      var valueOfNGO = $("#NGO_NO").val();
      var x = "";
      for (var i = 0; i < valueOfNGO.length; i++) {
        x = x + valueOfNGO[i] + "||";
      }
      $.setValue("NGO_NO", x);
      $.setValue("INTEREST_FREQ", $("#INTEREST_FREQ").val());
      var SmileErrorcount = smileAccValidation();
      if (SmileErrorcount === 1) {
        return false;
      }
    }
  }

  var constitutionArrayForPanMandatory = [
    "6",
    "7",
    "3",
    "4",
    "81",
    "82",
    "10",
    "40",
    "41",
    "42",
    "43",
  ];
  var constitutionArrayForCINMandatory = ["6", "7"];
  if ($.isInActivities("ACO_DVU") && $("#DECISION_DVU").val() === "Approve") {
    for (var i = 0; i < constitutionArrayForPanMandatory.length; i++) {
      if (
        $("#CONSTITUTION").val() === constitutionArrayForPanMandatory[i] &&
        $.getValue("NI_PAN_NUMBER") === ""
      ) {
        alert("Pan Number is mandatory for given Constitution");
        return false;
      }
    }
    for (var i = 0; i < constitutionArrayForCINMandatory.length; i++) {
      if (
        $("#CONSTITUTION").val() === constitutionArrayForCINMandatory[i] &&
        $.getValue("NI_COMPANY_ID") === ""
      ) {
        alert("CIN Number is mandatory for given Constitution");
        return false;
      }
    }
  }

  if (
    $.isInActivities("ACO_DVU") &&
    (tableLoader.SCHEME_CODE === "1018" || $("#SCHEME_CODE").val() === "1018")
  ) {
    $("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVUSave");
    $("#IND_PAN_RESULT").addClass("requiredIndiCustTableDVUSave");
  }

  //    if ($.isInActivities("ACO_DVU")) {
  //        if ($("#CONSTITUTION").val() === "1" || $("#CONSTITUTION").val() === "3" || $("#CONSTITUTION").val() === "7" || $("#CONSTITUTION").val() === "6") {
  //            if ($("#NI_GSTIN_NUMBER").val() === "") {
  //                $("#NI_GSTIN_NUMBER_errmsg").html("Field is Mandatory");
  //                alert("GSTIN Number is Mandatory for selected Entity Type");
  //                return false;
  //            }
  //        }
  //    }
  //=========================================================================================================

  if ($.getActivity() === "ACO_Case_Initiation") {
    var condition = $("#SCHEME_CODE" + " option:selected").attr("id");
    $("#SCHEME_CODE_ID").val(condition).addClass("changed");
  }

  if ($.isInActivities("ACO_Scanning")) {
    docType = "_PHOTO_SIGNATURE";
    documentMandatory();
    if (docList.length >= 1) {
      //  console.log("DOCUMENTS : " + docList);
    } else {
      alert("No document uploaded.Please upload documents to proceed further");
      return false;
    }

    var arr = getCurrentDocs();
    var source = [];
    $("#CUSTOMER_NO option").each(function () {
      if ($(this).css("display") !== "none") {
        if (arr.includes($(this).val() + docType)) {
          source.push($(this).val());
        }
      }
    });
    if (source.length > 0) {
      startCrop(source);
    }
  }

  if ($.getActivity() === "ACO_DVU") {
    $("#DVU_COMPLIANCE_LIST").val(complianceReasonSelectedList);
    $("#DVU_COMPLIANCE_LIST").addClass("changed");
    var compReasons = "";
    $("#OTHERDETAILS_DECISION_DVU_DIV")
      .find("input[type='checkbox']")
      .each(function () {
        if ($("#" + $(this).attr("id")).attr("checked")) {
          compReasons = compReasons + $(this).attr("name") + ",";
        }
      });
    $("#DVU_COMPLIANCE_REASONS_SAVE").val(
      compReasons.substring(0, compReasons.length - 1)
    );
    $("#DVU_COMPLIANCE_REASONS_SAVE").addClass("changed");
  }

  if ($.getActivity() === "ACO_Case_Initiation") {
    $("#CUSTOMER_TYPE_NAME").val("ENTITY_1");
    $("#CUSTOMER_TYPE_NAME").addClass("changed");
    $("#RAISED_BY").val($.getUserName());
    $("#RAISED_BY").addClass("changed");
  }

  if ($.isInActivities("ACO_DVU")) {
    //=============REMARKS DATA SAVING==========================
    $("#REMARKS_DVU_USER").val($.getUserName());
    $("#REMARKS_DVU_USER").addClass("changed");
    $("#REMARKS_DVU_DATE").val($.getCurrentDate());
    $("#REMARKS_DVU_DATE").addClass("changed");
  }

  //-------------------------------CASE INITIATION MANDATORY VALIDATION-----------------------------------------------------------
  //============================ INDIVIDUAL  ==========================================================================================
  if (
    ($.getActivity() === "ACO_Case_Initiation" ||
      $.getActivity() === "DEFERRAL_COMPLIANCE" ||
      $.getActivity() === "DEFERRAL_BRANCH") &&
    ($("#FORM_TYPE").val() === "Individual" ||
      $("#FORM_TYPE").val() === "Select" ||
      $("#FORM_TYPE").val() === "" ||
      $("#FORM_TYPE").val() === null ||
      $("#FORM_TYPE").val() === "NRI")
  ) {
    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match.");
      return false;
    }

    try {
      var count = 0;
      var countAcc = 0;
      $(".requiredIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          console.log(idNameVal);
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
                console.log(columnId);
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  console.log($(this).text());
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  console.log($(this).text());
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error();
        }
      });
      if (countAcc > 0) {
        throw new Error();
      }
    } catch (e) {
      alert("Please fill the mandatory details before proceeding");
      return false;
    }
  }
  //Tax Saver FD
  var schemeArrayForTaxSacer = ["3002", "3022", "3023", "3024", "3025", "3026"];
  if (
    $.getActivity() === "ACO_DVU" &&
    schemeArrayForTaxSacer.includes($("#SCHEME_CODE").val())
  ) {
    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var isExist = $(this).find(".IND_IS_EXISTING").html();
      var panNumber = $(this).find(".IND_PAN_NUMBER").html();
      if (
        panNumber === "" ||
        panNumber === "undefined" ||
        panNumber === undefined
      ) {
        alert("PAN Number is mandatory for Tax Saver FD");
        return false;
      }
    });
  }

  if ($.getActivity() === "ACO_Case_Initiation") {
    if ($("#FORM_TYPE").val() === "Non Individual") {
      if (
        $("#ADDNL_FORM_TYPE").val() === "FD" ||
        $("#ADDNL_FORM_TYPE").val() === "RD"
      ) {
        if ($("#FD_MATURITY_VALUE").val() !== "") {
          var maturityValue = parseInt($("#FD_MATURITY_VALUE").val());
          if (maturityValue >= 500000000) {
            if ($("#NI_LEI_CODE").val() === "") {
              alert(
                "Maturity Value is greater than 50 Cr so LEI Code is mandatory"
              );
              $("#NI_LEI_CODE_SPAN").html("Enter the field");
              return false;
            }
          }
        } else {
          alert("Kindly fetch maturity value first");
          return false;
        }
      }
    } else {
      if (
        $("#ADDNL_FORM_TYPE").val() === "FD" ||
        $("#ADDNL_FORM_TYPE").val() === "RD"
      ) {
        if ($("#FD_AMOUNT").val() !== "") {
          var i = 0;
          var panNumberArray = [];
          var formSixtyArray = [];
          var existingArray = [];
          var cifArray = [];
          $("#CUSTDETAILS_TABLE tbody tr").each(function () {
            var panNumber = $(this).find(".IND_PAN_NUMBER").html();
            var formSixty = $(this).find(".OTHERDETAILS_FORM_SIXTY").html();
            var isExist = $(this).find(".IND_IS_EXISTING").html();
            var cif = $(this).find(".IND_CIF_NUMBER").html();
            panNumberArray[i] = panNumber;
            formSixtyArray[i] = formSixty;
            existingArray[i] = isExist;
            cifArray[i] = cif;
            i++;
          });
          if ($("#ADDNL_FORM_TYPE").val() === "RD") {
            if (existingArray[0] === "Existing") {
              if (formSixtyArray[0] === "Y") {
                var totalRDAccount = checkTotalRDAccount(cifArray[0]);
                if (totalRDAccount.startsWith("Error")) {
                  alert(totalRDAccount);
                  return false;
                } else if (parseInt(totalRDAccount) > 5) {
                  alert(
                    "ALREADY 5 RD ACCOUNTS CREATED FOR THIS CUSTOMER. ONE CUSTOMER CANNOT AVAIL MORE THAN 5 ACCOUNTS IN RD"
                  );
                  return false;
                }
              }
            }
          }

          if (existingArray[0] === "Existing") {
            if (formSixtyArray[0] === "Y") {
              if (parseInt($("#FD_AMOUNT").val()) > 50000) {
                alert("Unable to open FD as amount is greater than 50000");
                return false;
              } else if (parseInt($("#FD_AMOUNT").val()) <= 50000) {
                var limitRemain = checkFDRDRemainingAmount(cifArray[0]);
                if (limitRemain.startsWith("Error")) {
                  alert(limitRemain);
                  return false;
                } else {
                  var totalRemain = 500000 - parseInt(limitRemain);
                  var fdAmt = parseInt($("#FD_AMOUNT").val());
                  if (fdAmt < totalRemain) {
                    alert(
                      "PAN/Form 60 is mandatory for booking FD amount exceeding 50,000 per instance or 5 Lakhs in a Financial Year."
                    );
                    return false;
                  }
                }
              }
            }
          } else {
            if (formSixtyArray[0] === "Y") {
              if (parseInt($("#FD_AMOUNT").val()) > 50000) {
                alert(
                  "PAN/Form 60 is mandatory for booking FD amount exceeding 50,000 per instance or 5 Lakhs in a Financial Year."
                );
                return false;
              }
            }
          }
        } else {
          alert("Kindly enter FD/RD amount first");
          return false;
        }
      }
    }
  }

  //========================== NON INDIVIDUAL  ===========================================================================================
  if (
    $.getActivity() === "ACO_Case_Initiation" &&
    $("#FORM_TYPE").val() === "Non Individual"
  ) {
    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match");
      return false;
    }

    try {
      var count = 0;
      var countAcc = 0;
      $(".requiredIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          console.log(idNameVal);
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $(".requiredNonIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          console.log(idNameVal);
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
                console.log(columnId);
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  console.log($(this).text());
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  console.log($(this).text());
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }

            console.log("count ::::: " + count);
            console.log("condCount ::::: " + condCount);
            console.log("regexCount ::::: " + regexCount);
            console.log("countAcc ::::: " + countAcc);
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error();
        }
      });
      if (countAcc > 0) {
        throw new Error();
      }
    } catch (e) {
      alert("Please fill the mandatory details before proceeding");
      return false;
    }
  }

  //=============================================================================================================================

  if ($.isInActivities("ACO_Case_Initiation")) {
    if (
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val()) !==
      $("#CUSTDETAILS_TABLE tbody tr").length
    ) {
      alert(
        "Total Account Holders do not match with the number of customer entries"
      );
      return false;
    }
  }

  //=============================DISCREPANCY VALIDATION========================================================================
  if ($.getActivity() === "ACO_Discrepancy") {
    var raisedMap = new Object();
    var repliedMap = new Object();
    $("#exceptionBody tr").each(function () {
      var exceptionName = $(this).find("td:eq(1)").text();
      var raisedOrReply = $(this).find("td:eq(3)").text();
      if (raisedOrReply === "RAISED" || raisedOrReply === "RESOLVED") {
        raisedMap[exceptionName] = "RAISED";
      }
      if (raisedOrReply === "REPLIED") {
        repliedMap[exceptionName] = "REPLIED";
      }
    });
    var raisedCount = 0;
    var repliedCount = 0;
    for (var i in raisedMap) {
      raisedCount++;
    }
    for (var i in repliedMap) {
      repliedCount++;
    }

    if (raisedCount !== repliedCount) {
      alert("Please reply to each case raised from DVU.");
      return false;
    }

    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    //        if ($("#CUSTDETAILS_TABLE tbody tr").length < parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())) {
    //            alert("Total account holders and customers added do not match");
    //            return false;
    //        }

    var count = 0;
    regexCount = 0;
    condCount = 0;
    $(".requiredIndiDiscp").each(function () {
      var idName = this.id;
      var idNameVal = $("#" + idName).val();
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        console.log(idNameVal);
        count++;
        validateFormIndi(idName);
      }
    });
    if ($("#FORM_TYPE").val() === "Non Individual") {
      $(".requiredNonIndiDiscp").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          console.log(idNameVal);
          count++;
          validateFormIndi(idName);
        }
      });
    }

    $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
      var newMap = new Object();
      getValues($(this), newMap);
      var Value;
      $(this)
        .find("td")
        .each(function () {
          var columnId = $(this).attr("class");
          if (
            columnId !== "undefined" &&
            columnId !== "" &&
            columnId !== null &&
            columnId !== undefined
          ) {
            if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
              console.log(columnId);
              Value = $(this).text();
              if (
                $(this).text() === null ||
                $(this).text() === "" ||
                $(this).text() === "undefined" ||
                $(this).text() === "Select" ||
                $(this).text() === undefined
              ) {
                console.log($(this).text());
                count++;
                validateFormOnSave(columnId, Value, index + 1);
              } else {
                var spanName = columnId + "_SPAN";
                document.getElementById(spanName).innerHTML = "";
                conditionalValidationOnTableValues(
                  columnId,
                  Value,
                  index + 1,
                  newMap
                );
              }
            }
            if ($("#" + columnId).hasClass("validateIndiCustTable")) {
              Value = $(this).text();
              if (
                $(this).text() !== null &&
                $(this).text() !== "" &&
                $(this).text() !== "undefined" &&
                $(this).text() !== "Select" &&
                $(this).text() !== undefined
              ) {
                console.log($(this).text());
                validateNonMandatoryFields(columnId, Value, index + 1, newMap);
              }
            }
          }
        });
    });
    if (count > 0 || condCount > 0 || regexCount > 0) {
      alert("Please fill the mandatory details");
      return false;
    }
  }

  //===============COMPLIANCE VALIDATION==========================================================
  if ($.getActivity() === "ACO_Compliance") {
    var count = 0;
    $(".requiredIndiComp").each(function () {
      var idName = this.id;
      var idNameVal = $("#" + idName).val();
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        count++;
        validateFormIndi(idName);
      }
    });
    if (count > 0) {
      alert("Please fill the manadatory fields before proceeding");
      return false;
    }
  }

  //---------------------------------------------------------DVU VALIDATION-----------------------------------------------

  if ($.getActivity() === "ACO_DVU") {
    debugger;
    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match.");
      return false;
    }

    var discpCount = 0;
    //ALL CASES RESOLVED OR NOT
    if (
      $("#exceptionTable tr").length > 1 &&
      (tableLoader.DECISION_DISCREPANCY === "Send_To_DVU" ||
        tableLoader.DECISION_DISCREPANCY === "ReScan")
    ) {
      $("#exceptionTable tr").each(function () {
        var status = $(this).find("td:eq(3)").text();
        if (status === "RAISED") {
          discpCount++;
        }
      });
    }

    if (discpCount > 0 && $("#DECISION_DVU").val() === "Approve") {
      alert("Please resolve all raised discrepancy before proceeding");
      return false;
    }

    if (
      $("#exceptionTable tr").length > 1 &&
      $.getValue("DECISION_DISCREPANCY") !== "Send_To_DVU" &&
      $.getValue("DECISION_DISCREPANCY") !== "ReScan"
    ) {
      if ($("#DECISION_DVU").val() !== "Raise_Discrepancy") {
        $("#DECISION_DVU").val("Raise_Discrepancy");
        $("#DECISION_DVU").addClass("changed");
        alert("Exception raised.Please send the case to discrepancy");
        return false;
      }
    } else {
      if ($("#DECISION_DVU").val() === "Raise_Discrepancy") {
        if ($("#exceptionTable tr").length <= 1) {
          alert("Please raise exception to send to Discrepancy");
          return false;
        }
      }
    }
  }

  if ($.getActivity() === "ACO_DVU") {
    if (
      $("#DECISION_DVU").val() === "Approve" ||
      $("#DECISION_DVU").val() === null ||
      $("#DECISION_DVU").val() === "" ||
      $("#DECISION_DVU").val() === "Select" ||
      $("#DECISION_DVU").val() === "Compliance_Queue"
    ) {
      if (
        ($.getActivity() === "ACO_DVU" &&
          ($("#FORM_TYPE").val() === "Individual" ||
            $("#FORM_TYPE").val() === "Select" ||
            $("#FORM_TYPE").val() === "" ||
            $("#FORM_TYPE").val() === "NRI" ||
            $("#FORM_TYPE").val() === null)) ||
        $("#FORM_TYPE").val() === "Non Individual"
      ) {
        //=====================================MANDATORY FIELD VALIDATION========================================================

        try {
          var count = 0;
          regexCount = 0;
          condCount = 0;
          var countAcc = 0;
          $(".requiredIndiDVU").each(function () {
            var idName = this.id;
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
          if ($("#FORM_TYPE").val() === "Non Individual") {
            $(".requiredNonIndiDVU").each(function () {
              var idName = this.id;
              var idNameVal = $("#" + idName).val();
              if (
                idName === "NI_PAN_NUMBER" ||
                idName === "NI_NONIND_PAN_RESULT"
              ) {
                if (
                  $("#FORM_FORTY_NINE_A").is(":checked") ||
                  $("#NI_PAN_LINK").is(":checked")
                ) {
                  idNameVal = "FormFortyAttached";
                }
              }

              if (
                idNameVal === null ||
                idNameVal === "" ||
                idNameVal === "Select" ||
                idNameVal === "undefined"
              ) {
                countAcc++;
                validateFormIndi(idName);
              }
            });
          }

          $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
            var newMap = new Object();
            getValues($(this), newMap);
            var isForm60Attached = $(this)
              .find(".OTHERDETAILS_FORM_SIXTY")
              .text();
            if (
              isForm60Attached === "Y" &&
              $("#SCHEME_CODE").val() !== "1018"
            ) {
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
            }
            var dobValue = $(this).find(".IND_DOB").text();
            var dob = dobValue.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3");
            var start = new Date(dob);
            var end = new Date();
            var age_year = Math.floor((end - start) / 31536000000);
            //MINOR ALONE ACCOUNT - PAN AND FORM SIXTY NOT MANDATORY==================================
            if (
              (tableLoader.ACCOUNT_RELN_CODE === "MA" ||
                tableLoader.SCHEME_CODE === "1016" ||
                age_year < 18) &&
              $.isInActivities("ACO_DVU")
            ) {
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
              $("#OTHERDETAILS_FORM_SIXTY").removeClass(
                "requiredIndiCustTableDVU"
              );
              $("#OTHERDETAILS_FORM_SIXTY").removeClass(
                "requiredIndiCustTableDVUSave"
              );
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVU");
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVU"
              );
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVUSave"
              );
            }

            var Value;
            $(this)
              .find("td")
              .each(function () {
                var columnId = $(this).attr("class");
                if (
                  columnId !== "undefined" &&
                  columnId !== "" &&
                  columnId !== null &&
                  columnId !== undefined
                ) {
                  if (
                    $("#" + columnId).hasClass("requiredIndiCustTableDVUSave")
                  ) {
                    Value = $(this).text();
                    if (
                      $(this).text() === null ||
                      $(this).text() === "" ||
                      $(this).text() === "undefined" ||
                      $(this).text() === "Select" ||
                      $(this).text() === undefined
                    ) {
                      count++;
                      validateFormOnSave(columnId, Value, index + 1);
                    } else {
                      var spanName = columnId + "_SPAN";
                      document.getElementById(spanName).innerHTML = "";
                      conditionalValidationOnTableValues(
                        columnId,
                        Value,
                        index + 1,
                        newMap
                      );
                    }
                  }
                  if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                    Value = $(this).text();
                    if (
                      $(this).text() !== null &&
                      $(this).text() !== "" &&
                      $(this).text() !== "undefined" &&
                      $(this).text() !== "Select" &&
                      $(this).text() !== undefined
                    ) {
                      validateNonMandatoryFields(
                        columnId,
                        Value,
                        index + 1,
                        newMap
                      );
                    }
                  }
                  if (
                    $("#" + columnId).hasClass("validateIndiCustTableForDedupe")
                  ) {
                    Value = $(this).text();
                    validateNonMandatoryFields(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
              });
            $("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVUSave");
            $("#IND_PAN_RESULT").addClass("requiredIndiCustTableDVUSave");
            if (count > 0 || condCount > 0 || regexCount > 0) {
              throw new Error();
            }
          });
          if (countAcc > 0) {
            throw new Error();
          }
        } catch (e) {
          alert("Please fill the mandatory details before proceeding");
          return false;
        }
      }
    }
  }

  if ($.isInActivities("ACO_QC,ACO_Data_Correction")) {
    if (
      ($("#FORM_TYPE").val() === "Individual" ||
        $("#FORM_TYPE").val() === "Non Individual" ||
        $("#FORM_TYPE").val() === "Select" ||
        $("#FORM_TYPE").val() === "" ||
        $("#FORM_TYPE").val() === "NRI" ||
        $("#FORM_TYPE").val() === null) &&
      $("#DECISION_QC").val() !== "SEND_BACK"
    ) {
      //+++++++++++++++++++++++++++++FIXED DEPOSIT CONDITION+++++++++++++++++++++++++++++++++++++++++++++++++

      if (
        $("#CUSTDETAILS_TABLE tbody tr").length <
        parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
      ) {
        alert("Total account holders and customers added do not match.");
        return false;
      }

      try {
        var count = 0;
        regexCount = 0;
        condCount = 0;
        var countAcc = 0;
        $(".requiredIndiChecker").each(function () {
          var idName = this.id;
          var idNameVal = $("#" + idName).val();
          if (
            idNameVal === null ||
            idNameVal === "" ||
            idNameVal === "Select" ||
            idNameVal === "undefined"
          ) {
            countAcc++;
            validateFormIndi(idName);
          }
        });
        if ($("#FORM_TYPE").val() === "Non Individual") {
          $(".requiredNonIndiChecker").each(function () {
            var idName = this.id;
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
          $(".requiredQCNI").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        if ($.getActivity() === "ACO_QC") {
          $(".requiredQC").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        if ($.getActivity() === "ACO_Data_Correction") {
          $(".requiredDataCorr").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        //===============IF MANDATORY FIELDS OF ALL CUST NOT FILLED CHECK==============================
        $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
          var newMap = new Object();
          getValues($(this), newMap);
          var Value;
          $(this)
            .find("td")
            .each(function () {
              var columnId = $(this).attr("class");
              if (
                columnId !== "undefined" &&
                columnId !== "" &&
                columnId !== null &&
                columnId !== undefined
              ) {
                if (
                  $("#" + columnId).hasClass(
                    "requiredIndiCustTableCheckerSave"
                  ) ||
                  $("#" + columnId).hasClass("requiredIndiCustTableQCSave")
                ) {
                  Value = $(this).text();
                  if (
                    $(this).text() === null ||
                    $(this).text() === "" ||
                    $(this).text() === "undefined" ||
                    $(this).text() === "Select" ||
                    $(this).text() === undefined
                  ) {
                    count++;
                    validateFormOnSave(columnId, Value, index + 1);
                  } else {
                    var spanName = columnId + "_SPAN";
                    document.getElementById(spanName).innerHTML = "";
                    conditionalValidationOnTableValues(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
                if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                  Value = $(this).text();
                  if (
                    $(this).text() !== null &&
                    $(this).text() !== "" &&
                    $(this).text() !== "undefined" &&
                    $(this).text() !== "Select" &&
                    $(this).text() !== undefined
                  ) {
                    validateNonMandatoryFields(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
              }
            });
          if (count > 0 || regexCount > 0 || condCount > 0) {
            throw new Error();
          }
        });
        if (countAcc > 0) {
          throw new Error();
        }
      } catch (e) {
        alert("Please fill the mandatory details before proceeding");
        return false;
      }
    }
  }

  if ($.isInActivities("ACO_Compliance")) {
    deleteCompDocDetailsfromDB("delete");
  }

  if ($.isInActivities("ACO_DVU,ACO_Discrepancy")) {
    deleteExceptionFromDB();
  }

  if ($.isInActivities("ACO_QC")) {
    if ($("#DECISION_QC").val() === "Approve") {
      if ($("#NI_FD_IFSC").val() !== $("#NI_FD_IFSC_MATCH").val()) {
        alert("IFSC NOT MATCHED");
        return false;
      }
    }
  }
  //beneficiary details matched
  if ($.isInActivities("ACO_QC")) {
    if (
      $("#SCHEME_CODE").val() === "2018" &&
      $("#DECISION_QC").val() === "Approve" &&
      $("#OTHERDETAILS_BENEFICIARY_MATCH_STATUS").val() === "NO MATCH FOUND"
    ) {
      alert("BENEFICIARY ACCOUNT DETAILS NOT MATCHED");
      return false;
    }
  }

  if ($.isInActivities("ACO_QC")) {
    if (
      $("#SCHEME_CODE").val() === "2018" &&
      $("#DECISION_QC").val() === "Approve" &&
      $("#OTHERDETAILS_BENEFICIARY_MATCH_STATUS").val() === "NO MATCH FOUND"
    ) {
      alert("BENEFICIARY ACCOUNT DETAILS NOT MATCHED");
      return false;
    }
  }

  //Next Installment Date Mandatory
  if ($.isInActivities("ACO_Maker")) {
    if (
      $("#DECISION_MAKER").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#M1_NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        alert("Please select Next Installments Date");
        $("#M1_NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        return false;
      }
    }
    //Mandatory Field Mature of Business 01-02-2024
    if (
      $("#FORM_TYPE").val() === "Non Individual" &&
      $("#DECISION_MAKER").val() === "Approve"
    ) {
      if ($.getValue("M1_NATURE_OF_BUSINESS") === "") {
        alert("Kindly enter nature of business");
        $("#M1_NATURE_OF_BUSINESS_SPAN").html("Kindly enter this field");
        return false;
      }
    }
  }
  if ($.isInActivities("ACO_Checker")) {
    if (
      $("#DECISION_CHECKER").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        $("#NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        alert("Please select Next Installments Date");
        return false;
      }
    }
    //Mandatory Field Mature of Business 01-02-2024
    if (
      $("#FORM_TYPE").val() === "Non Individual" &&
      $("#DECISION_MAKER").val() === "Approve"
    ) {
      if ($.getValue("NATURE_OF_BUSINESS") === "") {
        $("#NATURE_OF_BUSINESS_SPAN").html("Kindly enter this field");
        alert("Kindly enter nature of business");
        return false;
      }
    }
  }
  if ($.isInActivities("ACO_QC")) {
    if (
      $("#DECISION_QC").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        alert("Please select Next Installments Date");
        $("#NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        return false;
      }
    }
  }

  if ($.getActivity("ACO_QC")) {
    if ($("#DECISION_QC").val() === "Approve") {
      if ($("ADDNL_FORM_TYPE").val() === "RD") {
        if ($("NI_RD_AMTONMATURITY").val() === "102") {
          if ($("#NI_RD_SSFBBANKACC").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("IS_TDRD_SUCCESS") === "" ||
              $.getValue("IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        }
      } else if ($("ADDNL_FORM_TYPE").val() === "FD") {
        if (
          $("NI_FD_AMTONMATURITY").val() === "102" &&
          $("NI_FD_INTERESTONMATURITY").val() === "102"
        ) {
          if (
            $("#NI_FD_SSFBPRICIPALACCNO").val() === "" &&
            $("#NI_FD_SSFBINTERESTACCNO").val() === ""
          ) {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        } else if (
          $("NI_FD_AMTONMATURITY").val() !== "102" &&
          $("NI_FD_INTERESTONMATURITY").val() === "102"
        ) {
          if ($("#NI_FD_SSFBINTERESTACCNO").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        } else if (
          $("NI_FD_AMTONMATURITY").val() === "102" &&
          $("NI_FD_INTERESTONMATURITY").val() !== "102"
        ) {
          if ($("#NI_FD_SSFBPRICIPALACCNO").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        }
      }
    }
  }
}

function preDone() {
  debugger;
  addclassmakerchecker();
  try {
    var count = 0;
    var countAcc = 0;
    $(".mandatorycheckermaker").each(function () {
      var idName = this.id;
      var idNameVal = $("#" + idName).val();
      document.getElementById(idName + "_SPAN").innerHTML = "";
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        countAcc++;
      }
    });
    if (countAcc > 0) {
      throw new Error();
    }
  } catch (e) {
    $(".mandatorycheckermaker").each(function () {
      var idName = this.id;
      var idNameVal = $("#" + idName).val();
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        document.getElementById(idName + "_SPAN").innerHTML =
          "Field cannot be empty";
      }
    });
    alert("Please fill the mandatory details before proceeding ahead");
    return false;
  }

  // start added by akash 25/06/2022
  //    if ($.getActivityName() == 'ACO_Maker') {
  //        if ($("#M1_NI_INITIALPAYMENT_MADE").val() === "Yes") {
  //            if ($("#UTRN_CHECK").val() != "AMOUNT MATCHED - " + $("#M1_NI_INITIALPAYMENT_TRANSAMT").val() + "/" + $("#M1_NI_INITIALPAYMENT_TRANSDATE").val() + "/" + $("#M1_NI_INITIALPAYMENT_TRANSID").val()) {
  //                document.getElementById("M1_NI_INITIALPAYMENT_TRANSAMT_SPAN").innerHTML = "Field cannot be empty";
  //                alert("Please fill all mandatory details");
  //                return false;
  //            }
  //        }
  //    } else
  if ($.getActivityName() === "ACO_QC") {
    if ($("#DECISION_QC").val() != "SEND_BACK") {
      if ($("#NI_INITIALPAYMENT_MADE").val() === "Yes") {
        if (
          $("#UTRN_CHECK_CHECKER").val() !=
          "AMOUNT MATCHED " +
            $("#NI_INITIALPAYMENT_TRANSAMT").val() +
            "/" +
            $("#NI_INITIALPAYMENT_TRANSDATE").val() +
            "/" +
            $("#NI_INITIALPAYMENT_TRANSID").val()
        ) {
          document.getElementById("NI_INITIALPAYMENT_TRANSAMT_SPAN").innerHTML =
            "Amount Not Match";
          alert("Please Check Initial Payment Amount Before sending ahead");
          return false;
        }
      }
    }
  }
  // ended added by akash 25/06/2022

  //Old Method
  //    if ($.isInActivities("ACO_Case_Initiation")) {
  //        var cifArr = new Array();
  //        var existingCifArr = new Array();
  //        if ($.getValue("FORM_TYPE") === "Non Individual") {
  //            if ($.getValue("NI_EXISTING_CUST") === "Existing") {
  //                if ($.getValue("CONSTITUTION") !== "8") {
  //                    cifArr[0] = $("#NI_CIF_NUMBER").val();
  //                    existingCifArr[0] = "Existing";
  //                }
  //            }
  //        } else {
  //            var i = 0;
  //            $("#CUSTDETAILS_TABLE tbody tr").each(function () {
  //                var existingCif = $(this).find(".IND_IS_EXISTING").html();
  //                var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
  //                cifArr[i] = primaryCif;
  //                existingCifArr[i] = existingCif;
  //                i++;
  //            });
  //        }
  //        if (existingCifArr[0] === "Existing") {
  //            var isExist = cbAccountList(cifArr);
  //            if (isExist.startsWith("Error")) {
  //                alert(isExist);
  //                return false;
  //            }
  //        }
  //    }

  //New Method

  if ($.isInActivities("ACO_Case_Initiation")) {
    var cifArr = new Array();
    var existingCifArr = new Array();
    if ($.getValue("FORM_TYPE") === "Non Individual") {
      if ($.getValue("NI_EXISTING_CUST") === "Existing") {
        cifArr[0] = $("#NI_CIF_NUMBER").val();
        existingCifArr[0] = "Existing";
      }
    } else {
      var i = 0;
      $("#CUSTDETAILS_TABLE tbody tr").each(function () {
        var existingCif = $(this).find(".IND_IS_EXISTING").html();
        var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
        cifArr[i] = primaryCif;
        existingCifArr[i] = existingCif;
        i++;
      });
    }
    if (existingCifArr[0] === "Existing") {
      if (countForSave === 0) {
        countForSave++; //1
        var isExist = cbAccountList(cifArr);
        if (isExist.startsWith("Errors")) {
          if (confirm(isExist)) {
            var isExistDoc = checkDocumentofApprovalForm();
            // not found so true
            if (isExistDoc === true) {
              alert("You have to upload the Approval Form");
              $(".uploadFile").click();
              return false;
            }
          }
        }
      } else {
        var isExist = cbAccountList(cifArr);
        if (isExist.startsWith("Errors")) {
          var isExistDoc = checkDocumentofApprovalForm();
          // not found so true
          if (isExistDoc === true) {
            alert("You have to upload the Approval Form");
            $(".uploadFile").click();
            return false;
          }
        }
      }
    }
  }

  //Tax Saver FD
  var schemeArrayForTaxSacer = ["3002", "3022", "3023", "3024", "3025", "3026"];
  if (
    $.getActivity() === "ACO_DVU" &&
    schemeArrayForTaxSacer.includes($("#SCHEME_CODE").val())
  ) {
    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var isExist = $(this).find(".IND_IS_EXISTING").html();
      var panNumber = $(this).find(".IND_PAN_NUMBER").html();
      if (
        panNumber === "" ||
        panNumber === "undefined" ||
        panNumber === undefined
      ) {
        alert("PAN Number is mandatory for Tax Saver FD");
        return false;
      }
    });
  }

  if ($.isInActivities("ACO_Case_Initiation")) {
    var cifExistArr = new Array();
    if ($("#SCHEME_CODE").val() === "1007") {
      $("#CUSTDETAILS_TABLE tbody tr").each(function () {
        var isExist = $(this).find(".IND_IS_EXISTING").html();
        var empCode = $(this).find(".EMP_CODE").html();
        var primaryCif = $(this).find(".IND_CIF_NUMBER").html();
        cifExistArr[0] = primaryCif;
        cifExistArr[1] = empCode;
        cifExistArr[2] = isExist;
      });
      if (cifExistArr[2] === "Existing") {
        if (cifExistArr[1] !== "") {
          var response = validateLeadNo(cifExistArr);
          if (response.startsWith("Error")) {
            alert(response);
            return false;
          }
        } else {
          alert("Scheme Code is SA Staff But Customer isn't Staff.");
          return false;
        }
      }
    }
  }

  if ($.isInActivities("ACO_Case_Initiation")) {
    //$("#LEAD_CONVERTOR_CODE").val("");
    //$("#LEAD_GENERATOR_CODE").val("");
    if (
      $("#LEAD_CONVERTOR_CODE").val() === "" ||
      $("#LEAD_GENERATOR_CODE").val() === ""
    ) {
      $("#LEAD_CONVERTOR_CODE_SPAN").val("Please Filled the Mandatory Details");
      $("#LEAD_GENERATOR_CODE_SPAN").val("Please Filled the Mandatory Details");
      return false;
    }
  }

  var constitutionArrayForPanMandatory = [
    "6",
    "7",
    "3",
    "4",
    "81",
    "82",
    "10",
    "40",
    "41",
    "42",
    "43",
  ];
  var constitutionArrayForCINMandatory = ["6", "7"];
  if ($.isInActivities("ACO_DVU") && $("#DECISION_DVU").val() === "Approve") {
    for (var i = 0; i < constitutionArrayForPanMandatory.length; i++) {
      if (
        $("#CONSTITUTION").val() === constitutionArrayForPanMandatory[i] &&
        $.getValue("NI_PAN_NUMBER") === ""
      ) {
        alert("Pan Number is mandatory for given Constitution");
        return false;
      }
    }
    for (var i = 0; i < constitutionArrayForCINMandatory.length; i++) {
      if (
        $("#CONSTITUTION").val() === constitutionArrayForCINMandatory[i] &&
        $.getValue("NI_COMPANY_ID") === ""
      ) {
        alert("CIN Number is mandatory for given Constitution");
        return false;
      }
    }
  }

  if ($.getActivity() === "ACO_Case_Initiation") {
    if ($("#FORM_TYPE").val() === "Non Individual") {
      if (
        $("#ADDNL_FORM_TYPE").val() === "FD" ||
        $("#ADDNL_FORM_TYPE").val() === "RD"
      ) {
        if ($("#FD_MATURITY_VALUE").val() !== "") {
          var maturityValue = parseInt($("#FD_MATURITY_VALUE").val());
          if (maturityValue >= 500000000) {
            if ($("#NI_LEI_CODE").val() === "") {
              alert(
                "Maturity Value is greater than 50 Cr so LEI Code is mandatory"
              );
              $("#NI_LEI_CODE_SPAN").html("Enter the field");
              return false;
            }
          }
        } else {
          alert("Kindly fetch maturity value first");
          return false;
        }
      }
    } else {
      if (
        $("#ADDNL_FORM_TYPE").val() === "FD" ||
        $("#ADDNL_FORM_TYPE").val() === "RD"
      ) {
        if ($("#FD_AMOUNT").val() !== "") {
          var i = 0;
          var panNumberArray = [];
          var formSixtyArray = [];
          var existingArray = [];
          var cifArray = [];
          $("#CUSTDETAILS_TABLE tbody tr").each(function () {
            var panNumber = $(this).find(".IND_PAN_NUMBER").html();
            var formSixty = $(this).find(".OTHERDETAILS_FORM_SIXTY").html();
            var isExist = $(this).find(".IND_IS_EXISTING").html();
            var cif = $(this).find(".IND_CIF_NUMBER").html();
            panNumberArray[i] = panNumber;
            formSixtyArray[i] = formSixty;
            existingArray[i] = isExist;
            cifArray[i] = cif;
            i++;
          });
          if ($("#ADDNL_FORM_TYPE").val() === "RD") {
            if (existingArray[0] === "Existing") {
              if (formSixtyArray[0] === "Y") {
                var totalRDAccount = checkTotalRDAccount(cifArray[0]);
                if (totalRDAccount.startsWith("Error")) {
                  alert(totalRDAccount);
                  return false;
                } else if (parseInt(totalRDAccount) > 5) {
                  alert(
                    "ALREADY 5 RD ACCOUNTS CREATED FOR THIS CUSTOMER. ONE CUSTOMER CANNOT AVAIL MORE THAN 5 ACCOUNTS IN RD"
                  );
                  return false;
                }
              }
            }
          }

          if (existingArray[0] === "Existing") {
            if (formSixtyArray[0] === "Y") {
              if (parseInt($("#FD_AMOUNT").val()) > 50000) {
                alert("Unable to open FD as amount is greater than 50000");
                return false;
              } else if (parseInt($("#FD_AMOUNT").val()) <= 50000) {
                var limitRemain = checkFDRDRemainingAmount(cifArray[0]);
                if (limitRemain.startsWith("Error")) {
                  alert(limitRemain);
                  return false;
                } else {
                  var totalRemain = 500000 - parseInt(limitRemain);
                  var fdAmt = parseInt($("#FD_AMOUNT").val());
                  if (fdAmt < totalRemain) {
                    alert(
                      "PAN/Form 60 is mandatory for booking FD amount exceeding 50,000 per instance or 5 Lakhs in a Financial Year."
                    );
                    return false;
                  }
                }
              }
            }
          } else {
            if (formSixtyArray[0] === "Y") {
              if (parseInt($("#FD_AMOUNT").val()) > 50000) {
                alert(
                  "PAN/Form 60 is mandatory for booking FD amount exceeding 50,000 per instance or 5 Lakhs in a Financial Year."
                );
                return false;
              }
            }
          }
        } else {
          alert("Kindly enter FD/RD amount first");
          return false;
        }
      }
    }
  }

  if ($.isInActivities("ACO_QC")) {
    var minorAge = $("#NI_NOMINATIONDET_AGE").val();
    if (minorAge !== "") {
      if ($("#DECISION_QC").val() === "Approve") {
        if (minorAge < 18 && $("#NI_NOMINATIONDET_ISMINOR").val() !== "Yes") {
          alert("Minor value should be Yes");
          return false;
        }
      }
    }
  }

  $.setValue("FILLED_BY", $.getUserName());
  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_QC") &&
    ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1")
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      // case  '6':
      //  case  '3':
      //  case  '7':
      case "100":
        $.setValue("TOTAL_UBO", $("#TOTAL_UBO").val());
        var errorCount = validateUBODetailsOnSave(0);
        if (errorCount > 0) {
          return false;
        }
    }
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    //debugger;
    if (
      $("#SCHEME_CODE").val() === "1018" ||
      tableLoader.SCHEME_CODE === "1018"
    ) {
      var SmileErrorcount = smileAccValidation();
      if (SmileErrorcount === 1) {
        return false;
      }
    }
  }
  if (
    $.isInActivities("ACO_DVU") &&
    (tableLoader.SCHEME_CODE === "1018" || $("#SCHEME_CODE").val() === "1018")
  ) {
    $("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVUSave");
    $("#IND_PAN_RESULT").addClass("requiredIndiCustTableDVUSave");
  }

  //    if ($.isInActivities("ACO_DVU") && $("DECISION_DVU").val() === "Approve") {
  //        if ($("#CONSTITUTION").val() === "1" || $("#CONSTITUTION").val() === "3" || $("#CONSTITUTION").val() === "7" || $("#CONSTITUTION").val() === "6") {
  //            if ($("#NI_GSTIN_NUMBER").val() === "") {
  //                $("#NI_GSTIN_NUMBER_errmsg").html("Field is Mandatory");
  //                alert("GSTIN Number is Mandatory for selected Entity Type");
  //                return false;
  //            }
  //        }
  //    }
  //=========================================================================================================

  if ($.getActivity() === "ACO_Case_Initiation") {
    var condition = $("#SCHEME_CODE" + " option:selected").attr("id");
    $("#SCHEME_CODE_ID").val(condition).addClass("changed");
  }

  if ($.isInActivities("ACO_Scanning")) {
    docType = "_PHOTO_SIGNATURE";
    documentMandatory();
    if (docList.length >= 1) {
      //  console.log("DOCUMENTS : " + docList);
    } else {
      alert("No document uploaded.Please upload documents to proceed further");
      return false;
    }

    var arr = getCurrentDocs();
    var source = [];
    $("#CUSTOMER_NO option").each(function () {
      if ($(this).css("display") !== "none") {
        if (arr.includes($(this).val() + docType)) {
          source.push($(this).val());
        }
      }
    });
    if (source.length > 0) {
      startCrop(source);
    }
  }

  if (
    $.isInActivities("ACO_Case_Initiation") &&
    $("#WCKIT_TYPE").val() === "1" &&
    $("#ACC_NUM_TYPE").val() === "InstaKit" &&
    !isAccValid
  ) {
    alert("Please validate Account Number First");
    $("#activityFormPanel").scrollTo("#ACCOUNT_NUMBER", 600);
    return false;
  }

  if ($.getActivity() === "ACO_DVU") {
    $("#DVU_COMPLIANCE_LIST").val(complianceReasonSelectedList);
    $("#DVU_COMPLIANCE_LIST").addClass("changed");
    var compReasons = "";
    $("#OTHERDETAILS_DECISION_DVU_DIV")
      .find("input[type='checkbox']")
      .each(function () {
        if ($("#" + $(this).attr("id")).attr("checked")) {
          compReasons = compReasons + $(this).attr("name") + ",";
        }
      });
    $("#DVU_COMPLIANCE_REASONS_SAVE").val(
      compReasons.substring(0, compReasons.length - 1)
    );
    $("#DVU_COMPLIANCE_REASONS_SAVE").addClass("changed");
  }

  if ($.getActivity() === "ACO_Case_Initiation") {
    $("#CUSTOMER_TYPE_NAME").val("ENTITY_1");
    $("#CUSTOMER_TYPE_NAME").addClass("changed");
    $("#RAISED_BY").val($.getUserName());
    $("#RAISED_BY").addClass("changed");
  }
  if ($.getActivity() === "ACO_DVU") {
    $("#DVU_USER").val($.getUserName()).addClass("changed");
  }

  if ($.getActivity() === "ACO_Maker") {
    $("#MAKER_USER").val($.getUserName()).addClass("changed");
  }

  if ($.getActivity() === "ACO_Checker") {
    $("#CHECKER_USER").val($.getUserName()).addClass("changed");
  }
  if ($.getActivity() === "ACO_QC") {
    $("#QC_USER").val($.getUserName()).addClass("changed");
  }

  //-------------------------------CASE INITIATION MANDATORY VALIDATION-----------------------------------------------------------
  //============================ INDIVIDUAL  ==========================================================================================
  if (
    $.getActivity() === "ACO_Case_Initiation" &&
    ($("#FORM_TYPE").val() === "Individual" ||
      $("#FORM_TYPE").val() === "Select" ||
      $("#FORM_TYPE").val() === "" ||
      $("#FORM_TYPE").val() === null ||
      $("#FORM_TYPE").val() === "NRI")
  ) {
    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match");
      return false;
    }

    try {
      var count = 0;
      var countAcc = 0;
      $(".requiredIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error();
        }
      });
      if (countAcc > 0) {
        throw new Error();
      }
    } catch (e) {
      alert("Please fill the mandatory details before proceeding");
      return false;
    }

    //CHECK IF DATA MODIFIED
    if (countForModify > 0) {
      alert("Please modify the customer details before submitting");
      return false;
    }
  }

  //========================== NON INDIVIDUAL  ===========================================================================================
  if (
    $.getActivity() === "ACO_Case_Initiation" &&
    $("#FORM_TYPE").val() === "Non Individual"
  ) {
    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match");
      return false;
    }

    try {
      var count = 0;
      var countAcc = 0;
      $(".requiredIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $(".requiredNonIndi").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          countAcc++;
          validateFormIndi(idName);
        }
      });
      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error();
        }
      });
      if (countAcc > 0) {
        throw new Error();
      }
    } catch (e) {
      alert("Please fill the mandatory details before proceeding");
      return false;
    }

    //CHECK IF DATA MODIFIED
    if (countForModify > 0) {
      alert("Please modify the customer details before submitting");
      return false;
    }
  }

  //=============================================================================================================================

  if ($.isInActivities("ACO_Case_Initiation")) {
    if (
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val()) !==
      $("#CUSTDETAILS_TABLE tbody tr").length
    ) {
      alert(
        "Total Account Holders do not match with the number of customer entries"
      );
      return false;
    }
  }

  //=============================DISCREPANCY VALIDATION========================================================================
  if ($.getActivity() === "ACO_Discrepancy") {
    var raisedMap = new Object();
    var repliedMap = new Object();
    $("#exceptionBody tr").each(function () {
      var exceptionName = $(this).find("td:eq(1)").text();
      var raisedOrReply = $(this).find("td:eq(3)").text();
      if (raisedOrReply === "RAISED" || raisedOrReply === "RESOLVED") {
        raisedMap[exceptionName] = "RAISED";
      }
      if (raisedOrReply === "REPLIED") {
        repliedMap[exceptionName] = "REPLIED";
      }
    });
    var raisedCount = 0;
    var repliedCount = 0;
    for (var i in raisedMap) {
      raisedCount++;
    }
    for (var i in repliedMap) {
      repliedCount++;
    }

    if (raisedCount !== repliedCount) {
      alert("Please reply to each case Raised from DVU.");
      return false;
    }

    //============ACCOUNT NUMBER CONDITIONAL VALIDATION==============================
    if ($("#WCKIT_TYPE").val() === "1") {
      if (
        $("#ACCOUNT_NUMBER").val() === null ||
        $("#ACCOUNT_NUMBER").val() === ""
      ) {
        $("#ACCOUNT_NUMBER").addClass("requiredIndi");
      } else {
        $("#ACCOUNT_NUMBER").removeClass("requiredIndi");
      }
      if (
        $("#ACC_NUM_TYPE").val() === null ||
        $("#ACC_NUM_TYPE").val() === ""
      ) {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      } else {
        $("#ACC_NUM_TYPE").addClass("requiredIndi");
      }
    }

    //        if ($("#CUSTDETAILS_TABLE tbody tr").length < parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())) {
    //            alert("Total account holders and customers added do not match");
    //            return false;
    //        }

    try {
      var count = 0;
      regexCount = 0;
      condCount = 0;
      var countAcc = 0;
      $(".requiredIndiDiscp").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          countAcc++;
          validateFormIndi(idName);
        }
      });
      if ($("#FORM_TYPE").val() === "Non Individual") {
        $(".requiredNonIndiDiscp").each(function () {
          var idName = this.id;
          var idNameVal = $("#" + idName).val();
          if (
            idNameVal === null ||
            idNameVal === "" ||
            idNameVal === "Select" ||
            idNameVal === "undefined"
          ) {
            countAcc++;
            validateFormIndi(idName);
          }
        });
      }

      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if ($("#" + columnId).hasClass("requiredIndiCustTableSave")) {
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error();
        }
      });
      if (countAcc > 0) {
        throw new Error();
      }
    } catch (e) {
      alert("Please fill the mandatory details before proceeding");
      return false;
    }

    //CHECK IF DATA MODIFIED
    if (countForModify > 0) {
      alert("Please modify the customer details before submitting");
      return false;
    }
  }

  //===============COMPLIANCE VALIDATION==========================================================
  if ($.getActivity() === "ACO_Compliance") {
    var count = 0;
    $(".requiredIndiComp").each(function () {
      var idName = this.id;
      var idNameVal = $("#" + idName).val();
      if (
        idNameVal === null ||
        idNameVal === "" ||
        idNameVal === "Select" ||
        idNameVal === "undefined"
      ) {
        count++;
        validateFormIndi(idName);
      }
    });
    if (count > 0) {
      alert("Please fill the manadatory fields before proceeding ");
      return false;
    }
  }

  //---------------------------------------------------------DEFERRAL VALIDATION-----------------------------------------------

  if (
    $.getActivity() === "DEFERRAL_COMPLIANCE" ||
    $.getActivity() === "DEFERRAL_BRANCH"
  ) {
    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert(
        "Total account holders and customers added do not match.Please select customer details"
      );
      return false;
    }
  }

  //---------------------------------------------------------DVU VALIDATION-----------------------------------------------

  if ($.getActivity() === "ACO_DVU") {
    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert(
        "Total account holders and customers added do not match.Please select customer details"
      );
      return false;
    }
    //debugger;
    var discpCount = 0;
    if (
      $("#exceptionTable tr").length > 1 &&
      ($.getValue("DECISION_DISCREPANCY") === "Send_To_DVU" ||
        $.getValue("DECISION_DISCREPANCY") === "ReScan")
    ) {
      $("#exceptionTable tr").each(function () {
        var status = $(this).find("td:eq(3)").text();
        if (status === "RAISED") {
          discpCount++;
        }
      });
    }

    if (discpCount > 0 && $("#DECISION_DVU").val() === "Approve") {
      alert("Please resolve all raised discrepancy before proceeding");
      return false;
    }

    if (
      $("#exceptionTable tr").length > 1 &&
      $.getValue("DECISION_DISCREPANCY") !== "Send_To_DVU" &&
      $.getValue("DECISION_DISCREPANCY") !== "ReScan"
    ) {
      if ($("#DECISION_DVU").val() !== "Raise_Discrepancy") {
        $("#DECISION_DVU").val("Raise_Discrepancy");
        $("#DECISION_DVU").addClass("changed");
        alert("Exception raised.Please send the case to discrepancy");
        return false;
      }
    } else {
      if ($("#DECISION_DVU").val() === "Raise_Discrepancy") {
        if ($("#exceptionTable tr").length <= 1) {
          alert("Please raise exception to send to Discrepancy");
          return false;
        }
      }
    }
  }

  if ($.getActivity() === "ACO_DVU") {
    if (
      $("#DECISION_DVU").val() === "Approve" ||
      $("#DECISION_DVU").val() === null ||
      $("#DECISION_DVU").val() === "" ||
      $("#DECISION_DVU").val() === "Select" ||
      $("#DECISION_DVU").val() === "Compliance_Queue"
    ) {
      if (
        ($.getActivity() === "ACO_DVU" &&
          ($("#FORM_TYPE").val() === "Individual" ||
            $("#FORM_TYPE").val() === "Select" ||
            $("#FORM_TYPE").val() === "" ||
            $("#FORM_TYPE").val() === "NRI" ||
            $("#FORM_TYPE").val() === null)) ||
        $("#FORM_TYPE").val() === "Non Individual"
      ) {
        //=====================================MANDATORY FIELD VALIDATION========================================================

        try {
          var count = 0;
          regexCount = 0;
          condCount = 0;
          var countAcc = 0;
          $(".requiredIndiDVU").each(function () {
            var idName = this.id;
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
          if ($("#FORM_TYPE").val() === "Non Individual") {
            $(".requiredNonIndiDVU").each(function () {
              var idName = this.id;
              var idNameVal = $("#" + idName).val();
              if (
                idName === "NI_PAN_NUMBER" ||
                idName === "NI_NONIND_PAN_RESULT"
              ) {
                if (
                  $("#FORM_FORTY_NINE_A").is(":checked") ||
                  $("#NI_PAN_LINK").is(":checked")
                ) {
                  idNameVal = "FormFortyAttached";
                }
              }
              if (
                idNameVal === null ||
                idNameVal === "" ||
                idNameVal === "Select" ||
                idNameVal === "undefined"
              ) {
                countAcc++;
                validateFormIndi(idName);
              }
            });
          }

          $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
            var newMap = new Object();
            getValues($(this), newMap);
            var isForm60Attached = $(this)
              .find(".OTHERDETAILS_FORM_SIXTY")
              .text();
            if (
              isForm60Attached === "Y" &&
              $("#SCHEME_CODE").val() !== "1018"
            ) {
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
            }

            var dobValue = $(this).find(".IND_DOB").text();
            var dob = dobValue.replace(/(\d{2})-(\d{2})-(\d{4})/, "$2/$1/$3");
            var start = new Date(dob);
            var end = new Date();
            var age_year = Math.floor((end - start) / 31536000000);
            //MINOR ALONE ACCOUNT - PAN AND FORM SIXTY NOT MANDATORY==================================
            if (
              (tableLoader.ACCOUNT_RELN_CODE === "MA" ||
                tableLoader.SCHEME_CODE === "1016" ||
                age_year < 18) &&
              $.isInActivities("ACO_DVU")
            ) {
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
              $("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVUSave");
              $("#OTHERDETAILS_FORM_SIXTY").removeClass(
                "requiredIndiCustTableDVU"
              );
              $("#OTHERDETAILS_FORM_SIXTY").removeClass(
                "requiredIndiCustTableDVUSave"
              );
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVU");
              $("#IND_PAN_RESULT").removeClass("requiredIndiCustTableDVUSave");
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVU"
              );
              $("#IND_LINK_PAN_GUARDIAN").removeClass(
                "requiredIndiCustTableDVUSave"
              );
            }

            var Value;
            $(this)
              .find("td")
              .each(function () {
                var columnId = $(this).attr("class");
                if (
                  columnId !== "undefined" &&
                  columnId !== "" &&
                  columnId !== null &&
                  columnId !== undefined
                ) {
                  if (
                    $("#" + columnId).hasClass("requiredIndiCustTableDVUSave")
                  ) {
                    Value = $(this).text();
                    if (
                      $(this).text() === null ||
                      $(this).text() === "" ||
                      $(this).text() === "undefined" ||
                      $(this).text() === "Select" ||
                      $(this).text() === undefined
                    ) {
                      count++;
                      validateFormOnSave(columnId, Value, index + 1);
                    } else {
                      var spanName = columnId + "_SPAN";
                      document.getElementById(spanName).innerHTML = "";
                      conditionalValidationOnTableValues(
                        columnId,
                        Value,
                        index + 1,
                        newMap
                      );
                    }
                  }
                  if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                    Value = $(this).text();
                    if (
                      $(this).text() !== null &&
                      $(this).text() !== "" &&
                      $(this).text() !== "undefined" &&
                      $(this).text() !== "Select" &&
                      $(this).text() !== undefined
                    ) {
                      validateNonMandatoryFields(
                        columnId,
                        Value,
                        index + 1,
                        newMap
                      );
                    }
                  }
                }
              });
            $("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVUSave");
            $("#IND_PAN_RESULT").addClass("requiredIndiCustTableDVUSave");
            if (count > 0 || condCount > 0 || regexCount > 0) {
              throw new Error();
            }
          });
          if (countAcc > 0) {
            throw new Error();
          }
        } catch (e) {
          alert("Please fill the mandatory details before proceeding");
          return false;
        }

        //CHECK IF DATA MODIFIED
        if (countForModify > 0) {
          alert("Please modify the customer details before submitting");
          return false;
        }
      }

      //=============================NON INDIVIDUAL========================================================================
      //          if ($.getActivity() === "ACO_DVU" && $("#FORM_TYPE").val() === "Non Individual") {
      //            //=====================================MANDATORY FIELD VALIDATION========================================================
      //            var count = 0;
      //            $(".requiredIndiDVU").each(function() {
      //                var idName = this.id;
      //                var idNameVal = $("#" + idName).val();
      //                if (idNameVal === null || idNameVal === "" || idNameVal === "Select" || idNameVal === "undefined") {
      //                    count++;
      //                    validateFormIndi(idName);
      //                }
      //            })
      //
      //            $(".requiredNonIndiDVU").each(function() {
      //                var idName = this.id;
      //                var idNameVal = $("#" + idName).val();
      //                if (idNameVal === null || idNameVal === "" || idNameVal === "Select" || idNameVal === "undefined") {
      //                    count++;
      //                    validateFormIndi(idName);
      //                }
      //            })
      //
      //
      //            if (count > 0) {
      //                return false;
      //            }
      //
      //
      //     //===============IF MANDATORY FIELDS OF ALL CUST NOT FILLED CHECK==============================
      //           dvuCount=0;
      //            $("#CUSTDETAILS_TABLE tbody tr").each(function() {
      //             $(this).find("td").each(function() {
      //                if($(this).attr("type")==="modified") {
      //		 if($(this).text() !== "Y"){
      //                    dvuCount++;
      //                 }
      //                  }
      //            })
      //            })
      //              if(dvuCount !=0){
      //                  if($.getValue("DVU_SAVE_FLAG") !== "Yes"){
      //                     alert("Please fill mandatory details for all customers.");
      //                    return false;
      //                  }
      //              }else if(dvuCount === 0){
      //                $("#DVU_SAVE_FLAG").val("Yes");
      //                $("#DVU_SAVE_FLAG").addClass("changed");
      //              }
      //
      //        }
    }
  }

  //---------------------------------------MAKER VALIDATION-------------------------------------------------------------------------
  if (
    $.getActivity() === "ACO_Maker" &&
    ($("#FORM_TYPE").val() === "Individual" ||
      $("#FORM_TYPE").val() === "Select" ||
      $("#FORM_TYPE").val() === "" ||
      $("#FORM_TYPE").val() === "NRI" ||
      $("#FORM_TYPE").val() === null ||
      $("#FORM_TYPE").val() === "Non Individual") &&
    $("#DECISION_MAKER").val() !== "SEND_BACK"
  ) {
    //+++++++++++++++++++++++++++++FIXED DEPOSIT CONDITION+++++++++++++++++++++++++++++++++++++++++++++++++
    //
    //debugger;
    var fdCount = 0;
    if (
      $("#M1_NI_FD_PERIOD_YEARS").val() === "0" &&
      $("#M1_NI_FD_PERIOD_MON").val() === "0" &&
      $("#M1_NI_FD_PERIOD_DAYS").val() === "0"
    ) {
      fdCount++;
    }
    if (fdCount > 0) {
      alert("Period years ,months and days for FD cannot be 0");
      return false;
    }

    var rdCount = 0;
    if (
      $("#M1_NI_RD_PERIOD_YEARS").val() === "0" &&
      $("#M1_NI_RD_PERIOD_MON").val() === "0" &&
      $("#M1_NI_RD_PERIOD_DAYS").val() === "0"
    ) {
      rdCount++;
    }
    if (rdCount > 0) {
      alert("Period years ,months and days for RD cannot be 0");
      return false;
    }

    if (
      $("#CUSTDETAILS_TABLE tbody tr").length <
      parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
    ) {
      alert("Total account holders and customers added do not match");
      return false;
    }

    try {
      console.log("try started");
      var count = 0;
      regexCount = 0;
      condCount = 0;
      var countAcc = 0;
      $(".requiredIndiMaker").each(function () {
        var idName = this.id;
        var idNameVal = $("#" + idName).val();
        if (
          idNameVal === null ||
          idNameVal === "" ||
          idNameVal === "Select" ||
          idNameVal === "undefined"
        ) {
          countAcc++;
          validateFormIndi(idName);
        }
      });
      if ($("#FORM_TYPE").val() === "Non Individual") {
        $(".requiredNonIndiMaker").each(function () {
          var idName = this.id;
          var idNameVal = $("#" + idName).val();
          if (
            idNameVal === null ||
            idNameVal === "" ||
            idNameVal === "Select" ||
            idNameVal === "undefined"
          ) {
            countAcc++;
            validateFormIndi(idName);
          }
        });
      }

      //    console.log("len " + $("#CUSTDETAILS_TABLE tbody tr").length)
      $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
        var newMap = new Object();
        getValues($(this), newMap);
        var Value;
        $(this)
          .find("td")
          .each(function () {
            var columnId = $(this).attr("class");
            if (
              columnId !== "undefined" &&
              columnId !== "" &&
              columnId !== null &&
              columnId !== undefined
            ) {
              if (
                $("#" + columnId).hasClass("requiredIndiCustTableMakerSave")
              ) {
                Value = $(this).text();
                if (
                  $(this).text() === null ||
                  $(this).text() === "" ||
                  $(this).text() === "undefined" ||
                  $(this).text() === "Select" ||
                  $(this).text() === undefined
                ) {
                  count++;
                  validateFormOnSave(columnId, Value, index + 1);
                } else {
                  var spanName = columnId + "_SPAN";
                  document.getElementById(spanName).innerHTML = "";
                  conditionalValidationOnTableValues(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
              if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                Value = $(this).text();
                if (
                  $(this).text() !== null &&
                  $(this).text() !== "" &&
                  $(this).text() !== "undefined" &&
                  $(this).text() !== "Select" &&
                  $(this).text() !== undefined
                ) {
                  validateNonMandatoryFields(
                    columnId,
                    Value,
                    index + 1,
                    newMap
                  );
                }
              }
            }
          });
        if (count > 0 || condCount > 0 || regexCount > 0) {
          throw new Error(
            "Please fill the manadatory fields before proceeding"
          );
          return false;
        }

        validateFatherSpouseName(newMap, index + 1);
      });
      if (countAcc > 0) {
        throw new Error("Please fill the manadatory fields before proceeding");
      }
    } catch (e) {
      alert(" " + e);
      return false;
    }

    //CHECK IF DATA MODIFIED
    if (countForModify > 0) {
      alert("Please modify the customer details before submitting");
      return false;
    }
  }

  ////==============================CHECKER VALIDATION============================================================================

  if ($.isInActivities("ACO_Checker")) {
    if (
      ($("#FORM_TYPE").val() === "Individual" ||
        $("#FORM_TYPE").val() === "Non Individual" ||
        $("#FORM_TYPE").val() === "Select" ||
        $("#FORM_TYPE").val() === "" ||
        $("#FORM_TYPE").val() === "NRI" ||
        $("#FORM_TYPE").val() === null) &&
      $("#DECISION_CHECKER").val() !== "SEND_BACK"
    ) {
      //+++++++++++++++++++++++++++++FIXED DEPOSIT CONDITION+++++++++++++++++++++++++++++++++++++++++++++++++

      var fdCount = 0;
      if (
        $("#NI_FD_PERIOD_YEARS").val() === "0" &&
        $("#NI_FD_PERIOD_MON").val() === "0" &&
        $("#NI_FD_PERIOD_DAYS").val() === "0"
      ) {
        fdCount++;
      }
      if (fdCount > 0) {
        alert("Period years ,months and days for FD cannot be 0");
        return false;
      }

      var rdCount = 0;
      if (
        $("#NI_RD_PERIOD_YEARS").val() === "0" &&
        $("#NI_RD_PERIOD_MON").val() === "0" &&
        $("#NI_RD_PERIOD_DAYS").val() === "0"
      ) {
        rdCount++;
      }
      if (rdCount > 0) {
        alert("Period years ,months and days for RD cannot be 0");
        return false;
      }

      if (
        $("#CUSTDETAILS_TABLE tbody tr").length <
        parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
      ) {
        alert("Total account holders and customers added do not match");
        return false;
      }

      try {
        var count = 0;
        regexCount = 0;
        condCount = 0;
        var countAcc = 0;
        $(".requiredIndiChecker").each(function () {
          var idName = this.id;
          var idNameVal = $("#" + idName).val();
          if (
            idNameVal === null ||
            idNameVal === "" ||
            idNameVal === "Select" ||
            idNameVal === "undefined"
          ) {
            countAcc++;
            validateFormIndi(idName);
          }
        });
        if ($("#FORM_TYPE").val() === "Non Individual") {
          $(".requiredNonIndiChecker").each(function () {
            var idName = this.id;
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        //===============IF MANDATORY FIELDS OF ALL CUST NOT FILLED CHECK==============================
        $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
          var newMap = new Object();
          getValues($(this), newMap);
          var Value;
          $(this)
            .find("td")
            .each(function () {
              var columnId = $(this).attr("class");
              if (
                columnId !== "undefined" &&
                columnId !== "" &&
                columnId !== null &&
                columnId !== undefined
              ) {
                if (
                  $("#" + columnId).hasClass("requiredIndiCustTableCheckerSave")
                ) {
                  Value = $(this).text();
                  if (
                    $(this).text() === null ||
                    $(this).text() === "" ||
                    $(this).text() === "undefined" ||
                    $(this).text() === "Select" ||
                    $(this).text() === undefined
                  ) {
                    count++;
                    validateFormOnSave(columnId, Value, index + 1);
                  } else {
                    var spanName = columnId + "_SPAN";
                    document.getElementById(spanName).innerHTML = "";
                    conditionalValidationOnTableValues(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
                if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                  Value = $(this).text();
                  if (
                    $(this).text() !== null &&
                    $(this).text() !== "" &&
                    $(this).text() !== "undefined" &&
                    $(this).text() !== "Select" &&
                    $(this).text() !== undefined
                  ) {
                    validateNonMandatoryFields(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
              }
            });
          if (count > 0 || regexCount > 0 || condCount > 0) {
            throw new Error(
              "Please fill the manadatory fields before proceeding"
            );
          }

          validateFatherSpouseName(newMap, index + 1);
        });
        if (countAcc > 0) {
          throw new Error(
            "Please fill the manadatory fields before proceeding"
          );
        }
      } catch (e) {
        alert(e);
        return false;
      }

      //CHECK IF DATA MODIFIED
      if (countForModify > 0) {
        alert("Please modify the customer details before submitting");
        return false;
      }
    }
  }

  if ($.isInActivities("ACO_QC,ACO_Data_Correction")) {
    if (
      ($("#FORM_TYPE").val() === "Individual" ||
        $("#FORM_TYPE").val() === "Non Individual" ||
        $("#FORM_TYPE").val() === "Select" ||
        $("#FORM_TYPE").val() === "" ||
        $("#FORM_TYPE").val() === "NRI" ||
        $("#FORM_TYPE").val() === null) &&
      $("#DECISION_QC").val() !== "SEND_BACK"
    ) {
      //+++++++++++++++++++++++++++++FIXED DEPOSIT CONDITION+++++++++++++++++++++++++++++++++++++++++++++++++
      if (
        $("#CUSTDETAILS_TABLE tbody tr").length <
        parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
      ) {
        alert(
          "Total account holders and customers added do not match.Please select customer details"
        );
        return false;
      }

      try {
        var count = 0;
        regexCount = 0;
        condCount = 0;
        var countAcc = 0;
        $(".requiredIndiChecker").each(function () {
          var idName = this.id;
          var idNameVal = $("#" + idName).val();
          if (
            idNameVal === null ||
            idNameVal === "" ||
            idNameVal === "Select" ||
            idNameVal === "undefined"
          ) {
            countAcc++;
            validateFormIndi(idName);
          }
        });
        if ($("#FORM_TYPE").val() === "Non Individual") {
          $(".requiredNonIndiChecker").each(function () {
            var idName = this.id;
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
          $(".requiredQCNI").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        if ($.getActivity() === "ACO_QC") {
          $(".requiredQC").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        if ($.getActivity() === "ACO_Data_Correction") {
          $(".requiredDataCorr").each(function () {
            var idName = $(this).attr("id");
            var idNameVal = $("#" + idName).val();
            if (
              idNameVal === null ||
              idNameVal === "" ||
              idNameVal === "Select" ||
              idNameVal === "undefined"
            ) {
              countAcc++;
              validateFormIndi(idName);
            }
          });
        }

        //===============IF MANDATORY FIELDS OF ALL CUST NOT FILLED CHECK==============================
        $("#CUSTDETAILS_TABLE tbody tr").each(function (index) {
          var newMap = new Object();
          getValues($(this), newMap);
          var Value;
          $(this)
            .find("td")
            .each(function () {
              var columnId = $(this).attr("class");
              if (
                columnId !== "undefined" &&
                columnId !== "" &&
                columnId !== null &&
                columnId !== undefined
              ) {
                if (
                  $("#" + columnId).hasClass(
                    "requiredIndiCustTableCheckerSave"
                  ) ||
                  $("#" + columnId).hasClass("requiredIndiCustTableQCSave")
                ) {
                  Value = $(this).text();
                  if (
                    $(this).text() === null ||
                    $(this).text() === "" ||
                    $(this).text() === "undefined" ||
                    $(this).text() === "Select" ||
                    $(this).text() === undefined
                  ) {
                    count++;
                    validateFormOnSave(columnId, Value, index + 1);
                  } else {
                    var spanName = columnId + "_SPAN";
                    document.getElementById(spanName).innerHTML = "";
                    conditionalValidationOnTableValues(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }

                if ($("#" + columnId).hasClass("validateIndiCustTable")) {
                  Value = $(this).text();
                  if (
                    $(this).text() !== null &&
                    $(this).text() !== "" &&
                    $(this).text() !== "undefined" &&
                    $(this).text() !== "Select" &&
                    $(this).text() !== undefined
                  ) {
                    validateNonMandatoryFields(
                      columnId,
                      Value,
                      index + 1,
                      newMap
                    );
                  }
                }
              }
            });
          if (count > 0 || regexCount > 0 || condCount > 0) {
            throw new Error(
              "Please fill the mandatory details before proceeding"
            );
          }

          validateFatherSpouseName(newMap, index + 1);
        });
        if (countAcc > 0) {
          throw new Error(
            "Please fill the mandatory details before proceeding"
          );
        }
      } catch (e) {
        alert(e);
        return false;
      }

      //CHECK IF DATA MODIFIED
      if (countForModify > 0) {
        alert("Please modify the customer details before submitting");
        return false;
      }
    }
  }

  if ($.isInActivities("ACO_Maker,ACO_Checker,ACO_QC,ACO_DVU")) {
    var decisionId;
    var remarksId;
    var decisionVal;
    var count = 0;
    if ($.getActivity() === "ACO_Maker") {
      decisionId = "DECISION_MAKER";
      remarksId = "REMARKS_MAKER";
      decisionVal = "SEND_BACK";
    } else if ($.getActivity() === "ACO_Checker") {
      decisionId = "DECISION_CHECKER";
      remarksId = "REMARKS_CHECKER";
      decisionVal = "SEND_BACK";
    } else if ($.getActivity() === "ACO_QC") {
      decisionId = "DECISION_QC";
      remarksId = "REMARKS_QC";
      decisionVal = "SEND_BACK";
    }

    if ($("#" + decisionId).val() === decisionVal) {
      var spanName = remarksId + "_SPAN";
      if (
        $("#" + remarksId).val() === null ||
        $("#" + remarksId).val() === ""
      ) {
        document.getElementById(spanName).innerHTML = "Field cannot be empty";
        count++;
      }
    }

    if (
      $.isInActivities("ACO_DVU") &&
      ($("#DECISION_DVU").val() === "Reject" ||
        $("#DECISION_DVU").val() === "Compliance_Queue" ||
        $("#DECISION_DVU").val() === "Raise_Discrepancy")
    ) {
      if ($("#REMARKS_DVU").val() === null || $("#REMARKS_DVU").val() === "") {
        document.getElementById("REMARKS_DVU_SPAN").innerHTML =
          "Field cannot be empty";
        count++;
      }

      if (
        $("#DECISION_DVU").val() === "Compliance_Queue" &&
        $("#2_ID").is(":checked")
      ) {
        if (
          $("#otherValComp").val() === null ||
          $("#otherValComp").val() === ""
        ) {
          document.getElementById("otherValComp_SPAN").innerHTML =
            "Field cannot be empty";
          count++;
        }
      }
    }

    if (count > 0) {
      alert("Please fill the remarks before submitting the case");
      return false;
    }
  }

  if ($.isInActivities("ACO_Compliance")) {
    deleteCompDocDetailsfromDB("delete");
  }

  if ($.isInActivities("ACO_DVU,ACO_Discrepancy")) {
    deleteExceptionFromDB();
  }

  if ($.isInActivities("ACO_QC")) {
    if ($("#DECISION_QC").val() === "Approve") {
      if ($("#NI_FD_IFSC").val() !== $("#NI_FD_IFSC_MATCH").val()) {
        alert("IFSC NOT MATCHED");
        return false;
      }
    }
  }

  //beneficiary details matched
  if ($.isInActivities("ACO_QC")) {
    if (
      $("#SCHEME_CODE").val() === "2018" &&
      $("#DECISION_QC").val() === "Approve" &&
      $("#OTHERDETAILS_BENEFICIARY_MATCH_STATUS").val() === "NO MATCH FOUND"
    ) {
      alert("BENEFICIARY ACCOUNT DETAILS NOT MATCHED");
      return false;
    }
  }

  if ($.isInActivities("ACO_QC")) {
    if (
      $("#SCHEME_CODE").val() === "2018" &&
      $("#DECISION_QC").val() === "Approve" &&
      $("#OTHERDETAILS_BENEFICIARY_MATCH_STATUS").val() === "NO MATCH FOUND"
    ) {
      alert("BENEFICIARY ACCOUNT DETAILS NOT MATCHED");
      return false;
    }
  }

  //Next Installment Date Mandatory
  if ($.isInActivities("ACO_Maker")) {
    if (
      $("#DECISION_MAKER").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#M1_NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        alert("Please select Next Installments Date");
        $("#M1_NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        return false;
      }
    }
    //Mandatory Field Mature of Business 01-02-2024
    if (
      $("#FORM_TYPE").val() === "Non Individual" &&
      $("#DECISION_MAKER").val() === "Approve"
    ) {
      if ($.getValue("M1_NATURE_OF_BUSINESS") === "") {
        alert("Kindly enter nature of business");
        $("#M1_NATURE_OF_BUSINESS_SPAN").html("Kindly enter this field");
        return false;
      }
    }
  }
  if ($.isInActivities("ACO_Checker")) {
    if (
      $("#DECISION_CHECKER").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        alert("Please select Next Installments Date");
        $("#NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        return false;
      }
    }
    //Mandatory Field Mature of Business 01-02-2024
    if (
      $("#FORM_TYPE").val() === "Non Individual" &&
      $("#DECISION_MAKER").val() === "Approve"
    ) {
      if ($.getValue("NATURE_OF_BUSINESS") === "") {
        alert("Kindly enter nature of business");
        $("#NATURE_OF_BUSINESS_SPAN").html("Kindly enter this field");
        return false;
      }
    }
  }
  if ($.isInActivities("ACO_QC")) {
    if (
      $("#DECISION_QC").val() === "Approve" &&
      $("#ADDNL_FORM_TYPE").val() === "RD"
    ) {
      if ($("#NI_RD_NEXTINSTALLMENTDATE").val() === "") {
        alert("Please select Next Installments Date");
        $("#NI_RD_NEXTINSTALLMENTDATE_SPAN").html("Please fill this Field");
        return false;
      }
    }
  }

  if ($.getActivity("ACO_QC")) {
    if ($("#DECISION_QC").val() === "Approve") {
      if ($("ADDNL_FORM_TYPE").val() === "RD") {
        if ($("NI_RD_AMTONMATURITY").val() === "102") {
          if ($("#NI_RD_SSFBBANKACC").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("IS_TDRD_SUCCESS") === "" ||
              $.getValue("IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        }
      } else if ($("ADDNL_FORM_TYPE").val() === "FD") {
        if (
          $("NI_FD_AMTONMATURITY").val() === "102" &&
          $("NI_FD_INTERESTONMATURITY").val() === "102"
        ) {
          if (
            $("#NI_FD_SSFBPRICIPALACCNO").val() === "" &&
            $("#NI_FD_SSFBINTERESTACCNO").val() === ""
          ) {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        } else if (
          $("NI_FD_AMTONMATURITY").val() !== "102" &&
          $("NI_FD_INTERESTONMATURITY").val() === "102"
        ) {
          if ($("#NI_FD_SSFBINTERESTACCNO").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        } else if (
          $("NI_FD_AMTONMATURITY").val() === "102" &&
          $("NI_FD_INTERESTONMATURITY").val() !== "102"
        ) {
          if ($("#NI_FD_SSFBPRICIPALACCNO").val() === "") {
            alert(
              "Please Enter the Account Number and validate the Account Number"
            );
            return false;
          } else {
            if (
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "" ||
              $.getValue("NI_FD_IS_TDRD_SUCCESS") === "ERROR"
            ) {
              alert(
                "Please Validate the SSFB Interest Transfer Account Number"
              );
              return false;
            }
          }
        }
      }
    }
  }
}

function showHideStaffBtn(ele) {
  if ($(ele).val() !== "") {
    $("#addEmployee").show();
  }
}

function deleteExceptionFromDB() {
  var pInstId = $.getProcessInstanceId();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/DeleteExceptionFromDB",
      data: "pInstId=" + pInstId,
      success: function (data) {
        //debugger;
        // console.log(data);
        if (data >= 1) {
          //alert("Successfully deleted from DB");
        } else {
          // alert("Data deletion Failed");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception Occured deleting Exception values from DB" + e);
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function onCheckCopyTableValues(cb, rowId) {
  //debugger;
  document.getElementById("modifyException").disabled = false;
  if ($.getActivity() === "ACO_DVU") {
    document.getElementById("raiseException").disabled = true;
  }
  document.getElementById("updateExceptionButton").disabled = true;
  document.getElementById("clearExceptionButton").disabled = false;
  document.getElementById("undoExceptionButton").disabled = false;
  $("#DESC_COMMENTS").attr("disabled", "true");
  $("#EXCEPTION").attr("disabled", "true");
  var activityName = $.getActivityName();
  var userName = $.getUserName();
  var currentDateTime = new Date();
  var exceptionId = $("#exceptionTable input[type = checkbox]:checked")
    .parent()
    .parent()
    .find("td:nth-child(2)")
    .attr("id");
  var exceptionVal = $("#exceptionTable input[type = checkbox]:checked")
    .parent()
    .parent()
    .find("td:nth-child(2)")
    .html();
  var commentsVal = $("#exceptionTable input[type = checkbox]:checked")
    .parent()
    .parent()
    .find("td:nth-child(3)")
    .html();
  var details = $("#exceptionTable input[type = checkbox]:checked")
    .parent()
    .parent()
    .find("td:nth-child(5)")
    .html();
  $("#EXCEPTION  option[id='" + exceptionId + "']").attr(
    "selected",
    "selected"
  );
  $("#DESCRIPTION").val(exceptionVal);
  $("#EXCEPTION").val(exceptionVal);
  $("#DESC_COMMENTS").val(commentsVal);
  // $("#detailsException").val("");
  $("#detailsMainDiv textarea").val(details);
  if ($("#" + cb).prop("checked")) {
    $("#exceptionBody tr").each(function () {
      var exceptionVal = $.trim($(this).find("td:eq(1)").text());
      $("#" + rowId).addClass("highlightRow");
      $.each($(".highlightRow"), function () {
        $(this).css("background-color", "#e6e6dd");
      });
    });
  } else {
    $("#" + rowId).removeClass("highlightRow");
    $("#" + rowId).addClass("highlightRowBack");
    $.each($(".highlightRowBack"), function () {
      //alert(this.id);
      $(this).css("background-color", "white");
    });
  }

  if ($("#" + cb).prop("checked")) {
    highlightRepliedRow(exceptionVal);
  } else {
    removeHighlightRepliedRow(exceptionVal);
  }
}

function highlightRepliedRow(exceptionVal) {
  //debugger;
  $("#exceptionBodyDiscrepancy tr").each(function () {
    var id = $(this).attr("id");
    var example = $(this).find("td:eq(1)").text();
    if (example === exceptionVal) {
      $(this).css("backgroundColor", "azure");
    }
  });
  $("#exceptionBody tr").each(function () {
    var id = $(this).attr("id");
    var example = $(this).find("td:eq(1)").text();
    if (example === exceptionVal) {
      $(this).css("backgroundColor", "#e6e6dd");
    }
  });
}

function removeHighlightRepliedRow(exceptionVal) {
  //debugger;
  $("#exceptionBodyDiscrepancy tr").each(function () {
    var id = $(this).attr("id");
    var example = $(this).find("td:eq(1)").text();
    if (exceptionVal === null) {
      $(this).css("backgroundColor", "white");
    }
  });
  $("#exceptionBody tr").each(function () {
    var id = $(this).attr("id");
    var example = $(this).find("td:eq(1)").text();
    if (exceptionVal === null) {
      $(this).css("backgroundColor", "white");
    }
  });
}

function PanNumberAccess() {
  if ($("#OTHERDETAILS_FORM_SIXTY").prop("checked")) {
    $("#IND_PAN_NUMBER").prop("disabled", true);
    //$("#IND_PAN_NUMBER").removeClass("requiredIndiCustTableDVU");
    $("#IND_PAN_NUMBER").val("");
    document.getElementById("IND_PAN_NUMBER_SPAN").innerHTML = "";
    document.getElementById("IND_PAN_RESULT_SPAN").innerHTML = "";
  } else {
    $("#IND_PAN_NUMBER").prop("disabled", false);
    //$("#IND_PAN_NUMBER").addClass("requiredIndiCustTableDVU");
  }
}

function copyValuesOfAddress() {
  var passportID = $("#PASSPORT").val();
  var votersID = $("#VOTERID").val();
  var aadharID = $("#AADHARNUMBER").val();
  var drivingID = $("#DRIVINGLICENSE").val();
  var kycNameAddress = $("#KYC_NAME_ADDRESS").val();
  if (kycNameAddress === "PASSPT") {
    if (passportID !== null || passportID !== "Select" || passportID !== "") {
      $("#KYC_NO_ADDRESS").val($("#PASSPORT").val());
    }
  } else if (kycNameAddress === "AADRCD") {
    if (aadharID !== null || aadharID !== "Select" || aadharID !== "") {
      $("#KYC_NO_ADDRESS").val($("#AADHARNUMBER").val());
    }
  } else if (kycNameAddress === "VTERID") {
    if (votersID !== null || votersID !== "Select" || votersID !== "") {
      $("#KYC_NO_ADDRESS").val($("#VOTERID").val());
    }
  } else if (kycNameAddress === "DRIVLI") {
    if (drivingID !== null || drivingID !== "Select" || drivingID !== "") {
      $("#KYC_NO_ADDRESS").val($("#DRIVINGLICENSE").val());
    }
  } else {
    $("#KYC_NO_ADDRESS").val("");
  }
}

function insertComplianceDocDetailsInDB() {
  //debugger;
  $.registerCreateComplex("INSERT_INTO_ACO_COMPLIANCE_DOC_DETAILS")
    .setData(function () {
      //debugger;
      var complexData = new Array();
      $("#PendingDocDatesTableBody tr").each(function () {
        var row = [];
        //debugger;
        var docSubNameId = $(this).find("td:eq(1) input").attr("id");
        var docSubNameVal = $("#" + docSubNameId).val();
        var docDateId = $(this).find("td:eq(2) input").attr("id");
        var dateToInsert = $("#" + docDateId).val();
        var dateToInsertSplit = dateToInsert.split("-");
        var dateToInsertFinal =
          dateToInsertSplit[2] +
          "-" +
          dateToInsertSplit[1] +
          "-" +
          dateToInsertSplit[0];
        if (
          dateToInsert !== null &&
          dateToInsert !== "" &&
          dateToInsert !== "undefined"
        ) {
          var date = new Date(dateToInsertFinal);
          var finalDate = date.toLocaleDateString();
          var fullDate = new Date();
          var twoDigitMonth =
            fullDate.getMonth().length + 1 === 1
              ? fullDate.getMonth() + 1
              : "0" + (fullDate.getMonth() + 1);
          //  var currentDateTime = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
          row.push(userNameForSubmit);
          row.push(docSubNameVal);
          row.push(finalDate);
          row.push(fullDate);
          complexData.push(row);
        }
      });
      if (complexData.length > 0) {
        return complexData;
      } else {
        return null;
      }
    })
    .onComplete(function (generatedPrimaryKeyComplex) {
      console.log("completed");
    });
}

function copyValuesOfID() {
  var passportID = $("#PASSPORT").val();
  var votersID = $("#VOTERID").val();
  var aadharID = $("#AADHARNUMBER").val();
  var drivingID = $("#DRIVINGLICENSE").val();
  var kycName = $("#KYC_NAME").val();
  if (kycName === "1") {
    if (passportID !== null || passportID !== "Select" || passportID !== "") {
      $("#KYC_NO").val($("#PASSPORT").val());
    }
  } else if (kycName === "3") {
    if (aadharID !== null || aadharID !== "Select" || aadharID !== "") {
      $("#KYC_NO").val($("#AADHARNUMBER").val());
    }
  } else if (kycName === "2") {
    // alert(kycName);

    if (votersID !== null || votersID !== "Select" || votersID !== "") {
      // alert(votersID);
      $("#KYC_NO").val($("#VOTERID").val());
    }
  } else if (kycName === "5") {
    if (drivingID !== null || drivingID !== "Select" || drivingID !== "") {
      $("#KYC_NO").val($("#DRIVINGLICENSE").val());
    }
  } else {
    $("#KYC_NO").val("");
  }
}

function getDropDownValuesFromMaster() {
  //FORM TYPE
  $.getMaster("ACO_GET_FORMTYPE", [], function (headers, masterData) {
    for (var i in masterData) {
      //  console.log("GET_WELCOME_KIT master loaded = " + masterData + " typeof mastedata = " + typeof masterData);
      // alert(masterData[i]);
      $("#FORM_TYPE").append(
        "<option id=" +
          masterData[i] +
          " value='" +
          masterData[i] +
          "'>" +
          masterData[i] +
          "</option>"
      );
      //                '<option value="' + masterData[i][0] + '"  actualValue="' + masterData[i][1] + '">' + masterData[i][1] + '</option>';
    }

    $("#FORM_TYPE").val(tableLoader.FORM_TYPE);
    if ($("#FORM_TYPE").val() === "Non Individual") {
      $("#nonIndividualDetailsHead").show();
      $("#nonIndividualDetailsBody").show();
    } else {
      $("#nonIndividualDetailsHead").hide();
      $("#nonIndividualDetailsBody").hide();
    }
  });
}

function jointAccountOnLoad() {
  //debugger;
  if (tableLoader.ACCOUNT_RELN_CODE === "B") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      if ($(this).text() === "1") {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).hide();
      } else {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).show();
      }
    });
  } else if (tableLoader.ACCOUNT_RELN_CODE === "MS") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
      .val("2")
      .prop("disabled", true)
      .addClass("changed");
  } else if (tableLoader.ACCOUNT_RELN_CODE === "MA") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
      .val("1")
      .prop("disabled", true)
      .addClass("changed");
  } else if (tableLoader.ACCOUNT_RELN_CODE === "A") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      if ($(this).text() === "1" || $(this).text() === "2") {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).show();
      } else {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).hide();
      }
    });
  } else {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      $(
        "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" + $(this).text() + "']"
      ).show();
    });
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER").val("").prop("disabled", false);
  }
}

function jointAccount() {
  debugger;
  if ($("#ACCOUNT_RELN_CODE").val() === "B") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      if ($(this).text() === "1") {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).hide();
      } else {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).show();
      }
    });
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER").val("").prop("disabled", false);
  } else if ($("#ACCOUNT_RELN_CODE").val() === "MS") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
      .val("2")
      .prop("disabled", true)
      .addClass("changed");
    document.getElementById("OTHERDETAILS_TOTAL_ACC_HOLDER_SPAN").innerHTML =
      "";
  } else if ($("#ACCOUNT_RELN_CODE").val() === "MA") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER")
      .val("1")
      .prop("disabled", true)
      .addClass("changed");
    document.getElementById("OTHERDETAILS_TOTAL_ACC_HOLDER_SPAN").innerHTML =
      "";
  } else if ($("#ACCOUNT_RELN_CODE").val() === "A") {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      if ($(this).text() === "1" || $(this).text() === "2") {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).show();
      } else {
        $(
          "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" +
            $(this).text() +
            "']"
        ).hide();
      }
    });
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER").val("").prop("disabled", false);
  } else {
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER option").each(function () {
      $(
        "#OTHERDETAILS_TOTAL_ACC_HOLDER option[value= '" + $(this).text() + "']"
      ).show();
    });
    $("#OTHERDETAILS_TOTAL_ACC_HOLDER").val("").prop("disabled", false);
  }
}

function hideShowTabsForFormTypeOnLoad() {
  //debugger;
  var formType = tableLoader.FORM_TYPE;
  if (
    formType === "Individual" ||
    formType === "NRI" ||
    formType === "Select" ||
    formType === "undefined" ||
    formType === null
  ) {
    $(".niDetailsSection")
      .hide()
      .end()
      .find("input,select,textarea")
      .removeAttr($.getActivity().toString().toLowerCase());
    $("#customerDetailsHead").show();
    $("#customerDetails").show();
    $(".taxResidenceNI").hide();
    $("#nonIndividualDetailsHead").hide();
    $("#nonIndividualDetailsBody").hide();
    $("#nonIndividualDetails").remove();
    $("#businessDetails").hide();
    $("#businessDetailsHead").hide();
    $("#businessDetailsDIV").hide();
    $("#personalDetailsHead").show();
    $("#resedentialAddBody").show();
    $("#resedentialAddHead").remove();
    $("#NIRegisteredAddHead").remove();
    $("#NIRegisteredAddBody").hide();
    $("#NIRegisteredAddBody").remove();
    $(".assignRegiOffcAddr").hide();
    $("#HeadFatcaNonInd").hide();
    $("#NonIndiFatcaHead").hide();
    $("#NonIndiFatcaBody").hide();
    $("#NIRegisteredAddHead").hide();
    $("#NIServiceHead").hide();
    $("#NIServiceBody").hide();
    $("#NIGSTHead").hide();
    $("#NIGSTBody").hide();
    $("#NICorrespondenceAddHead").remove();
    $("#NICorrespondenceAddBody").remove();
    $("#NIAddHead").remove();
    $("#NIAddBody").remove();
    $("#NIcorrespondenceDetailHead").remove();
    $("#NIcorrespondenceDetailBody").remove();
    $("#NIcontactDetailHead").remove();
    $("#NIcontactDetailBody").remove();
    $("#NIotherInfoHead").remove();
    $("#NIotherInfoBody").remove();
    $("#IpermanentAddHead").show();
    $("#IpermanentAddBody").show();
    $("#NIcreditFacilitiesBody").remove();
    $("#NIcreditFacilitiesHead").remove();
    $("#NIMaturityRenewalHead").hide();
    $("#NIMaturityRenewalBody").hide();
    $("#NIServiceRequiredHead").remove();
    $("#NIServiceRequiredBody").remove();
    $("#NIGSTDetailsHead").remove();
    $("#NIGSTDetailsBody").remove();
    $("#NINominationHead").show();
    $("#NINominationBody").show();
    $("#NIfatcahead").hide();
    $("#NIfatcaBody").hide();
    $("#TaxNonIndiHead").hide();
    $("#TaxNonIndiBody").hide();
    $("#INDfatcaBody").show();
    $("#INDPartAHead").show();
    $("#NIPartAHead").remove();
    $("#NIPartABody").remove();
    $("#NIoperatingInstructions").remove();
    $("#NIoperatingInstructionsBody").remove();
    $("#resedentialAddHead").remove();
    $("#resedentialAddBody").remove();
    // $("#IND_COUNTRY_CODE").val("+91");
    //$("#IND_COUNTRY_CODE").attr("disabled", true);
    $("#CONSTITUTION").prop("disabled", true).val("").addClass("changed");
  }
  if (formType === "Non Individual") {
    $(".niDetailsSection").show();
    $("#NIcorrespondenceDetailHead").show();
    $("#NIcorrespondenceDetailBody").show();
    $("#NIcontactDetailHead").show();
    $("#NIcontactDetailBody").show();
    $("#NIServiceRequiredHead").show();
    $("#NIServiceRequiredBody").show();
    $("#NIAccFacilitiesHead").show();
    $("#NIAccFacilitiesBody").show();
    $("#NIPartAHead").show();
    $("#NIPartABody").show();
    $("#resedentialAddBody").hide();
    $("#resedentialAddHead").hide();
    $("#NIGSTDetailsBody").show();
    $("#NIGSTDetailsBody").show();
    $("#NIServiceHead").show();
    $("#NIServiceBody").show();
    $("#NIGSTHead").show();
    $("#NIGSTBody").show();
    $("#businessDetails").show();
    $("#TaxNonIndiHead").show();
    $("#TaxNonIndiBody").show();
    $("#HeadFatcaNonInd").show();
    $("#NonIndiFatcaHead").show();
    $("#NonIndiFatcaBody").show();
    $("#NINominationHead").show();
    $("#NINominationBody").show();
    $("#NIoperatingInstructions").show();
    $("#NIoperatingInstructionsBody").show();
    $("#NIfatcahead").show();
    $("#NIfatcaBody").show();
    $("#INDfatcaBody").remove();
    $("#INDPartAHead").remove();
    $("#NIAddHead").show();
    $("#NIAddBody").show();
    $("#NIinitialPaymentHead").show();
    $("#NIinitialPaymentBody").show();
    $("#NIcreditFacilitiesBody").show();
    $("#NIcreditFacilitiesHead").show();
    $("#NIMaturityRenewalHead").show();
    $("#NIMaturityRenewalBody").show();
    $("#NIcorrespondenceDetailHead").show();
    $("#NIcorrespondenceDetailBody").show();
    $("#NIotherInfoHead").show();
    $("#NIotherInfoBody").show();
    $("#NIcontactDetailHead").show();
    $("#NIcontactDetailBody").show();
    $("#NIRegisteredAddHead").show();
    $("#NIRegisteredAddBody").show();
    $("#nonIndividualDetailsHead").show();
    $("#nonIndividualDetailsBody").show();
    $("#businessDetailsHead").show();
    $("#businessDetailsDIV").show();
    $("#Individual_DIV").hide();
    $("#nonIndividualDetails").show();
    //$("#IND_COUNTRY_CODE").val("+91");
    //$("#IND_COUNTRY_CODE").attr("disabled", true);
    if (
      $.isInActivities("ACO_Case_Initiation,ACO_Discrepancy") &&
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      $("#CONSTITUTION").prop("disabled", false);
    } else {
      // $("#CONSTITUTION").prop("disabled", true).val("").addClass("changed");
    }
  }

  if (
    tableLoader.ADDNL_FORM_TYPE === "Current" ||
    $("#ADDNL_FORM_TYPE").val() === "Current"
  ) {
    $("#NISweepHead").show();
    $("#NISweepBody").show();
  } else {
    $("#NISweepHead").hide();
    $("#NISweepBody").hide();
  }

  if (tableLoader.ADDNL_FORM_TYPE === "FD") {
    $("#accLevelFacilityHead").hide();
    $("#accLevelFacilityBody").hide();
  } else {
    $("#accLevelFacilityHead").show();
    $("#accLevelFacilityBody").show();
  }

  if (
    formType === "NRI" &&
    $.isInActivities("ACO_Case_Initiation", "ACO_Discrepancy")
  ) {
    //        $("#IND_COUNTRY_CODE").attr("disabled", false);
    //        $("#IND_COUNTRY_CODE").val("Select");
    $("#CONSTITUTION").prop("disabled", true).val("").addClass("changed");
  }

  if (tableLoader.FORM_TYPE === "Non Individual") {
    if (
      tableLoader.ACCOUNT_RELN_CODE === "F" ||
      tableLoader.ACCOUNT_RELN_CODE === "C"
    ) {
      $("#M1_NI_IS_NOMINATION_AVAILED").addClass("requiredIndiMaker");
      $("#NI_IS_NOMINATION_AVAILED").addClass("requiredIndiChecker");
      $(".nominationDetails,.nominationDetailsAvail").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", false);
      });
    } else {
      $("#M1_NI_IS_NOMINATION_AVAILED").removeClass("requiredIndiMaker");
      $("#NI_IS_NOMINATION_AVAILED").removeClass("requiredIndiChecker");
      $(".nominationDetails,.nominationDetailsAvail").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", true);
      });
    }
  }

  //===================INITIAL PAYMENT DETAILS====================================
  if ($.isInActivities("ACO_Maker")) {
    if (tableLoader.M1_NI_INITIALPAYMENT_MADE === "Yes") {
      $(".initPayment").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", false);
      });
    } else {
      $(".initPayment").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", true);
      });
    }
  }

  if (
    $.isInActivities(
      "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    if (tableLoader.NI_INITIALPAYMENT_MADE === "Yes") {
      $(".initPayment").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", false);
      });
    } else {
      $(".initPayment").each(function () {
        var id = $(this).attr("id");
        $("#" + id).attr("disabled", true);
      });
    }
  }

  //============MAKER AND CHECKER - FORM SELECTION

  if ($.isInActivities("ACO_Maker,ACO_Case_Initiation,ACO_DVU,ACO_Scanning")) {
    $(".maker2Form").remove();
  } else if (
    $.isInActivities(
      "ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    $(".maker1Form").remove();
  }

  if ($.getActivity() === "ACO_Case_Initiation") {
    jointAccountOnLoad();
  }

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    disableBankDetailsOnLoad();
  }

  //MINOR DETAILS SHOW

  var dob = $("#IND_DOB").val();
  if (dob) {
    var dobSplit = dob.split("-");
    var dobYear = dobSplit[2];
    var currentDate = new Date();
    var currentYear = currentDate.getFullYear();
    if (currentYear - dobYear > 18) {
      $("#minorDetailsDiv").hide();
    } else {
      $("#minorDetailsDiv").show();
    }
  }

  //CHANGES - 31/03/2021

  if (formType === "NRI") {
    $("#ADDNL_FORM_TYPE option[value='RD']").hide();
    $("#ADDNL_FORM_TYPE option[value='Current']").hide();
    //  $("#ADDNL_FORM_TYPE option[value='Savings']").hide();//comment By Vikas
  } else {
    //$("#ADDNL_FORM_TYPE").val("").attr("disabled", false);
    $("#ADDNL_FORM_TYPE option[value='RD']").show();
    $("#ADDNL_FORM_TYPE option[value='Current']").show();
    //  $("#ADDNL_FORM_TYPE option[value='Savings']").show();//comment By Vikas
  }
}

function mandatoryCif(idName) {
  //debugger;
  if ($("#" + idName).prop("checked")) {
    if (
      $("#NI_PROPRIETOR_CIF").val() === null ||
      $("#NI_PROPRIETOR_CIF").val() === ""
    ) {
      document.getElementById("NI_PROPRIETOR_CIF_SPAN").innerHTML =
        "Field cannot be empty";
      $("#NI_PROPRIETOR_CIF").addClass("requiredIndiDVU");
    }
  } else {
    document.getElementById("NI_PROPRIETOR_CIF_SPAN").innerHTML = "";
    $("#NI_PROPRIETOR_CIF").removeClass("requiredIndiDVU");
  }
}

function copyAddress() {
  //debugger;
  if ($("#PERM_SAME_RES").prop("checked")) {
    if ($("#COUNTRY_PERM").val() === null || $("#COUNTRY_PERM").val() === "") {
      $("#STATE_PERM").append($("#STATE_RESI").html());
    }

    $("#ADD_LINE1_PERM")
      .val($("#ADDRESS_LINE1_RESI").val())
      .prop("disabled", true);
    if (
      $("#ADD_LINE1_PERM").val() !== null &&
      $("#ADD_LINE1_PERM").val() !== ""
    ) {
      document.getElementById("ADD_LINE1_PERM_SPAN").innerHTML = "";
    }
    $("#ADD_LINE2_PERM")
      .val($("#ADDRESS_LINE2_RESI").val())
      .prop("disabled", true);
    $("#ADD_LINE3_PERM")
      .val($("#ADDRESS_LINE3_RESI").val())
      .prop("disabled", true);
    $("#LANDMARK_PERM").val($("#LANDMARK_RESI").val()).prop("disabled", true);
    $("#PO_PERM").val($("#PO_RESI").val()).prop("disabled", true);
    $("#PS_PERM").val($("#PS_RESI").val()).prop("disabled", true);
    $("#TALUKA_PERM").val($("#TALUKA_RESI").val()).prop("disabled", true);
    $("#DISTRICT_PERM").val($("#DISTRICT_RESI").val()).prop("disabled", true);
    $("#COUNTRY_PERM").val($("#COUNTRY_RESI").val()).prop("disabled", true);
    if ($("#COUNTRY_PERM").val() !== null && $("#COUNTRY_PERM").val() !== "") {
      document.getElementById("COUNTRY_PERM_SPAN").innerHTML = "";
    }
    $("#STATE_PERM").val($("#STATE_RESI").val()).prop("disabled", true);
    if ($("#STATE_PERM").val() !== null && $("#STATE_PERM").val() !== "") {
      document.getElementById("STATE_PERM_SPAN").innerHTML = "";
    }
    $("#CITY_PERM").val($("#CITY_RESI").val()).prop("disabled", true);
    if ($("#CITY_PERM").val() !== null && $("#CITY_PERM").val() !== "") {
      document.getElementById("CITY_PERM_SPAN").innerHTML = "";
    }
    $("#PINCODE_PERM").val($("#PINCODE_RESI").val()).prop("disabled", true);
    if ($("#PINCODE_PERM").val() !== null && $("#PINCODE_PERM").val() !== "") {
      document.getElementById("PINCODE_PERM_SPAN").innerHTML = "";
    }
  } else {
    $("#ADD_LINE1_PERM").val("").prop("disabled", false);
    $("#ADD_LINE2_PERM").val("").prop("disabled", false);
    $("#ADD_LINE3_PERM").val("").prop("disabled", false);
    $("#LANDMARK_PERM").val("").prop("disabled", false);
    $("#PO_PERM").val("").prop("disabled", false);
    $("#PS_PERM").val("").prop("disabled", false);
    $("#TALUKA_PERM").val("").prop("disabled", false);
    $("#DISTRICT_PERM").val("").prop("disabled", false);
    $("#COUNTRY_PERM").val("").prop("disabled", false);
    $("#STATE_PERM").val("").prop("disabled", false);
    $("#CITY_PERM").val("").prop("disabled", false);
    $("#PINCODE_PERM").val("").prop("disabled", false);
  }
}

function hideShowTabsForFormType() {
  //debugger;
  var formType = $("#FORM_TYPE").val();
  if (
    formType === "Individual" ||
    formType === "NRI" ||
    formType === "Select" ||
    formType === "undefined" ||
    formType === null
  ) {
    $(".niDetailsSection")
      .hide()
      .end()
      .find("input,select,textarea")
      .removeAttr($.getActivity().toString().toLowerCase());
    $("#customerDetailsHead").show();
    $("#customerDetails").show();
    $(".taxResidenceNI").hide();
    $("#nonIndividualDetailsHead").hide();
    $("#HeadFatcaNonInd").hide();
    $("#nonIndividualDetailsBody").hide();
    $("#nonIndividualDetails").remove();
    $("#businessDetailsHead").hide();
    $("#businessDetails").hide();
    $("#businessDetailsDIV").hide();
    $("#personalDetailsHead").show();
    $("#resedentialAddBody").show();
    $("#resedentialAddHead").remove();
    $("#NIRegisteredAddHead").remove();
    $("#NIRegisteredAddBody").hide();
    $("#NIRegisteredAddBody").remove();
    $(".assignRegiOffcAddr").hide();
    // $("#NIcorrespondenceDetailBody").hide();
    //$("#NIcorrespondenceDetailBody").hide();
    $("#NIRegisteredAddHead").hide();
    $("#NICorrespondenceAddHead").remove();
    $("#NICorrespondenceAddBody").remove();
    $("#NIAddHead").remove();
    $("#NIAddBody").remove();
    $("#NIcorrespondenceDetailHead").remove();
    $("#NIcorrespondenceDetailBody").remove();
    $("#NIcontactDetailHead").remove();
    $("#NIcontactDetailBody").remove();
    $("#NIotherInfoHead").remove();
    $("#NIotherInfoBody").remove();
    $("#IpermanentAddHead").show();
    $("#IpermanentAddBody").show();
    $("#NIcreditFacilitiesBody").remove();
    $("#NIcreditFacilitiesHead").remove();
    //        $("#NIRecurringDepositBody").hide();
    //        $("#NIRecurringDepositHead").hide();
    $("#NIMaturityRenewalHead").hide();
    $("#NIMaturityRenewalBody").hide();
    $("#TaxNonIndiHead").hide();
    $("#TaxNonIndiBody").hide();
    //        $("#NIFDBody").hide();
    //        $("#NIFDHead").hide();

    //        $("#NIAccFacilitiesHead").hide();
    //        $("#NIAccFacilitiesBody").hide();
    $("#NIServiceRequiredHead").remove();
    $("#NIServiceRequiredBody").remove();
    $("#NIGSTDetailsHead").remove();
    $("#NIGSTDetailsBody").remove();
    //        $("#NIinitialPaymentHead").hide();
    //        $("#NIinitialPaymentBody").hide();
    $("#NINominationHead").show();
    $("#NINominationBody").show();
    $("#NIfatcahead").remove();
    $("#NIfatcaBody").remove();
    $("#INDfatcaBody").show();
    $("#INDPartAHead").show();
    $("#NIPartAHead").remove();
    $("#INDfatcaBody").show();
    $("#INDPartAHead").show();
    $("#NIPartABody").remove();
    $("#NIoperatingInstructions").remove();
    $("#NIoperatingInstructionsBody").remove();
    $("#resedentialAddHead").remove();
    $("#resedentialAddBody").remove();
    //$("#IND_COUNTRY_CODE").val("+91");
    //$("#IND_COUNTRY_CODE").attr("disabled", true);
    $("#CONSTITUTION").prop("disabled", true).val("");
    document.getElementById("CONSTITUTION_SPAN").innerHTML = "";
  }
  if (formType === "Non Individual") {
    $(".niDetailsSection").show();
    $("#HeadFatcaNonInd").show();
    $("#NIcorrespondenceDetailHead").show();
    $("#NIcorrespondenceDetailBody").show();
    $("#NIcontactDetailHead").show();
    $("#NIcontactDetailBody").show();
    $("#NIServiceRequiredHead").show();
    $("#NIServiceRequiredBody").show();
    $("#NIAccFacilitiesHead").show();
    $("#NIAccFacilitiesBody").show();
    $("#NIPartAHead").show();
    $("#NIPartABody").show();
    $("#resedentialAddBody").hide();
    $("#resedentialAddHead").hide();
    $("#NIGSTDetailsBody").show();
    $("#NIGSTDetailsBody").show();
    $("#TaxNonIndiHead").show();
    $("#TaxNonIndiBody").show();
    //        $("#IpermanentAddHead").hide();
    //        $("#IpermanentAddBody").hide();
    //        $("#personalDetailsHead").hide();
    //        $("#personalDetailsDIV").hide();
    $("#NINominationHead").show();
    $("#NINominationBody").show();
    $("#NIoperatingInstructions").show();
    $("#NIoperatingInstructionsBody").show();
    $("#NIfatcahead").show();
    $("#NIfatcaBody").show();
    $("#INDfatcaBody").remove();
    $("#INDPartAHead").remove();
    $("#NIAddHead").show();
    $("#NIAddBody").show();
    $("#NIinitialPaymentHead").show();
    $("#NIinitialPaymentBody").show();
    $("#NIcreditFacilitiesBody").show();
    $("#NIcreditFacilitiesHead").show();
    //        $("#NIRecurringDepositBody").show();
    //        $("#NIRecurringDepositHead").show();
    $("#NIMaturityRenewalHead").show();
    $("#NIMaturityRenewalBody").show();
    //        $("#NIFDBody").show();
    //        $("#NIFDHead").show();
    $("#NIcorrespondenceDetailHead").show();
    $("#NIcorrespondenceDetailBody").show();
    $("#NIotherInfoHead").show();
    $("#NIotherInfoBody").show();
    $("#NIcontactDetailHead").show();
    $("#NIcontactDetailBody").show();
    $("#NIRegisteredAddHead").show();
    $("#NIRegisteredAddBody").show();
    $("#nonIndividualDetailsHead").show();
    $("#nonIndividualDetailsBody").show();
    $("#businessDetailsHead").show();
    $("#businessDetails").show();
    $("#businessDetailsDIV").show();
    $("#Individual_DIV").hide();
    $("#nonIndividualDetails").show();
    //        $("#customerDetailsHead").hide();
    //        $("#customerDetails").hide();
    //        $("#customerDetailsHead").show();
    //        $("#customerDetails").show();
    //        $("#IND_COUNTRY_CODE").val("+91");
    //        $("#IND_COUNTRY_CODE").attr("disabled", true);
    $("#CONSTITUTION").prop("disabled", false);
  }
  if (formType === "NRI") {
    //        $("#IND_COUNTRY_CODE").attr("disabled", false);
    //        $("#IND_COUNTRY_CODE").val("Select");
    $("#CONSTITUTION").prop("disabled", true).val("").addClass("changed");
  }

  if ($.isInActivities("ACO_Case_Initiation")) {
    $("#NI_CIF_NUMBER").prop("disabled", true);
  }

  if (
    tableLoader.ADDNL_FORM_TYPE === "Current" ||
    $("#ADDNL_FORM_TYPE").val() === "Current"
  ) {
    $("#NISweepHead").show();
    $("#NISweepBody").show();
  } else {
    $("#NISweepHead").hide();
    $("#NISweepBody").hide();
  }

  //MAKER AND CHECKER

  if (
    $.isInActivities(
      "ACO_Maker,ACO_Case_Initiation,ACO_DVU,ACO_Scanning,DEFERRAL_BRANCH,DEFERRAL_COMPLIANCE"
    )
  ) {
    $(".maker2Form").remove();
  } else if (
    $.isInActivities(
      "ACO_Checker,ACO_QC,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    $(".maker1Form").remove();
  }

  //CHANGES - 31/03/2021

  if (formType === "NRI") {
    $("#ADDNL_FORM_TYPE").val("");
    $("#ADDNL_FORM_TYPE option[value='RD']").hide();
    $("#ADDNL_FORM_TYPE option[value='Current']").hide();
    //  $("#ADDNL_FORM_TYPE option[value='Savings']").hide();//comment By Vikas
  } else {
    //$("#ADDNL_FORM_TYPE").val("").attr("disabled", false);
    $("#ADDNL_FORM_TYPE").val("");
    $("#ADDNL_FORM_TYPE option[value='RD']").show();
    $("#ADDNL_FORM_TYPE option[value='Current']").show();
    // $("#ADDNL_FORM_TYPE option[value='Savings']").show();//comment By VIkas
  }

  //MINOR DETAILS SHOW

  var dob = $("#IND_DOB").val();
  if (dob) {
    var dobSplit = dob.split("-");
    var dobYear = dobSplit[2];
    var currentDate = new Date();
    var currentYear = currentDate.getFullYear();
    if (currentYear - dobYear > 18) {
      $("#minorDetailsDiv").hide();
    } else {
      $("#minorDetailsDiv").show();
    }
  }
}

//

function insertExceptionIntoDB() {
  //debugger;
  $.registerCreateComplex("INSERT_INTO_ACO_EXCEPTION_DVU")
    .setData(function () {
      //debugger;
      var complexData = new Array();
      if ($.getActivity() === "ACO_DVU") {
        $("#exceptionBody tr").each(function () {
          var row = [];
          var dateToInsert = $(this).find("td:eq(5)").text();
          var dateToInsertSplit = dateToInsert.split("-");
          var dateToInsertFinal =
            dateToInsertSplit[2] +
            "-" +
            dateToInsertSplit[1] +
            "-" +
            dateToInsertSplit[0];
          if (
            dateToInsert !== null &&
            dateToInsert !== "" &&
            dateToInsert !== "undefined"
          ) {
            var date = new Date(dateToInsertFinal);
            var finalDate = date.toLocaleDateString();
            var fullDate = new Date();
            var twoDigitMonth =
              fullDate.getMonth().length + 1 === 1
                ? fullDate.getMonth() + 1
                : "0" + (fullDate.getMonth() + 1);
            //var currentDateTime = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
            row.push($.trim($(this).find("td:eq(4)").text()));
            row.push($.trim($(this).find("td:eq(1)").text()));
            row.push($.trim($(this).find("td:eq(2)").text()));
            row.push($.trim($(this).find("td:eq(3)").text()));
            row.push(finalDate);
            row.push($(this).index() + 1);
            complexData.push(row);
          }
        });
      }
      if ($.getActivity() === "ACO_Discrepancy") {
        $("#exceptionBody tr").each(function () {
          var row = [];
          var dateToInsert = $(this).find("td:eq(5)").text();
          var dateToInsertSplit = dateToInsert.split("-");
          var dateToInsertFinal =
            dateToInsertSplit[2] +
            "-" +
            dateToInsertSplit[1] +
            "-" +
            dateToInsertSplit[0];
          if (
            dateToInsert !== null &&
            dateToInsert !== "" &&
            dateToInsert !== "undefined"
          ) {
            var date = new Date(dateToInsertFinal);
            var finalDate = date.toLocaleDateString();
            var fullDate = new Date();
            var twoDigitMonth =
              fullDate.getMonth().length + 1 === 1
                ? fullDate.getMonth() + 1
                : "0" + (fullDate.getMonth() + 1);
            // var currentDateTime = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
            row.push($.trim($(this).find("td:eq(4)").text()));
            row.push($.trim($(this).find("td:eq(1)").text()));
            row.push($.trim($(this).find("td:eq(2)").text()));
            row.push($.trim($(this).find("td:eq(3)").text()));
            row.push(finalDate);
            row.push($.trim($(this).find("td:eq(6)").text()));
            complexData.push(row);
          }
        });
      }

      if (complexData.length > 0) {
        return complexData;
      } else {
        return null;
      }
    })
    .onComplete(function (generatedPrimaryKeyComplex) {
      console.log("completed");
    });
  //    $.registerCreateComplex("INSERT_INTO_ACO_EXCEPTION_DVU_DISCREPANCY").setData(function() {
  //        //debugger;
  //        var complexData = new Array();
  //        $("#exceptionBodyDiscrepancy tr").each(function() {
  //            var row = [];
  //            var fullDate = new Date();
  //            var twoDigitMonth = ((fullDate.getMonth().length + 1) === 1) ? (fullDate.getMonth() + 1) : '0' + (fullDate.getMonth() + 1);
  //            var currentDateTime = fullDate.getFullYear() + "/" + twoDigitMonth + "/" + fullDate.getDate();
  //            row.push($.trim($(this).find('td:eq(4)').text()));
  //            row.push($.trim($(this).find('td:eq(1)').text()));
  //            row.push($.trim($(this).find('td:eq(2)').text()));
  //            row.push($.trim($(this).find('td:eq(3)').text()));
  //            row.push(currentDateTime);
  //            //row.push($.trim( $(this).find('td:eq(4)').text()));
  //            complexData.push(row);
  //        });
  //        if (complexData.length > 0) {
  //            return complexData;
  //        } else {
  //            return null;
  //        }
  //
  //    }).onComplete(function(generatedPrimaryKeyComplex) {
  //        console.log("completed");
  //    });
}

function insertTableDetails(custType) {
  //debugger;
  if (custType === "NI") {
    if ($("#PERSONALDETAILS_ENTITY_NAME").val()) {
      $("#NON_INDIVIDUAL_TBODY").append(
        "<tr rowId='' style='text-align:center;' >" +
          "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' class='radio'/></td>" +
          "<td class='EXISTING_CUST' >" +
          $("#EXISTING_CUST").val() +
          "</td>" +
          "<td class='CIF'>" +
          $("#CIF_NUMBER").val() +
          "</td>" +
          "<td class='ENTITY_NAME' >" +
          $("#PERSONALDETAILS_ENTITY_NAME").val() +
          "</td>" +
          "<td class='TELEPHONE_NUMBER'>" +
          $("#TELEPHONE_NUMBER").val() +
          "</td>" +
          "<td class='ACTION_DATE'>" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='ACTION_BY'>" +
          $.getNTUserName() +
          "</td></tr>"
      );
    } else {
      alert("Please fill all the data");
    }
  } else if (custType === "I") {
    if ($.getActivity() === "ACO_Case_Initiation") {
      $("#INDIVIDUAL_TBODY").append(
        "<tr rowId='' style='text-align:center;' >" +
          "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' class='radio'/></td>" +
          "<td class='IND_IS_EXISTING' >" +
          $("#IND_IS_EXISTING").val() +
          "</td>" +
          "<td class='IND_COUNTRY_CODE'>" +
          $("#IND_COUNTRY_CODE").val() +
          "</td>" +
          "<td class='IND_CKYC_NUMBER' >" +
          $("#IND_CKYC_NUMBER").val() +
          "</td>" +
          "<td class='TITLE' >" +
          $("#TITLE").val() +
          "</td>" +
          "<td class='IND_FIRST_NAME' >" +
          $("#IND_FIRST_NAME").val() +
          "</td>" +
          "<td class='IND_MIDDLE_NAME' >" +
          $("#IND_MIDDLE_NAME").val() +
          "</td>" +
          "<td class='IND_LAST_NAME'>" +
          $("#IND_LAST_NAME").val() +
          "</td>" +
          "<td class='IND_DOB'>" +
          $("#IND_DOB").val() +
          "</td>" +
          "<td class='IND_MOBILE'>" +
          $("#IND_MOBILE").val() +
          "</td>" +
          "<td class='IND_EMAIL'>" +
          $("#IND_EMAIL").val() +
          "</td>" +
          "<td class='IND_RES_PHONE'>" +
          $("#IND_RES_PHONE").val() +
          "</td>" +
          "<td class='SOURCE'>" +
          $("#SOURCE").val() +
          "</td>" +
          "<td class='IND_RELATIONSHIP_CODE'>" +
          $("#IND_RELATIONSHIP_CODE").val() +
          "</td>" +
          "<td class='IND_AEPS'>" +
          $("#IND_AEPS").val() +
          "</td>" +
          "<td class='IND_VPA_ID'>" +
          $("#IND_VPA_ID").val() +
          "</td>" +
          "<td class='IND_BIRTH_CERTIFICATE'>" +
          $("#IND_BIRTH_CERTIFICATE").val() +
          "</td>" +
          "<td class='IND_ONE_CIF_ONE_MOBILE'>" +
          $("#IND_ONE_CIF_ONE_MOBILE").val() +
          "</td>" +
          "<td class='ACTION_DATE'>" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='ACTION_BY'>" +
          $.getNTUserName() +
          "</td></tr>"
      );
    } else {
      $("#INDIVIDUAL_TBODY").append(
        "<tr rowId='' style='text-align:center;' >" +
          "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' class='radio'/></td>" +
          "<td class='EXISTING_CUST' >" +
          $("#EXISTING_CUST").val() +
          "</td>" +
          "<td class='CIF'>" +
          $("#CIF_NUMBER").val() +
          "</td>" +
          "<td class='FIRST_NAME' >" +
          $("#FIRST_NAME").val() +
          "</td>" +
          "<td class='MIDDLE_NAME' >" +
          $("#MIDDLE_NAME").val() +
          "</td>" +
          "<td class='LAST_NAME' >" +
          $("#LAST_NAME").val() +
          "</td>" +
          "<td class='PERSONALDETAILS_RES_PHONE'>" +
          $("#PERSONALDETAILS_RES_PHONE").val() +
          "</td>" +
          "<td class='COUNTRY_CODE'>" +
          $("#COUNTRY_CODE").val() +
          "</td>" +
          "<td class='MOBILE'>" +
          $("#MOBILE").val() +
          "</td>" +
          "<td class='EMAIL'>" +
          $("#EMAIL").val() +
          "</td>" +
          "<td class='DOB'>" +
          $("#DOB").val() +
          "</td>" +
          //                    + "<td class='CKYC_NUMBER'>" + $("#CKYC_NUMBER").val() + "</td>"
          "<td class='SOURCE'>" +
          $("#SOURCE").val() +
          "</td>" +
          "<td class='IND_RELATIONSHIP_CODE'>" +
          $("#IND_RELATIONSHIP_CODE").val() +
          "</td>" +
          "<td class='IND_AEPS'>" +
          $("#IND_AEPS").val() +
          "</td>" +
          "<td class='IND_VPA_ID'>" +
          $("#IND_VPA_ID").val() +
          "</td>" +
          "<td class='IND_BIRTH_CERTIFICATE'>" +
          $("#IND_BIRTH_CERTIFICATE").val() +
          "</td>" +
          "<td class='IND_ONE_CIF_ONE_MOBILE'>" +
          $("#IND_ONE_CIF_ONE_MOBILE").val() +
          "</td>" +
          "<td class='ACTION_DATE'>" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='ACTION_BY'>" +
          $.getNTUserName() +
          "</td></tr>"
      );
    }
  }
}

function insertOIDetails() {
  //debugger;
  $("#OI_TBODY").append(
    "<tr rowId='' style='text-align:center;' >" +
      "<td ><input type='radio' name='radio' class='radio'/></td>" +
      "<td class='FILLED_BY' >" +
      $.getActivityName() +
      "</td>" +
      "<td class='FILLED_DATE' >" +
      $.getCurrentDate().toStringObject("dd-mm-yy") +
      "</td>" +
      "<td class='AUTHORISED_PERSON_MAKER' >" +
      $("#AUTHORISED_PERSON_MAKER").val() +
      "</td>" +
      "<td class='VERIFYING_OFFICIAL'>" +
      $("#VERIFYING_OFFICIAL").val() +
      "</td>" +
      "<td class='OI_DESIGNATION' >" +
      $("#OI_DESIGNATION").val() +
      "</td>" +
      "<td class='CIF_ID'>" +
      $("#CIF_ID").val() +
      "</td>" +
      "<td class='KYC_ID'>" +
      $("#KYC_ID").val() +
      "</td>" +
      "<td class='DIRECTOR_ID_NUMBER'>" +
      $("#DIRECTOR_ID_NUMBER").val() +
      "</td>" +
      "<td class='ADD_LINE1'>" +
      $("#ADD_LINE1").val() +
      "</td>" +
      "<td class='ADD_LINE2'>" +
      $("#ADD_LINE2").val() +
      "</td>" +
      "<td class='ADD_LINE3'>" +
      $("#ADD_LINE3").val() +
      "</td>" +
      "<td class='LANDMARK'>" +
      $("#LANDMARK").val() +
      "</td>" +
      "<td class='PO'>" +
      $("#PO").val() +
      "</td>" +
      "<td class='PS'>" +
      $("#PS").val() +
      "</td>" +
      "<td class='TALUKA'>" +
      $("#TALUKA").val() +
      "</td>" +
      "<td class='DISTRICT'>" +
      $("#DISTRICT").val() +
      "</td>" +
      "<td class='COUNTRY'>" +
      $("#COUNTRY").val() +
      "</td>" +
      "<td class='STATE'>" +
      $("#STATE").val() +
      "</td>" +
      "<td class='CITY'>" +
      $("#CITY").val() +
      "</td>" +
      "<td class='PINCODE'>" +
      $("#PINCODE").val() +
      "</td></tr>"
  );
}

function insertGSTDetails() {
  //debugger;
  var gstCount = 0;
  $(".requiredNonIndiGST").each(function () {
    var id = $(this).attr("id");
    var value = $("#" + id).val();
    var spanName = id + "_SPAN";
    if (value === null || value === "" || value === "Select") {
      gstCount++;
      document.getElementById(spanName).innerHTML = "Field cannot be empty";
    } else {
      document.getElementById(spanName).innerHTML = "";
    }
  });
  if (gstCount > 0) {
    alert("Please fill the mandatory GST details");
  } else {
    $("#GST_TBODY").append(
      "<tr  style='text-align:center;'  >" +
        "<td ><input type='radio' name='GSTradio' class='radio' onclick='fillGSTFields($(this))' /></td>" +
        "<td class='FILLED_BY' >" +
        $.getActivity() +
        "</td>" +
        "<td class='FILLED_DATE' >" +
        $.getCurrentDate().toStringObject("dd-mm-yy") +
        "</td>" +
        "<td class='NI_GST_NUMBER' >" +
        $("#NI_GST_NUMBER").val() +
        "</td>" +
        "<td class='NI_GST_NATUREOFBUSINESS' >" +
        $("#NI_GST_NATUREOFBUSINESS").val() +
        "</td>" +
        "<td class='NI_GST_ADDRLINE1'>" +
        $("#NI_GST_ADDRLINE1").val() +
        "</td>" +
        "<td class='NI_GST_ADDRLINE2' >" +
        $("#NI_GST_ADDRLINE2").val() +
        "</td>" +
        "<td class='NI_GST_ADDRLINE3'>" +
        $("#NI_GST_ADDRLINE3").val() +
        "</td>" +
        "<td class='NI_GST_ADDRLINE4'>" +
        $("#NI_GST_ADDRLINE4").val() +
        "</td>" +
        "<td class='NI_GST_COUNTRY'>" +
        $("#NI_GST_COUNTRY").val() +
        "</td>" +
        "<td class='NI_GST_STATE'>" +
        $("#NI_GST_STATE").val() +
        "</td>" +
        "<td class='NI_GST_CITY'>" +
        $("#NI_GST_CITY").val() +
        "</td>" +
        "<td class='NI_GST_PIN'>" +
        $("#NI_GST_PIN").val() +
        "</td></tr>"
    );
    clearFields();
  }
}

function clearFields() {
  $("#NI_GST_NUMBER").val("");
  $("#NI_GST_NATUREOFBUSINESS").val("");
  $("#NI_GST_ADDRLINE1").val("");
  $("#NI_GST_ADDRLINE2").val("");
  $("#NI_GST_ADDRLINE3").val("");
  $("#NI_GST_ADDRLINE4").val("");
  $("#NI_GST_COUNTRY").val("");
  $("#NI_GST_STATE").val("");
  $("#NI_GST_CITY").val("");
  $("#NI_GST_PIN").val("");
}

function clearTaxFields(type) {
  if (type === "NI") {
    if (
      $.isInActivities(
        "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
      )
    ) {
      $("#M1_NI_TAXRESIDENCE_IDTYPE").val("");
      $("#M1_NI_TAXRESIDENCE_OTHERIDTYPE").val("");
      $("#M1_NI_TAXRESIDENCE_IDNUMBER").val("");
      $("#M1_NI_TAXRESIDENCE_COUNTRY").val("");
    }
    if (
      $.isInActivities(
        "ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
      )
    ) {
      $("#NI_TAXRESIDENCE_IDTYPE").val("");
      $("#NI_TAXRESIDENCE_OTHERIDTYPE").val("");
      $("#NI_TAXRESIDENCE_IDNUMBER").val("");
      $("#NI_TAXRESIDENCE_COUNTRY").val("");
    }
  } else if (type === "I") {
    $("#TAX_RES_ID_TYPE").val("");
    $("#TAX_RES_OTHER_ID_TYPE").val("");
    $("#TAX_RES_ID_NO").val("");
    $("#TAX_RES_COUNTRY").val("");
  }
}

function insertTaxResidenceDetails(type) {
  //debugger;
  if (type === "NI") {
    if (
      $.isInActivities(
        "ACO_Maker,ACO_Checker,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
      )
    ) {
      if (
        $("#M1_NI_TAXRESIDENCE_IDTYPE").val() === "" ||
        $("#M1_NI_TAXRESIDENCE_IDNUMBER").val() === ""
      ) {
        alert("Tax residence ID Type and ID Number cannot be empty");
      } else {
        $("#NI_TAXRESIDENCE_TBODY").append(
          "<tr rowId='' style='text-align:center;' >" +
            "<td ><input type='radio' name='radio'  onclick='fillTaxResFields($(this))' class='radio'/></td>" +
            "<td class='FILLED_BY' >" +
            $.getActivity() +
            "</td>" +
            "<td class='FILLED_DATE' >" +
            $.getCurrentDate().toStringObject("dd-mm-yy") +
            "</td>" +
            "<td class='M1_NI_TAXRESIDENCE_IDTYPE' >" +
            $("#M1_NI_TAXRESIDENCE_IDTYPE").val() +
            "</td>" +
            "<td class='M1_NI_TAXRESIDENCE_OTHERIDTYPE' >" +
            $("#M1_NI_TAXRESIDENCE_OTHERIDTYPE").val() +
            "</td>" +
            "<td class='M1_NI_TAXRESIDENCE_IDNUMBER' >" +
            $("#M1_NI_TAXRESIDENCE_IDNUMBER").val() +
            "</td>" +
            "<td class='M1_NI_TAXRESIDENCE_COUNTRY'>" +
            $("#M1_NI_TAXRESIDENCE_COUNTRY").val() +
            "</td></tr>"
        );
        clearTaxFields("NI");
      }
    }
    //        else if($.isInActivities("ACO_Checker")){
    //          $("#NI_TAXRESIDENCE_TBODY").append("<tr rowId='' style='text-align:center;' >"
    //                + "<td ><input type='radio' onclick='fillTaxResFields($(this))' name='radio' class='radio'/></td>"
    //                + "<td class='FILLED_BY' >" + $.getActivity() + "</td>"
    //                + "<td class='FILLED_DATE' >" + $.getCurrentDate().toStringObject("dd-mm-yy") + "</td>"
    //                + "<td class='NI_TAXRESIDENCE_IDTYPE' >" + $("#NI_TAXRESIDENCE_IDTYPE").val() + "</td>"
    //                + "<td class='NI_TAXRESIDENCE_OTHERIDTYPE' >" + $("#NI_TAXRESIDENCE_OTHERIDTYPE").val() + "</td>"
    //                + "<td class='NI_TAXRESIDENCE_IDNUMBER' >" + $("#NI_TAXRESIDENCE_IDNUMBER").val() + "</td>"
    //                + "<td class='NI_TAXRESIDENCE_COUNTRY'>" + $("#NI_TAXRESIDENCE_COUNTRY").val() + "</td></tr>");
    //
    //
    //        clearTaxFields("NI");
    //        }
  } else if (type === "I") {
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (elementIndex === -1) {
      alert("Please Select A Customer");
      return;
    }
    if (
      $("#TAX_RES_ID_TYPE").val() === "" ||
      $("#TAX_RES_ID_NO").val() === ""
    ) {
      alert("Tax residence ID Type and ID Number cannot be empty");
    } else {
      $("#IND_TAXRESIDENCE_TBODY").append(
        "<tr rowId='' style='text-align:center;' >" +
          "<td ><input type='radio' id = 'indTaxResRadioId' name='IND_TAX_RADIO' onclick='fillTaxResFields($(this))' class='radio'/></td>" +
          "<td class='FILLED_BY' >" +
          $.getActivity() +
          "</td>" +
          "<td class='FILLED_DATE' >" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='TAX_RES_ID_TYPE' >" +
          $("#TAX_RES_ID_TYPE").val() +
          "</td>" +
          "<td class='TAX_RES_OTHER_ID_TYPE' >" +
          $("#TAX_RES_OTHER_ID_TYPE").val() +
          "</td>" +
          "<td class='TAX_RES_ID_NO' >" +
          $("#TAX_RES_ID_NO").val() +
          "</td>" +
          "<td class='TAX_RES_COUNTRY'>" +
          $("#TAX_RES_COUNTRY").val() +
          "</td>" +
          "<td class='ROWID' >" +
          ($.getActivity() + "_" + elementIndex) +
          "</td></tr>"
      );
      clearTaxFields("I");
    }
  }
}

function insertRemarksDetails() {
  //alert("insertRemarksDetails");

  //debugger;
  var remarksHistory = new Array();
  var remarks;
  if ($.isInActivities("ACO_Case_Initiation")) {
    remarks = $("#REMARKS_CI").val();
  }
  if ($.isInActivities("ACO_DVU")) {
    remarks = $("#REMARKS_DVU").val();
  }
  if ($.isInActivities("ACO_Maker")) {
    remarks = $("#REMARKS_MAKER").val();
  }
  if ($.isInActivities("ACO_Checker")) {
    remarks = $("#REMARKS_CHECKER").val();
  }
  if ($.isInActivities("ACO_Compliance")) {
    remarks = $("#COMM_COMP1").val();
  }
  if ($.isInActivities("ACO_Discrepancy")) {
    remarks = $("#REMARKS_DISCP").val();
  }
  if ($.isInActivities("ACO_QC")) {
    remarks = $("#REMARKS_QC").val();
  }
  if ($.isInActivities("ACO_Data_Correction")) {
    remarks = $("#REMARKS_DATA_CORR").val();
  }
  if ($.isInActivities("ACO_Scanning")) {
    remarks = val("");
  }

  remarksHistory.push(userNameForSubmit);
  remarksHistory.push(activityNameForSubmit);
  remarksHistory.push(remarks);
  // remarksHistory.push($.getCurrentDate().toStringObject("dd-mm-yy"));
  try {
    var now = moment().format("DD-MM-YYYY, h:MM:ss A");
    // console.log("[insertRemarksDetails : DATA : ]" + remarksHistory + ",ACTIVITY NAME : " + activityNameForSubmit + ",PINSTID : " + pinstIdForSubmit);

    if (pinstIdForSubmit === null || pinstIdForSubmit === "") {
      pinstIdForSubmit = $.getProcessInstanceId();
    }
    if (activityNameForSubmit === null || activityNameForSubmit === "") {
      activityNameForSubmit = $.getActivity();
    }
    if (userNameForSubmit === null || userNameForSubmit === "") {
      userNameForSubmit = $.getUserName();
    }

    $.ajax({
      type: "POST",
      url: "../ACO/InsertRemarksDetails",
      data:
        "remarksHistory=" +
        encodeURIComponent(JSON.stringify(remarksHistory)) +
        "&ACTIVITY_NAME=" +
        activityNameForSubmit +
        "&DATE=" +
        now +
        "&PINSTID=" +
        pinstIdForSubmit,
      success: function (data) {
        //debugger;
        //  console.log(data);
        if (data >= 1) {
          console.log("Data inserted successfully");
        } else {
          console.log("Insertion Failed");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
    $body.removeClass("loading");
    // alert("====Exception occured while fetching values=====");
  }
}

function clearCustTableDetails(custType) {
  //debugger;
  if ($.getActivity() === "ACO_Case_Initiation") {
    $("#IND_IS_EXISTING").val("");
    $("#IND_CKYC_NUMBER").val("");
    $("#IND_FIRST_NAME").val("");
    $("#IND_MIDDLE_NAME").val("");
    $("#IND_LAST_NAME").val("");
    $("#IND_MOBILE").val("");
    $("#IND_EMAIL").val("");
    $("#IND_RES_PHONE").val("");
    $("#IND_CIF_NUMBER").val("");
    $("#IND_DOB").val("");
    $("#TITLE").val("");
    $("#IND_RELATIONSHIP_CODE").val("");
    $("#IND_VPA_ID").val("");
    $("#IND_AEPS").val("");
    $("#IND_ONE_CIF_ONE_MOBILE").val("");
    $("#IND_BIRTH_CERTIFICATE").val("");
  }
  //code added
  if (
    $("#FORM_TYPE").val() === "Individual" ||
    tableLoader.FORM_TYPE === "Individual" ||
    $("#FORM_TYPE").val() === "Non Individual" ||
    tableLoader.FORM_TYPE === "Non Individual"
  ) {
    $("#IND_COUNTRY_CODE").val("+91").prop("disabled", true);
  } else {
    $("#IND_COUNTRY_CODE").val("").prop("disabled", false);
  }
}

var primary = 0;
function insertCustTableDetails(custType) {
  //debugger;
  //var index = $("#CUSTDETAILS_TABLE input[name=radio]:checked").closest("tr").index();

  var countForValidationCaseInitiation = 0;
  if ($("#FORM_TYPE").val() === "NRI") {
    $("#IND_EMAIL").addClass("requiredIndiCustTable");
    //$("#IND_COUNTRY_CODE").addClass("requiredIndiCustTable");
  } else {
    $("#IND_EMAIL").removeClass("requiredIndiCustTable");
    //$("#IND_COUNTRY_CODE").removeClass("requiredIndiCustTable");
  }

  $(".requiredIndiCustTable").each(function () {
    var idName = this.id;
    var idNameVal = $("#" + idName).val();
    if (
      idNameVal === null ||
      idNameVal === "" ||
      idNameVal === "Select" ||
      idNameVal === "undefined"
    ) {
      countForValidationCaseInitiation++;
      validateFormIndi(idName);
    }
  });
  if ($.getActivity() === "ACO_Case_Initiation" && primary === 0) {
    //debugger;
    if (
      $("#ACCOUNT_RELN_CODE").val() === "MA" ||
      $("#ACCOUNT_RELN_CODE").val() === "MG" ||
      $("#ACCOUNT_RELN_CODE").val() === "MI" ||
      $("#ACCOUNT_RELN_CODE").val() === "MS"
    ) {
      var dob = $("#IND_DOB").val();
      if (dob) {
        if (dob !== null && dob !== "") {
          var dobSplit = dob.split("-");
          var dobYear = dobSplit[2];
          var currentDate = new Date();
          var currentYear = currentDate.getFullYear();
          if (currentYear - dobYear > 18) {
            alert("Primary Cusomer should be minor");
            return;
            countForValidationCaseInitiation++;
          } else {
          }
        }
      }
    }
  }
  if ($.getActivity() === "ACO_Case_Initiation" && primary == 1) {
    //debugger;
    if (
      $("#ACCOUNT_RELN_CODE").val() === "MG" ||
      $("#ACCOUNT_RELN_CODE").val() === "MI" ||
      $("#ACCOUNT_RELN_CODE").val() === "MS"
    ) {
      var dob = $("#IND_DOB").val();
      if (dob) {
        if (dob !== null && dob !== "") {
          var dobSplit = dob.split("-");
          var dobYear = dobSplit[2];
          var currentDate = new Date();
          var currentYear = currentDate.getFullYear();
          if (currentYear - dobYear < 18) {
            alert("Second Customer should be major");
            return;
            countForValidationCaseInitiation++;
          } else {
          }
        }
      }
    }
  }

  //EMAIL VALIDATION
  var regex = /^\b[A-Z0-9._%-]+@[A-Z0-9.-]+\.[A-Z]{2,4}\b$/i;
  var spanNameEmail = "IND_EMAIL_ERR";
  if (
    $("#IND_EMAIL").val() !== null &&
    $("#IND_EMAIL").val() !== "" &&
    $("#IND_EMAIL").val() !== "undefined"
  ) {
    if (!$("#IND_EMAIL").val().match(regex)) {
      document.getElementById(spanNameEmail).innerHTML = "Enter valid email id";
      countForValidationCaseInitiation++;
    } else {
      document.getElementById(spanNameEmail).innerHTML = "";
    }
  }
  //MOBILE VALIDATION===========

  if ($("#FORM_TYPE").val() !== "NRI") {
    var regex = "^[0-9]{10}$";
    if (!$("#IND_MOBILE").val().match(regex)) {
      document.getElementById("IND_MOBILE_SPAN").innerHTML =
        "Enter valid mobile number.";
      countForValidationCaseInitiation++;
    } else {
      document.getElementById("IND_MOBILE_SPAN").innerHTML = "";
    }
  }

  if (countForValidationCaseInitiation === 0) {
    if ($.getActivity() === "ACO_Case_Initiation") {
      if (
        $("#CUSTDETAILS_TABLE tbody tr").length ===
        parseInt($("#OTHERDETAILS_TOTAL_ACC_HOLDER").val())
      ) {
        alert("You have already added maximum account holders");
        return;
      }

      const aepsCheckBoxValue = document.getElementById("IND_AEPS");
      var checkBoxValue = "N";
      if (aepsCheckBoxValue.checked) {
        checkBoxValue = "Y";
      } else {
        checkBoxValue = "N";
      }
      const formSixtyCheckBox = document.getElementById(
        "OTHERDETAILS_FORM_SIXTY"
      );
      var formSixtyCheckBoxValue = "N";
      if (formSixtyCheckBox.checked) {
        formSixtyCheckBoxValue = "Y";
      } else {
        formSixtyCheckBoxValue = "N";
      }

      //            const oneCifCheckBoxValue = document.getElementById("IND_ONE_CIF_ONE_MOBILE");
      //            var onCifCheckBoxValue = "N";
      //            if (oneCifCheckBoxValue.checked) {
      //                onCifCheckBoxValue = "Y";
      //            } else {
      //                onCifCheckBoxValue = "N";
      //            }

      $("#CUSTDETAILS_TBODY").append(
        "<tr rowId='' class='added' style='text-align:center;'  >" +
          "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' onclick='fillFormFields($(this),event)' class='radio'/></td>" +
          "<td class='IND_IS_EXISTING' storeType = 'cust'>" +
          (!$("#IND_IS_EXISTING").val() ? "" : $("#IND_IS_EXISTING").val()) +
          "</td>" +
          "<td class='IND_CIF_NUMBER' storeType = 'custALL'>" +
          (!$("#IND_CIF_NUMBER").val() ? "" : $("#IND_CIF_NUMBER").val()) +
          "</td>" +
          "<td class='IND_COUNTRY_CODE' storeType = 'cust'>" +
          (!$("#IND_COUNTRY_CODE").val() ? "" : $("#IND_COUNTRY_CODE").val()) +
          "</td>" +
          "<td class='IND_CKYC_NUMBER' storeType = 'cust'>" +
          (!$("#IND_CKYC_NUMBER").val() ? "" : $("#IND_CKYC_NUMBER").val()) +
          "</td>" +
          "<td class='TITLE' storeType = 'cust'>" +
          (!$("#TITLE").val() ? "" : $("#TITLE").val()) +
          "</td>" +
          "<td class='IND_FIRST_NAME' storeType = 'cust' >" +
          (!$("#IND_FIRST_NAME").val()
            ? ""
            : $("#IND_FIRST_NAME").val().toUpperCase()) +
          "</td>" +
          "<td class='IND_MIDDLE_NAME' storeType = 'cust' >" +
          (!$("#IND_MIDDLE_NAME").val()
            ? ""
            : $("#IND_MIDDLE_NAME").val().toUpperCase()) +
          "</td>" +
          "<td class='IND_LAST_NAME' storeType = 'cust'>" +
          (!$("#IND_LAST_NAME").val()
            ? ""
            : $("#IND_LAST_NAME").val().toUpperCase()) +
          "</td>" +
          "<td class='IND_DOB' storeType = 'cust'>" +
          (!$("#IND_DOB").val() ? "" : $("#IND_DOB").val()) +
          "</td>" +
          "<td class='IND_MOBILE' storeType = 'cust'>" +
          (!$("#IND_MOBILE").val() ? "" : $("#IND_MOBILE").val()) +
          "</td>" +
          "<td class='IND_EMAIL' storeType = 'cust'>" +
          (!$("#IND_EMAIL").val() ? "" : $("#IND_EMAIL").val()) +
          "</td>" +
          "<td class='IND_RES_PHONE' storeType = 'cust'>" +
          (!$("#IND_RES_PHONE").val() ? "" : $("#IND_RES_PHONE").val()) +
          "</td>" +
          "<td class='SOURCE' storeType = 'cust'>" +
          (!$("#SOURCE").val() ? "" : $("#SOURCE").val()) +
          "</td>" +
          "<td class='IND_RELATIONSHIP_CODE' storeType = 'cust'>" +
          (!$("#IND_RELATIONSHIP_CODE").val()
            ? ""
            : $("#IND_RELATIONSHIP_CODE").val()) +
          "</td>" +
          //IND_ONE_CIF_ONE_MOBILE
          "<td class='IND_AEPS' typecheck='checkBoxField' storeType = 'cust'>" +
          checkBoxValue +
          "</td>" +
          "<td class='IND_VPA_ID' storeType = 'cust'>" +
          (!$("#IND_VPA_ID").val() ? "" : $("#IND_VPA_ID").val()) +
          "</td>" +
          "<td class='IND_PAN_NUMBER' storeType='cust'>" +
          (!$("#IND_PAN_NUMBER").val() ? "" : $("#IND_PAN_NUMBER").val()) +
          "</td>" +
          "<td class='OTHERDETAILS_FORM_SIXTY' typeCheck = 'checkBoxField' storeType='cust'>" +
          formSixtyCheckBoxValue +
          "</td>" +
          "<td hidden  class='IND_BIRTH_CERTIFICATE' storeType = 'cust'></td>" +
          "<td hidden  class='IND_ONE_CIF_ONE_MOBILE' typecheck='checkBoxField' storeType = 'cust'></td>" +
          "<td  hidden class='IND_GENDER' storeType='cust'></td>" +
          "<td  hidden class='IND_AADHAR_NUMBER' storeType='cust'></td>" +
          "<td  hidden class='IND_PAN_RESULT' storeType='cust'></td>" +
          "<td  hidden class='IND_AADHAR_NPCI' storeType='cust'></td>" +
          "<td  hidden class='IND_AADHAR_PROFILE' storeType='cust'></td>" +
          "<td  hidden class='IND_RESIDENTIAL_STATUS' storeType='cust'></td>" +
          "<td  hidden class='IND_PASSPORT' storeType='cust'></td>" +
          "<td  hidden class='IND_PASSPORT_ISSUE_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_PASSPORT_EXPIRY_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_RATION_CARD' storeType='cust'></td>" +
          "<td  hidden class='IND_RATIONCARD_ISSUE_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_RATIONCARD_EXPIRY_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_NREGA_CARD' storeType='cust'></td>" +
          "<td  hidden class='IND_NREGA_ISSUE_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_NREGA_EXPIRY_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_VOTERS_ID' storeType='cust'></td>" +
          "<td  hidden class='IND_DRIVING_LICENSE' storeType='cust'></td>" +
          "<td  hidden class='IND_DRLICENSE_ISSUE_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_DRLICENSE_EXPIRY_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_DEDUPE_RESULT' storeType='cust'></td>" +
          "<td  hidden class='IND_AML_RESULT' storeType='cust'></td>" +
          "<td  hidden class='IND_MARITAL_STATUS' storeType='cust'></td>" +
          "<td  hidden class='IND_MOB_NO_2' storeType='cust'></td>" +
          "<td  hidden class='IND_LANDLINE' storeType='cust'></td>" +
          "<td  hidden class='IND_DINNUMBER' storeType='cust'></td>" +
          "<td  hidden class='IND_CATEGORY' storeType='cust'></td>" +
          "<td  hidden class='IND_ALT_MOBILE' storeType='cust'></td>" +
          "<td  hidden class='IND_LANDLINE_STD_CODE' storeType='cust'></td>" +
          "<td  hidden class='IND_FATHER_PREFIX' storeType='cust'></td>" +
          "<td  hidden class='IND_FATHER_FRST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_FATHER_MIDDLE_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_FATHER_LAST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_SPOUSE_PREFIX' storeType='cust'></td>" +
          "<td  hidden class='IND_SPOUSE_FRST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_SPOUSE_MIDDLE_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_SPOUSE_LAST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MAIDEN_PREFIX' storeType='cust'></td>" +
          "<td  hidden class='IND_MAIDEN_FRST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MAIDEN_MIDDLE_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MAIDEN_LAST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MOTHER_PREFIX' storeType='cust'></td>" +
          "<td  hidden class='IND_MOTHER_FRST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MOTHER_MIDDLE_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_MOTHER_LAST_NAME' storeType='cust'></td>" +
          "<td  hidden class='IND_ISPOLITICALLY_EXPOSED' storeType='cust'></td>" +
          "<td  hidden class='IND_NET_WORTH' storeType='cust'></td>" +
          "<td  hidden class='IND_NET_WORTH_DATE' storeType='cust'></td>" +
          "<td  hidden class='IND_FAX' storeType='cust'></td>" +
          "<td  hidden class='KYC_NAME_ID_PROOF' storeType='KYC'></td>" +
          "<td  hidden class='KYC_NUM_ID_PROOF' storeType='KYC'></td>" +
          "<td  hidden class='KYC_NAME_ADDR_PROOF' storeType='KYC' ></td>" +
          "<td  hidden class='KYC_NUM_ADDR_PROOF' storeType='KYC'></td>" +
          "<td  hidden class='KYC_OTHERIDPROOF' storeType='KYC'></td>" +
          "<td  hidden class='KYC_EXPIRYDATE' storeType='KYC'></td>" +
          "<td  hidden class='KYC_OTHER_ADDRPROOF' storeType='KYC'></td>" +
          "<td  hidden class='KYC_ADDPROOF_EXPDATE' storeType='KYC'></td>" +
          "<td  hidden class='CKYC_ACC_TYPE' storeType='KYC'></td>" +
          "<td  hidden class='CKYC_APP_TYPE' storeType='KYC'></td>" +
          "<td  hidden class='CKYC_DECLARATION_DATE' storeType='KYC'></td>" +
          "<td  hidden class='CKYC_REMARKS' storeType='KYC'></td>" +
          "<td  hidden class='POI_TYPE' storeType='KYC'></td>" +
          "<td  hidden class='POI_NUMBER' storeType='KYC'></td>" +
          "<td  hidden class='POI_ISSUE_DATE' storeType='KYC'></td>" +
          "<td  hidden class='POI_EXPIRY_DATE' storeType='KYC'></td>" +
          "<td  hidden class='POI_DOCSUBMIT_DATE' storeType='KYC'></td>" +
          "<td  hidden class='POA_TYPE' storeType='KYC'></td>" +
          "<td  hidden class='POA_NUMBER' storeType='KYC'></td>" +
          "<td  hidden class='POA_ISSUE_DATE' storeType='KYC'></td>" +
          "<td  hidden class='POA_EXPIRY_DATE' storeType='KYC'></td>" +
          "<td  hidden class='POA_DOCSUBMIT_DATE' storeType='KYC'></td>" +
          "<td  hidden class='KYC_DECLARATIONPLACE' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFIERNAME' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFIER_ID' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFIER_DESIGNATION' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFIER_ORG' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFIER_ORG_CODE' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFY_DATE' storeType='KYC'></td>" +
          "<td  hidden class='KYC_VERIFY_BRANCH' storeType='KYC'></td>" +
          "<td  hidden class='KYC_DOCUMENT' storeType='KYC'></td>" +
          "<td  hidden class='NATIONALITY' storeType='PERSNL'></td>" +
          "<td  hidden class='RELIGION' storeType='PERSNL'></td>" +
          "<td  hidden class='GUARDIAN_NAME' storeType='PERSNL'></td>" +
          "<td  hidden class='OCCUPATION' storeType='PERSNL'></td>" +
          "<td  hidden class='EMPLOYED_WITH' storeType='PERSNL'></td>" +
          "<td  hidden class='COMPANY_NAME' storeType='PERSNL'></td>" +
          "<td  hidden class='GROSS_INCOME' storeType='PERSNL'></td>" +
          "<td  hidden class='SMS_SERVICE' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='EMAIL_SERVICE' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='TELEPHONE_SERVICE' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='DND_SERVICE' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='OTHERBANK_OTHER_LOAN' storeType='PERSNL'></td>" +
          "<td  hidden class='FATCA_ADDRESS_TAX_PURPOSE' storeType='FATCA'></td>" +
          "<td  hidden class='OTHER_INFO' storeType='PERSNL'></td>" +
          "<td  hidden class='PHYSICAL_STATUS' storeType='PERSNL'></td>" +
          "<td  hidden class='FATCA_APPLICABLE' storeType='FATCA'></td>" +
          "<td  hidden class='CITYOFBIRTH' storeType='FATCA'></td>" +
          "<td  hidden class='COUNTRYOFBIRTH' storeType='FATCA'></td>" +
          "<td  hidden class='ADD_TYPE_FATCA' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_ADD_1' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_ADD_2' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_ADD_3' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_LANDMARK' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_CITY' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_COUNTRY' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_STATE' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_PINCODE' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_FATHERNAME' storeType='FATCA'></td>" +
          "<td  hidden class='FATCA_SPOUSENAME' storeType='FATCA'></td>" +
          "<td  hidden class='TAX_RES_ID_TYPE' storeType='FATCA'></td>" +
          "<td  hidden class='TAX_RES_ID_NO' storeType='FATCA'></td>" +
          "<td  hidden class='TAX_RES_COUNTRY' storeType='FATCA'></td>" +
          "<td  hidden class='BSR_FIRST' storeType='FATCA'></td>" +
          "<td  hidden class='BSR_SECOND' storeType='FATCA'></td>" +
          "<td  hidden class='BSR_THIRD' storeType='FATCA'></td>" +
          "<td  hidden class='PERSNL_RELN_WITH_MINOR' storeType='PERSNL'></td>" +
          "<td  hidden class='PERSNL_QUALIFICATION' storeType='PERSNL'></td>" +
          "<td  hidden class='IS_SENIOR_CITIZEN' storeType='PERSNL'></td>" +
          "<td  hidden class='NUMBER_OF_ADULTS' storeType='PERSNL'></td>" +
          "<td  hidden class='NUMBER_OF_MINORS' storeType='PERSNL'></td>" +
          "<td  hidden class='SELF_EMPLOYED_YEARS' storeType='PERSNL'></td>" +
          "<td  hidden class='SELF_EMPLOYED_MONTHS' storeType='PERSNL'></td>" +
          "<td  hidden class='PERSNL_NATURE_OF_BUSINESS' storeType='PERSNL'></td>" +
          "<td  hidden class='HOUSEHOLD_DETAILS' storeType='FATCA'></td>" +
          "<td  hidden class='PPI_DETAILS' storeType='FATCA'></td>" +
          "<td  hidden class='WORKING_COMPANY' storeType='FATCA'></td>" +
          "<td  hidden class='SALARYACC_IS_STAFF' storeType='FATCA'></td>" +
          "<td  hidden class='EMP_CODE' storeType='FATCA'></td>" +
          "<td  hidden class='SALARY_PER_MONTH' storeType='FATCA'></td>" +
          "<td  hidden class='CORPORATE_NAME' storeType='FATCA'></td>" +
          "<td  hidden class='STAFF_ID' storeType='FATCA'></td>" +
          "<td  hidden class='IND_GUARDIAN_CIF' storeType='cust'></td>" +
          "<td  hidden class='IND_LINK_PAN_GUARDIAN' typeCheck = 'checkBoxField' storeType='cust'></td>" +
          "<td  hidden class='IND_MINOR_CIF' storeType='cust'></td>" +
          "<td  hidden class='LINK_MINOR_PAN' typeCheck = 'checkBoxField' storeType='cust'></td>" +
          "<td  hidden class='INTERNET_SERVICE' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='MOBILE_BANKING' typeCheck = 'checkBoxField' storeType='PERSNL'></td>" +
          "<td  hidden class='FREQ_EMAIL' storeType='PERSNL'></td>" +
          "<td  hidden class='ADDRESS_LINE1_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='ADDRESS_LINE2_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='ADDRESS_LINE3_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='LANDMARK_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='PO_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='PS_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='TALUKA_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='DISTRICT_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='COUNTRY_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='STATE_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='CITY_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='PINCODE_RESI' storeType='ADDR'></td>" +
          "<td  hidden class='PERM_SAME_RES'  typeCheck ='checkBoxField' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE1_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE2_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE3_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='LANDMARK_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='PO_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='PS_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='TALUKA_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='DISTRICT_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='COUNTRY_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='STATE_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='CITY_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='PINCODE_PERM' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE1_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE2_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='ADD_LINE3_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='LANDMARK_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='PO_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='PS_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='TALUKA_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='DISTRICT_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='COUNTRY_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='STATE_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='CITY_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='PINCODE_OFF' storeType='ADDR'></td>" +
          "<td  hidden class='RESIDENCE_TYPE' storeType='ADDR'></td>" +
          "<td  hidden class='ADDRESS_TYPE' storeType='ADDR'></td>" +
          "<td class='FILLED_DATE' storeType='custALL'>" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='FILLED_BY' storeType='custALL'>" +
          $.getNTUserName() +
          "</td>" +
          "<td hidden class='FETCH_CIF_FLAG' storeType='cust'>" +
          "N" +
          "</td></tr>"
      );
      clearCustTableDetails("I");
      primary++;
      countForModify = 0;
    } else {
      $("#CUSTDETAILS_TBODY").append(
        "<tr rowId='' class='added' style='text-align:center;' >" +
          "<td ><input style = 'margin-left: 20px;' type='radio' name='radio' class='radio'/></td>" +
          "<td class='IND_IS_EXISTING' >" +
          $("#IND_IS_EXISTING").val() +
          "</td>" +
          "<td class='IND_CIF_NUMBER'>" +
          $("#IND_CIF_NUMBER").val() +
          "</td>" +
          "<td class='IND_COUNTRY_CODE'>" +
          $("#IND_COUNTRY_CODE").val() +
          "</td>" +
          "<td class='IND_CKYC_NUMBER'>" +
          $("#IND_CKYC_NUMBER").val() +
          "</td>" +
          "<td class='TITLE'>" +
          (!$("#TITLE").val() ? "" : $("#TITLE").val()) +
          "</td>" +
          "<td class='IND_FIRST_NAME' >" +
          $("#IND_FIRST_NAME").val() +
          "</td>" +
          "<td class='IND_MIDDLE_NAME' >" +
          $("#IND_MIDDLE_NAME").val() +
          "</td>" +
          "<td class='IND_LAST_NAME' >" +
          $("#IND_LAST_NAME").val() +
          "</td>" +
          "<td class='IND_DOB'>" +
          $("#IND_DOB").val() +
          "</td>" +
          "<td class='IND_MOBILE'>" +
          $("#IND_MOBILE").val() +
          "</td>" +
          "<td class='IND_EMAIL'>" +
          $("#IND_EMAIL").val() +
          "</td>" +
          "<td class='IND_RES_PHONE'>" +
          $("#IND_RES_PHONE").val() +
          "</td>" +
          "<td class='SOURCE'>" +
          $("#SOURCE").val() +
          "</td>" +
          "<td class='IND_RELATIONSHIP_CODE'>" +
          $("#IND_RELATIONSHIP_CODE").val() +
          "</td>" +
          "<td class='IND_AEPS'>" +
          $("#IND_AEPS").val() +
          "</td>" +
          "<td class='IND_VPA_ID'>" +
          $("#IND_VPA_ID").val() +
          "</td>" +
          "<td class='IND_BIRTH_CERTIFICATE'>" +
          $("#IND_BIRTH_CERTIFICATE").val() +
          "</td>" +
          "<td class='IND_ONE_CIF_ONE_MOBILE'>" +
          $("#IND_ONE_CIF_ONE_MOBILE").val() +
          "</td>" +
          "<td class='CD_GENDER'>" +
          $("#PERSONALDETAILS_GENDER").val() +
          "</td>" +
          "<td class='CD_CIF'>" +
          $("#CIF_NUMBER").val() +
          "</td>" +
          "<td class='CD_PAN'>" +
          $("#PAN_NUMBER").val() +
          "</td>" +
          "<td class='CD_AADHAR'>" +
          $("#AADHAR_NUMBER").val() +
          "</td>" +
          "<td class='CD_PANRESULT'>" +
          $("#PAN_RESULT").val() +
          "</td>" +
          "<td class='CD_AADHARNPCI'>" +
          $("#AADHAR_NPCI").val() +
          "</td>" +
          "<td class='CD_AADHARPROFILE'>" +
          $("#AADHAR_PROFILE").val() +
          "</td>" +
          "<td class='CD_RESDNSTATUS'>" +
          $("#RESIDENTIAL_STATUS").val() +
          "</td>" +
          "<td class='CD_PASSPORT'>" +
          $("#PASSPORT").val() +
          "</td>" +
          "<td class='CD_PASSPORT_ISSUEDATE'>" +
          $("#PASSPORT_ISSUE_DATE").val() +
          "</td>" +
          "<td class='CD_PASSPORT_EXPIRYDATE'>" +
          $("#PASSPORT_EXPIRY_DATE").val() +
          "</td>" +
          "<td class='CD_VOTERID'>" +
          $("#VOTERS_ID").val() +
          "</td>" +
          "<td class='CD_LICENSENO'>" +
          $("#DRIVING_LICENSE").val() +
          "</td>" +
          "<td class='CD_LICENSEEXPIRYDATE'>" +
          $("#DRIVING_EXPIRY_DATE").val() +
          "</td>" +
          "<td class='CD_KYC_NAME_IDPROOF'>" +
          $("#KYC_NAME").val() +
          "</td>" +
          "<td class='CD_KYC_NUM_IDPROOF'>" +
          $("#KYC_NO").val() +
          "</td>" +
          "<td class='CD_KYC_NAME_ADDRPROOF'>" +
          $("#KYC_NAME_ADDRESS").val() +
          "</td>" +
          "<td class='CD_KYC_NUM_ADDRPROOF'>" +
          $("#KYC_NO_ADDRESS").val() +
          "</td>" +
          "<td class='CD_DEDUPE_CHECKRESULT'>" +
          $("#DEDUPE_RESULT").val() +
          "</td>" +
          "<td class='CD_AML_CHECKRESULT'>" +
          $("#AML_RESULT").val() +
          "</td>" +
          "<td class='CD_ACTION_DATE'>" +
          $.getCurrentDate().toStringObject("dd-mm-yy") +
          "</td>" +
          "<td class='CD_ACTION_BY'>" +
          $.getNTUserName() +
          "</td></tr>"
      );
      clearCustTableDetails("I");
    }
  } else {
    alert("Please fill the mandatory fields before adding customer.");
  }
}

function numbersOnlyEvent(clickedId) {
  //debugger;
  $("#" + clickedId).keypress(function (e) {
    //debugger;
    if (e.which !== 8 && e.which !== 0 && (e.which < 48 || e.which > 57)) {
      var spanName = clickedId + "_errmsg";
      $("#" + spanName)
        .html("Enter Only Numbers")
        .show()
        .fadeOut("slow");
      return false;
    }
  });
}

function deleteTableRow(rowType) {
  //debugger;
  var element;
  if (rowType === "NI") {
    element = $("#NON_INDIVIDUAL_TABLE input[name=radio]:checked").closest(
      "tr"
    );
  } else if (rowType === "I") {
    element = $("#INDIVIDUAL_TABLE input[name=radio]:checked").closest("tr");
  } else if (rowType === "OI") {
    element = $("#OI_TABLE input[name=radio]:checked").closest("tr");
  } else if (rowType === "GST") {
    element = $("#GST_TABLE input[name=GSTradio]:checked").closest("tr");
    //$("#NI_GST_ADD").prop("disabled",false);
    clearFields();
    $("#NI_GST_ADD").prop("disabled", false);
  } else if (rowType === "CI") {
    element = $("#CUSTDETAILS_TABLE   input[name=radio]:checked").closest("tr");
    clearCustTableDetails("I");
    $("#CUSTDETAILS_ADD").prop("disabled", false);
    if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
      //  $("#CUSTDETAILS_ADD").prop("disabled",false);
    }
  } else if (rowType === "TAXRESIDENCE") {
    element = $("#NI_TAXRESIDENCE_TABLE input[name=radio]:checked").closest(
      "tr"
    );
    $("#NI_TAXRESIDENCE_ADD").prop("disabled", false);
    clearTaxFields("NI");
  } else if (rowType === "INDTAXRESIDENCE") {
    element = $(
      "#IND_TAXRESIDENCE_TABLE input[name=IND_TAX_RADIO]:checked"
    ).closest("tr");
    $("#IND_TAXRESIDENCE_ADD").prop("disabled", false);
    clearTaxFields("I");
  }

  if (element[0] === undefined) {
    alert("Please Select a row");
    return;
  }

  if (confirm("Do you want to delete the selected row?")) {
    element.remove();
    element.fadeOut(1500, function () {
      element.hide();
      //manageMaxSanctionLimit();
    });
  }
}

var OIMap = new Map();
var OIarr = new Array();
function postSave() {
  // alert("postSave");
  debugger;
  if ($.isInActivities("ACO_Case_Initiation")) {
    if ($.getProcessInstanceId() === "null") {
      $(".doneProcessInstance").hide();
    } else {
      $(".doneProcessInstance").show();
    }
  }

  //    if ($.isInActivities("ACO_Case_Initiation")) {
  //        $(".doneProcessInstance").parent().hide();
  //        $("#submit_case_Button").parent().show();
  //    }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if (
      $("#SCHEME_CODE").val() === "1018" ||
      tableLoader.SCHEME_CODE === "1018"
    ) {
      saveSmileAccDetails();
    }
  }

  if ($.isInActivities("ACO_Case_Initiation")) {
    if (
      $("#DEFERRAL_REQUIRED").val() === "Yes" ||
      tableLoader.DEFERRAL_REQUIRED === "Yes"
    ) {
      alert("You have to upload the deferral required documents");
      //            if (confirm("You have to upload the deferral required documents")) {
      $(".uploadFile").click();
      //            }
    }
  }

  if (
    $.isInActivities("ACO_Case_Initiation") &&
    $("#IS_CKYC_OPEN").val() === "Yes"
  ) {
    //dialog open

    ckycNumberForDocumentUpload("1");
  }

  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_QC,ACO_Data_Correction"
    ) &&
    ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1")
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      //  case  '6':
      //  case  '3':
      //  case  '7':
      case "100":
        saveUBODetails();
    }
  }

  if ($.getActivity() === "ACO_Compliance") {
    //deleteCompDocDetailsfromDB('delete');
    insertComplianceDocDetailsInDB();
  }
  //==========================CREATE CSV FILE ON QC APPROVAL=======================================================

  if ($.isInActivities("ACO_QC") && $("#SCHEME_CODE").val() === "1018") {
    submitSYS();
  }

  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Maker,ACO_Checker,ACO_QC,ACO_DVU,ACO_Discrepancy,ACO_Data_Correction,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH"
    )
  ) {
    saveCustomerDetails("Save");
    if (saveDataFinalCustDetails === 0) {
      console.log("Exception arised while saving data");
      // return false;
    }
  }

  //==================================EXCEPTION SAVING INTO DB==============================================================
  if ($.getActivity() === "ACO_DVU" || $.getActivity() === "ACO_Discrepancy") {
    if (hidedRow === "CL") {
      objectHidedRow.remove();
    }
    //deleteExceptionFromDB();
    insertExceptionIntoDB();
  }
}

function cardRequirementDebit(cardId, nameOnCard) {
  //debugger;
  var spanName = nameOnCard + "_SPAN";
  if ($("#" + cardId).prop("checked")) {
    $("#" + nameOnCard).prop("readonly", false);
    if (
      $("#" + nameOnCard).val() === null ||
      $("#" + nameOnCard).val() === "" ||
      $("#" + nameOnCard).val() === undefined ||
      $("#" + nameOnCard).val() === "undefined"
    ) {
      document.getElementById(spanName).innerHTML = "Field cannot be empty";
      $("#" + nameOnCard).addClass("requiredIndiMaker");
    }
  } else {
    document.getElementById(spanName).innerHTML = "";
    $("#" + nameOnCard)
      .prop("readonly", true)
      .val("");
    $("#" + nameOnCard).removeClass("requiredIndiMaker");
  }
}

function cardRequirement(cardId, nameOnCard) {
  debugger;
  if ($("#CUSTDETAILS_TBODY tr").size() < 1) {
    alert("Please click on customer details first");
    $("#" + cardId).prop("checked", false);
    return;
  }

  var firstName;
  var middleName;
  var lastName;
  if ($("#" + cardId).prop("checked")) {
    if (
      tableLoader.FORM_TYPE === "Individual" ||
      tableLoader.FORM_TYPE === "NRI"
    ) {
      $("#CUSTDETAILS_TBODY tr").each(function (index) {
        if (index === 0) {
          $(this)
            .find("td")
            .each(function () {
              if ($(this).attr("class") === "IND_FIRST_NAME") {
                firstName = $(this).text();
              } else if ($(this).attr("class") === "IND_MIDDLE_NAME") {
                middleName = $(this).text();
              } else if ($(this).attr("class") === "IND_LAST_NAME") {
                lastName = $(this).text();
              }
            });
        }
      });
      if (middleName !== null && middleName !== "") {
        $("#" + nameOnCard)
          .val(firstName + " " + middleName + " " + lastName)
          .addClass("changed");
      } else {
        $("#" + nameOnCard)
          .val(firstName + " " + lastName)
          .addClass("changed");
      }
    } else if (tableLoader.FORM_TYPE === "Non Individual") {
      $("#" + nameOnCard)
        .val($("#NI_CUSTNAME").val())
        .addClass("changed");
    }
  } else {
    $("#" + nameOnCard)
      .val("")
      .addClass("changed");
  }

  if ($("#" + nameOnCard).val().length > 20) {
    document.getElementById(nameOnCard + "_SPAN").innerHTML =
      "Field length cannot be more than 20.";
    $("#" + nameOnCard).prop("readonly", false);
  } else {
    document.getElementById(nameOnCard + "_SPAN").innerHTML = "";
  }
}

var customerDetails = new Object();
var KYCDetails = new Object();
var xRow;
function saveTaxResidenceDetails() {
  //debugger;
  var TAXResidencerow = new Array();
  var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .parent()
    .parent()
    .index();
  $("#IND_TAXRESIDENCE_TABLE tbody tr").each(function () {
    var newmap = new Object();
    $(this)
      .find("td")
      .each(function () {
        if ($(this).attr("class")) {
          //                if ($.isInActivities("ACO_QC")) {
          //                    if ($(this).attr("class") === "FILLED_BY")
          //                        newmap[$(this).attr("class")] = "ACO_QC";
          //                    else
          //                        newmap[$(this).attr("class")] = $(this).text();
          //                }
          //                else
          newmap[$(this).attr("class")] = $(this).text();
        }
      });
    TAXResidencerow.push(newmap);
  });
  try {
    $.ajax({
      type: "POST",
      data:
        "TAXRESIDENCE_DETAILS=" +
        encodeURIComponent(JSON.stringify(TAXResidencerow)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&ROWID=" +
        elementIndex +
        "&PINSTID=" +
        $.getProcessInstanceId(),
      url: "../../ACO/SRVInsertIndividualDetails",
      success: function (data) {
        //debugger;
        //  console.log(data);
        if (data >= 1) {
          saveDataFinalIndiDetails = 1;
        } else {
          saveDataFinalIndiDetails = 0;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("something went wrong");
      },
    });
  } catch (e) {
    alert("saveTaxResidenceDetails::" + e);
    $body.removeClass("loading");
  }
}

function saveCustomerDetails(funcName) {
  //debugger;

  console.log("Id === " + $.getProcessInstanceId());
  if (
    pinstIdForSubmit === null ||
    pinstIdForSubmit === "" ||
    pinstIdForSubmit === undefined ||
    pinstIdForSubmit === "null"
  ) {
    pinstIdForSubmit = $.getProcessInstanceId();
  }
  if (activityNameForSubmit === null || activityNameForSubmit === "") {
    activityNameForSubmit = $.getActivity();
  }
  if (userNameForSubmit === null || userNameForSubmit === "") {
    userNameForSubmit = $.getUserName();
  }

  var custRow = new Array();
  var KYCRow = new Array();
  var TAXRow = new Array();
  var personalDetailsRow = new Array();
  var addressRow = new Array();
  var TAXResidencerow = new Array();
  var GSTrow = new Array();
  var custRowMaker = new Array();
  var KYCRowMaker = new Array();
  var previousActivityName;
  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if ($.isInActivities("ACO_Discrepancy")) {
      previousActivityName = "ACO_DVU";
    }

    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var newmap = new Object();
      var KYCMap = new Object();
      var TAXMap = new Object();
      var personalDetailsMap = new Object();
      var addressDetailsMap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            if ($(this).attr("storeType") === "cust") {
              newmap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "KYC") {
              KYCMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "PERSNL") {
              personalDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "FATCA") {
              TAXMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "ADDR") {
              addressDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "custALL") {
              newmap[$(this).attr("class")] = $(this).text();
              KYCMap[$(this).attr("class")] = $(this).text();
              personalDetailsMap[$(this).attr("class")] = $(this).text();
              TAXMap[$(this).attr("class")] = $(this).text();
              addressDetailsMap[$(this).attr("class")] = $(this).text();
            }
          }
        });
      custRow.push(newmap);
      KYCRow.push(KYCMap);
      personalDetailsRow.push(personalDetailsMap);
      TAXRow.push(TAXMap);
      addressRow.push(addressDetailsMap);
    });
    $("#GST_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      GSTrow.push(newmap);
    });
    $("#NI_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerowNI.push(newmap);
    });
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    $("#IND_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerow.push(newmap);
    });
  } else if ($.isInActivities("ACO_DVU")) {
    previousActivityName = "ACO_Case_Initiation";
    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var newmap = new Object();
      var KYCMap = new Object();
      var TAXMap = new Object();
      var personalDetailsMap = new Object();
      var addressDetailsMap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            if ($(this).attr("storeType") === "cust") {
              newmap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "KYC") {
              KYCMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "PERSNL") {
              personalDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "FATCA") {
              TAXMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "ADDR") {
              addressDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "custALL") {
              newmap[$(this).attr("class")] = $(this).text();
              KYCMap[$(this).attr("class")] = $(this).text();
              personalDetailsMap[$(this).attr("class")] = $(this).text();
              TAXMap[$(this).attr("class")] = $(this).text();
              addressDetailsMap[$(this).attr("class")] = $(this).text();
            }
          }
        });
      custRow.push(newmap);
      KYCRow.push(KYCMap);
      personalDetailsRow.push(personalDetailsMap);
      TAXRow.push(TAXMap);
      addressRow.push(addressDetailsMap);
    });
    //============SEND BACK FROM MAKER CASE =============================================

    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var newmapMaker = new Object();
      var KYCMapMaker = new Object();
      $(this)
        .find("td")
        .not("td[hidden]")
        .each(function () {
          if ($(this).attr("class") !== "FILLED_BY") {
            if ($(this).attr("storeType") === "cust") {
              newmapMaker[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "KYC") {
              KYCMapMaker[$(this).attr("class")] = $(this).text();
            }
          }
        });
      custRowMaker.push(newmapMaker);
      KYCRowMaker.push(KYCMapMaker);
    });
    $("#GST_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      GSTrow.push(newmap);
    });
    $("#NI_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerowNI.push(newmap);
    });
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    $("#IND_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerow.push(newmap);
    });
  } else if (
    $.isInActivities("ACO_Maker,ACO_Checker,ACO_QC,ACO_Data_Correction")
  ) {
    var GSTrow = new Array();
    var TAXResidencerowNI = new Array();
    $("#GST_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            if ($.isInActivities("ACO_QC")) {
              if ($(this).attr("class") === "FILLED_BY")
                newmap[$(this).attr("class")] = "ACO_QC";
              else newmap[$(this).attr("class")] = $(this).text();
            } else if ($.isInActivities("ACO_Data_Correction")) {
              if ($(this).attr("class") === "FILLED_BY")
                newmap[$(this).attr("class")] = "ACO_Data_Correction";
              else newmap[$(this).attr("class")] = $(this).text();
            } else newmap[$(this).attr("class")] = $(this).text();
          }
        });
      GSTrow.push(newmap);
    });
    $("#NI_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            if ($.isInActivities("ACO_QC")) {
              if ($(this).attr("class") === "FILLED_BY")
                newmap[$(this).attr("class")] = "ACO_QC";
              else newmap[$(this).attr("class")] = $(this).text();
            } else if ($.isInActivities("ACO_Data_Correction")) {
              if ($(this).attr("class") === "FILLED_BY")
                newmap[$(this).attr("class")] = "ACO_Data_Correction";
              else newmap[$(this).attr("class")] = $(this).text();
            } else newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerowNI.push(newmap);
    });
    //  console.log("GST ROW  : " + GSTrow);
    //  console.log("NON INDI TAX ROW : " + TAXResidencerowNI);
    var TAXResidencerow = new Array();
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    var custIdentNo = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    $("#IND_TAXRESIDENCE_TABLE tbody tr").each(function () {
      var newmap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($.isInActivities("ACO_QC")) {
            if ($(this).attr("class")) {
              if ($(this).attr("class") === "ROWID") {
                newmap[$(this).attr("class")] =
                  $.getActivity() + "_" + elementIndex;
              } else {
                newmap[$(this).attr("class")] = $(this).text();
              }
            }
          } else if ($.isInActivities("ACO_Data_Correction")) {
            if ($(this).attr("class")) {
              if ($(this).attr("class") === "ROWID") {
                newmap[$(this).attr("class")] =
                  $.getActivity() + "_" + elementIndex;
              } else {
                newmap[$(this).attr("class")] = $(this).text();
              }
            }
          } else {
            if ($(this).attr("class"))
              newmap[$(this).attr("class")] = $(this).text();
          }
        });
      TAXResidencerow.push(newmap);
      console.log("Individual Tax Residence Details : " + TAXResidencerow);
    });
    $("#CUSTDETAILS_TABLE tbody tr").each(function () {
      var newmap = new Object();
      var KYCMap = new Object();
      var TAXMap = new Object();
      var personalDetailsMap = new Object();
      var addressDetailsMap = new Object();
      $(this)
        .find("td")
        .each(function () {
          if ($(this).attr("class")) {
            if ($(this).attr("storeType") === "cust") {
              newmap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "KYC") {
              KYCMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "PERSNL") {
              personalDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "FATCA") {
              TAXMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "ADDR") {
              addressDetailsMap[$(this).attr("class")] = $(this).text();
            } else if ($(this).attr("storeType") === "custALL") {
              newmap[$(this).attr("class")] = $(this).text();
              KYCMap[$(this).attr("class")] = $(this).text();
              personalDetailsMap[$(this).attr("class")] = $(this).text();
              TAXMap[$(this).attr("class")] = $(this).text();
            }
          }
        });
      custRow.push(newmap);
      KYCRow.push(KYCMap);
      personalDetailsRow.push(personalDetailsMap);
      TAXRow.push(TAXMap);
      addressRow.push(addressDetailsMap);
    });
  }

  console.log(custRow);
  console.log(KYCRow);
  try {
    $.ajax({
      type: "POST",
      data:
        "CUST_DETAILS=" +
        encodeURIComponent(JSON.stringify(custRow)) +
        "&KYC_DETAILS=" +
        encodeURIComponent(JSON.stringify(KYCRow)) +
        "&PERSONAL_DETAILS=" +
        encodeURIComponent(JSON.stringify(personalDetailsRow)) +
        "&ADDRESS_DETAILS=" +
        encodeURIComponent(JSON.stringify(addressRow)) +
        "&TAX_DETAILS=" +
        encodeURIComponent(JSON.stringify(TAXRow)) +
        "&TAXRESIDENCE_DETAILS=" +
        encodeURIComponent(JSON.stringify(TAXResidencerow)) +
        "&GST_DETAILS=" +
        encodeURIComponent(JSON.stringify(GSTrow)) +
        "&TAXRESIDENCE_DETAILS_NI=" +
        encodeURIComponent(JSON.stringify(TAXResidencerowNI)) +
        "&custRowMaker=" +
        encodeURIComponent(JSON.stringify(custRowMaker)) +
        "&KYCRowMaker=" +
        encodeURIComponent(JSON.stringify(KYCRowMaker)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        activityNameForSubmit +
        "&ROWID=" +
        elementIndex +
        "&previousActivityName=" +
        previousActivityName +
        "&funcName=" +
        funcName +
        "&custIdentNo=" +
        custIdentNo +
        "&PINSTID=" +
        pinstIdForSubmit,
      url: "../../ACO/SRVInsertCustomerDetails",
      async: false,
      success: function (data) {
        //debugger;
        console.log(data);
        if (data >= 1) {
          saveDataFinalCustDetails = 1;
        } else {
          saveDataFinalCustDetails = 0;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("something went wrong");
      },
    });
  } catch (e) {
    alert("manageAccount::" + e);
    $body.removeClass("loading");
  }
}
function saveNIDetails() {
  //debugger;
  var NIArray = new Array();
  //    var OIrow = new Array();
  var GSTrow = new Array();
  var TAXResidencerow = new Array();
  $("#GST_TABLE tbody tr").each(function () {
    var newmap = new Object();
    $(this)
      .find("td")
      .each(function () {
        if ($(this).attr("class")) {
          if ($.isInActivities("ACO_QC")) {
            if ($(this).attr("class") === "FILLED_BY")
              newmap[$(this).attr("class")] = "ACO_QC";
            else newmap[$(this).attr("class")] = $(this).text();
          } else newmap[$(this).attr("class")] = $(this).text();
        }
      });
    GSTrow.push(newmap);
  });
  $("#NI_TAXRESIDENCE_TABLE tbody tr").each(function () {
    var newmap = new Object();
    $(this)
      .find("td")
      .each(function () {
        if ($(this).attr("class")) {
          if ($.isInActivities("ACO_QC")) {
            if ($(this).attr("class") === "FILLED_BY")
              newmap[$(this).attr("class")] = "ACO_QC";
            else newmap[$(this).attr("class")] = $(this).text();
          } else newmap[$(this).attr("class")] = $(this).text();
        }
      });
    TAXResidencerow.push(newmap);
  });
  //console.log(GSTrow);
  //console.log(TAXResidencerow);
  try {
    $.ajax({
      type: "POST",
      data:
        "GST_DETAILS=" +
        encodeURIComponent(JSON.stringify(GSTrow)) +
        "&TAXRESIDENCE_DETAILS=" +
        encodeURIComponent(JSON.stringify(TAXResidencerow)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&CURRENTACTIVITYNAME=" +
        $.getActivity() +
        "&PINSTID=" +
        $.getProcessInstanceId(),
      url: "../../ACO/SRVInsertNIDetails",
      success: function (data) {
        //                alert("Succesfully inserted");
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        alert("something went wrong");
      },
    });
  } catch (e) {
    alert("manageAccount::" + e);
    $body.removeClass("loading");
  }
}

var respg;
function submitSYS() {
  //debugger;

  var AccountID,
    AccountOpenBranch,
    PayOutInterval,
    NamesOfNGO = "",
    Percentage1 = "",
    SettingUpdatingDate,
    EnableDisableFlag,
    EnableDisableDate,
    AccountLinkedSYSAccount = "",
    Percentage2 = "",
    today;
  var today = moment().format("DD/MM/YYYY");
  $("#NGO_TABLE tbody tr").each(function () {
    NamesOfNGO = NamesOfNGO + $(this).find("td:nth-child(2)").text() + ",";
    Percentage1 = Percentage1 + $(this).find("td:nth-child(3)").text() + ",";
  });
  $("#SMILE_ACC_TABLE_TBODY tr").each(function () {
    AccountLinkedSYSAccount =
      AccountLinkedSYSAccount + $(this).find("td:nth-child(4)").text() + ",";
    Percentage2 =
      Percentage2 + $(this).find("td:nth-child(6) input[type=text").val() + ",";
  });
  AccountID = "1234";
  AccountOpenBranch = $("#OTHERDETAILS_REQ_BRANCH_ID").val();
  PayOutInterval = $("#INTEREST_FREQ").val();
  NamesOfNGO = NamesOfNGO ? NamesOfNGO.substr(0, NamesOfNGO.length - 1) : "";
  Percentage1 = Percentage1
    ? Percentage1.substr(0, Percentage1.length - 1)
    : "";
  SettingUpdatingDate = today;
  EnableDisableFlag = "Y";
  EnableDisableDate = today;
  AccountLinkedSYSAccount = AccountLinkedSYSAccount
    ? AccountLinkedSYSAccount.substr(0, AccountLinkedSYSAccount.length - 1)
    : "";
  Percentage2 = Percentage2
    ? Percentage2.substr(0, Percentage2.length - 1)
    : "";
  try {
    var SYSObj = {
      Data: {
        AccountID: AccountID,
        AccountOpenBranch: AccountOpenBranch,
        PayOutInterval: PayOutInterval,
        NamesOfNGO: NamesOfNGO,
        Percentage1: Percentage1,
        SettingUpdatingDate: SettingUpdatingDate,
        EnableDisableFlag: EnableDisableFlag,
        EnableDisableDate: EnableDisableDate,
        AccountLinkedSYSAccount: AccountLinkedSYSAccount,
        Percentage2: Percentage2,
      },
    };
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&DETAILS=" +
        encodeURIComponent(JSON.stringify(SYSObj)),
      success: function (data) {
        if (data.toString().startsWith("Error")) {
          alert(data);
          return false;
        } else if (data) {
          var resp = JSON.parse(data);
          respg = resp;
          if (resp.Error) {
            alert("[CRM] SYS response - " + resp.Error.Description);
          } else {
            alert("[CRM] SYS response - " + resp.Data.Message);
          }
        } else {
          alert("Something went wrong");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (ex) {
    alert("something went wrong");
    $body.removeClass("loading");
  }
}

function postDone() {
  //debugger;
  //alert("postDone")

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy")) {
    if (
      $("#SCHEME_CODE").val() === "1018" ||
      tableLoader.SCHEME_CODE === "1018"
    ) {
      saveSmileAccDetails();
    }
  }

  if (
    ($("#FORM_TYPE").val() === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual") &&
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU,ACO_QC,ACO_Data_Correction"
    ) &&
    ($("#UBO_FLAG").val() === "1" || tableLoader.UBO_FLAG === "1")
  ) {
    var constitution = $("#CONSTITUTION").val()
      ? $("#CONSTITUTION").val()
      : tableLoader.CONSTITUTION;
    switch (constitution) {
      // Commented By Vikas
      // case  '6':
      // case  '3':
      // case  '7':
      case "100":
        saveUBODetails();
    }
  }

  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_DVU,ACO_Maker,ACO_Checker,ACO_QC,ACO_Discrepancy,ACO_Data_Correction,ACO_Compliance"
    )
  ) {
    insertRemarksDetails();
  }

  if ($.getActivity() === "ACO_Compliance") {
    insertComplianceDocDetailsInDB();
  }

  if (
    $.isInActivities(
      "ACO_Case_Initiation,ACO_Maker,ACO_Checker,ACO_QC,ACO_DVU,ACO_Discrepancy,ACO_Data_Correction"
    )
  ) {
    saveCustomerDetails("Submit");
    if (saveDataFinalCustDetails === 0) {
      console.log("Exception arised while saving data!!!");
      return false;
    } else {
      return true;
    }
  }

  if ($.isInActivities("ACO_QC") && $("#SCHEME_CODE").val() === "1018") {
    submitSYS();
  }

  //==================================EXCEPTION SAVING INTO DB==============================================================
  if ($.getActivity() === "ACO_DVU" || $.getActivity() === "ACO_Discrepancy") {
    if (hidedRow === "CL") {
      objectHidedRow.remove();
    }
    //deleteExceptionFromDB();
    insertExceptionIntoDB();
  }
}

var masterToLoad = new Object();
function callMasterDataFromServlet() {
  //debugger;
  var masterToCall = new Object();
  var condition = "";
  var formType = tableLoader.FORM_TYPE;
  var addFormType = tableLoader.ADDNL_FORM_TYPE;
  if (
    tableLoader.SCHEME_CODE_ID !== null &&
    tableLoader.SCHEME_CODE_ID !== ""
  ) {
    condition = tableLoader.SCHEME_CODE_ID;
  }

  if ($.isInActivities("ACO_Case_Initiation,ACO_Discrepancy,ACO_DVU")) {
    masterToCall["WCKIT_TYPE"] = "MST_ZUTBLKIT_T";
    masterToCall["ACCOUNT_RELN_CODE"] = condition;
  } else if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH,ACO_Data_Correction"
    )
  ) {
    masterToCall["WCKIT_TYPE"] = "MST_ZUTBLKIT_T";
    masterToCall["ACCOUNT_RELN_CODE"] = condition;
    masterToCall["IND_ISPOLITICALLY_EXPOSED"] = "MST_ZUTBLPEP_T";
    masterToCall["KYC_VERIFIER_ORG_CODE"] = "MST_ZUTBLKYCORG_T";
    masterToCall["KYC_DOCUMENT"] = "MST_ZUTBLVERDOCTYP_T";
    masterToCall["CKYC_ACC_TYPE"] = "MST_ZUTBLCKYCACTYP_T";
    masterToCall["M1_NI_FD_ISFORM15ATTACHED"] = "MST_UTBLINTWR_T";
    masterToCall["M1_NI_FATCA_ADDRTYPE"] = "mst_ZUTBLADDTYP_t";
  }

  if (
    $.isInActivities(
      "ACO_QC,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH,ACO_Data_Correction"
    )
  ) {
    masterToCall["POI_TYPE"] = "MST_ZUTBLPOI_T";
    masterToCall["POA_TYPE"] = "MST_ZUTBLPOA_T";
  }

  //debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/MasterDataFetch",
      data: "masterToCall=" + encodeURIComponent(JSON.stringify(masterToCall)),
      async: false,
      success: function (data) {
        // console.log(data);
        masterToLoad = data;
        // console.log("MASTERDATA " + masterToLoad);

        for (var i in masterToLoad) {
          var idName = i;
          var idVal = masterToLoad[i];
          for (var j in idVal) {
            if (idName === "ACCOUNT_RELN_CODE") {
              if (formType === "NRI" && addFormType === "Savings") {
                if (j === "A" || j === "B" || j === "MI") {
                  $("#" + idName).append(
                    "<option id=" +
                      j +
                      " value='" +
                      j +
                      "'>" +
                      idVal[j] +
                      "</option>"
                  );
                }
              } else {
                $("#" + idName).append(
                  "<option id=" +
                    j +
                    " value='" +
                    j +
                    "'>" +
                    idVal[j] +
                    "</option>"
                );
              }
            } else {
              $("#" + idName).append(
                "<option id=" +
                  j +
                  " value='" +
                  j +
                  "'>" +
                  idVal[j] +
                  "</option>"
              );
            }
            if (idName === "M1_NI_FD_ISFORM15ATTACHED") {
              $("#NI_FD_ISFORM15ATTACHED").append(
                "<option id=" +
                  j +
                  " value='" +
                  j +
                  "'>" +
                  idVal[j] +
                  "</option>"
              );
              $("#NI_FD_ISFORM15ATTACHED").val(
                tableLoader.NI_FD_ISFORM15ATTACHED
              );
            }
            if (idName === "M1_NI_FATCA_ADDRTYPE") {
              $(
                "#NI_FATCA_ADDRESS_TYPE,#ADD_TYPE_FATCA,#NI_FATCA_ADDRTYPE"
              ).append(
                "<option id=" +
                  j +
                  " value='" +
                  j +
                  "'>" +
                  idVal[j] +
                  "</option>"
              );
              $("#NI_FATCA_ADDRESS_TYPE").val(
                tableLoader.NI_FATCA_ADDRESS_TYPE
              );
              $("#ADD_TYPE_FATCA").val(tableLoader.ADD_TYPE_FATCA);
              $("#NI_FATCA_ADDRTYPE").val(tableLoader.NI_FATCA_ADDRTYPE);
            }
          }
          $("#" + idName).val(tableLoader[idName]);
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
  }
}
function emailVerify(id) {
  debugger;
  if ($("#" + id).val() === "") {
    return;
  }
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      data:
        "DETAILS=" +
        $("#" + id).val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      async: false,
      success: function (data) {
        if (data.startsWith("Error")) {
          alert(data);
          $("#" + id).val("");
          return;
        } else if (data.startsWith("Match")) {
          alert("This Domain not Allowed");
          $("#" + id).val("");
          return;
        } else {
          alert(data);
        }
      },
      error: function (jqXHR, error, errorThrown) {
        $body.removeClass("loading");
        errorHandler(jqXHR, error, errorThrown);
        return false;
      },
    });
  } catch (e) {
    console.log("====Exception occured while fetching values=====" + e);
  }
}

function getDropDownPerFormTypeAndAct() {
  var formType = $("#FORM_TYPE").val();
  callMasterDataFromServlet();
  if ($.isInActivities("ACO_Case_Initiation")) {
    getDropDownValuesFromMaster();
    if (
      formType === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      getEntityType();
      getSubSegment();
    }
  } else if ($.isInActivities("ACO_Discrepancy")) {
    getDropDownValuesFromMaster();
    if (
      formType === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      getEntityType();
      getSubSegment();
    }
  } else if ($.isInActivities("ACO_DVU")) {
    getDropDownValuesFromMaster();
    if (
      formType === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      getEntityType();
      getSubSegment();
      getCountryOfIncorporationM1();
      getPortfolioMaster();
      getSBRMaster();
    }
  } else if ($.isInActivities("ACO_Compliance")) {
    getKYCAddressProof();
    getKYCIDProof();
  } else if (
    $.isInActivities(
      "ACO_Maker,ACO_Checker,ACO_QC,ACO_End,ACO_RCU,RCU_OPS,RCU_BRANCH,ACO_Data_Correction,DEFERRAL_COMPLIANCE,DEFERRAL_BRANCH"
    )
  ) {
    getDropDownValuesFromMaster();
    countryMasterDefault();
    getEmailFrequency();
    getPrincipalOnMaturity();
    getPortfolioMaster();
    getSBRMaster();
    if ($.isInActivities("ACO_Maker,ACO_Checker")) {
      getStateForIndiNonIndi();
    }

    if (
      formType === "Non Individual" ||
      tableLoader.FORM_TYPE === "Non Individual"
    ) {
      getEntityType();
      getSubSegment();
      getNatureOfBusiness();
      getNatureOfIndustry();
    }

    if (formType === "NRI" || tableLoader.FORM_TYPE === "NRI") {
      getVisaType();
    }
  }
}

function getStoredStatementList() {
  var storedStatementList = new Array();
  return storedStatementList;
}

function getComplexList() {
  //        alert("getComplexList")
  var ComplexList = new Array();
  return ComplexList;
}

function designForm() {}

function formatDate(date) {
  debugger;
  var mm = date.getMonth() + 1;
  var dd = date.getDate();
  var yyyy = date.getFullYear();
  mm = mm < 10 ? "0" + mm : mm;
  dd = dd < 10 ? "0" + dd : dd;
  return yyyy + "-" + mm + "-" + dd;
}

// start Akash 25/06/2022
function validateUTRN() {
  debugger;
  if ($.getActivityName() === "ACO_QC") {
    try {
      if (
        $("#NI_INITIALPAYMENT_TRANSID").val() !== "" &&
        $("#NI_INITIALPAYMENT_TRANSDATE").val() !== "" &&
        $("#NI_INITIALPAYMENT_TRANSAMT").val() !== "" &&
        $("#NI_INITIALPAYMENT_VALUEDATE").val() !== ""
      ) {
        $.ajax({
          type: "POST",
          data:
            "M1_NI_INITIALPAYMENT_TRANSDATE=" +
            $("#NI_INITIALPAYMENT_TRANSDATE").val() +
            "&M1_NI_INITIALPAYMENT_TRANSID=" +
            $("#NI_INITIALPAYMENT_TRANSID").val() +
            "&M1_NI_INITIALPAYMENT_VALUEDATE=" +
            $("#NI_INITIALPAYMENT_VALUEDATE").val() +
            "&PINSTID=" +
            ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
            "&OPERATION=" +
            arguments.callee.name,
          url: "../ACO/GenericService",
          success: function (data) {
            if (data) {
              if (data.toString().startsWith("Error")) {
                //                                $("#NI_INITIALPAYMENT_TRANSAMT").val("");
                $("#UTRN_CHECK_CHECKER").val("FAIL");
                alert(data);
                return false;
              } else {
                const obj1 = JSON.parse(data);
                var errmessage = obj1.Error;
                if (errmessage === "") {
                  var amt = obj1.amountUTRN;
                  var soleid = obj1.soleid;
                  if (
                    parseInt($("#NI_INITIALPAYMENT_TRANSAMT").val()) ===
                    parseInt(amt)
                  ) {
                    $("#UTRN_CHECK_CHECKER").val(
                      "AMOUNT MATCHED " +
                        $("#NI_INITIALPAYMENT_TRANSAMT").val() +
                        "/" +
                        $("#NI_INITIALPAYMENT_TRANSDATE").val() +
                        "/" +
                        $("#NI_INITIALPAYMENT_TRANSID").val()
                    );
                    alert("AMOUNT MATCHED");
                  } else {
                    alert("AMOUNT NOT MATCHED ,UTRN AMOUNT = " + amt);
                  }
                } else {
                  //                                    $("#NI_INITIALPAYMENT_TRANSAMT").val("");
                  $("#UTRN_CHECK_CHECKER").val("FAIL");
                  alert(errmessage);
                }
              }
            } else {
              //                            $("#NI_INITIALPAYMENT_TRANSAMT").val("");
              $("#UTRN_CHECK_CHECKER").val("FAIL");
              alert("No response received from validateUTRN");
            }
          },
          error: function (jqXHR, error, errorThrown) {
            //                        $("#NI_INITIALPAYMENT_TRANSAMT").val("");
            $("#UTRN_CHECK_CHECKER").val("FAIL");
            errorHandler(jqXHR, error, errorThrown);
            alert("Something went wrong");
            $body.removeClass("loading");
          },
        });
      } else {
        if ($("#NI_INITIALPAYMENT_TRANSID").val() == "") {
          alert("Kindly fill Transaction Id");
        }
        alert("");
        console.log("FILL ALL 3 MANDATORY FIELDS");
      }
    } catch (e) {
      //            $("#NI_INITIALPAYMENT_TRANSAMT").val("");
      $("#UTRN_CHECK_CHECKER").val("FAIL");
      alert("validateUTRN::" + e);
      $body.removeClass("loading");
    }
  }
}

function customerModification(obj) {
  var requestObj = new Object();
  debugger;
  var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .parent()
    .parent()
    .index();
  if (elementIndex === -1) {
    alert("Please Select A Customer");
    return;
  }
  if (obj.find(".IND_IS_EXISTING").text() === "New") {
    alert("New Customer Modification is not Allowed");
    return;
  }
  if (
    obj.find(".IND_IS_EXISTING").text() === "Existing" &&
    obj.find(".REKYC_INDI").text() === "N"
  ) {
    alert("Customer Modification is not Allowed");
    return;
  }
  requestObj = {
    CustomerType: "R",
    Title: obj.find(".TITLE").text(),
    FirstName: obj.find(".IND_FIRST_NAME").text(),
    MiddleName: obj.find(".IND_MIDDLE_NAME").text(),
    LastName: obj.find(".IND_LAST_NAME").text(),
    DOB: obj.find(".IND_DOB").text().split("-").join("/"),
    RegisteredMobile: obj.find(".IND_MOBILE").text(),
    EmailAddress: obj.find(".IND_EMAIL").text(),
    ResidentialStatus: obj.find(".IND_RESIDENTIAL_STATUS").text(),
    Gender: obj.find(".IND_GENDER").text(),
    ReKYCFlag: obj.find(".REKYC_INDI").text(),
    ReKYCDate: $.getCurrentDate().toStringObject("dd-mm-yy"),
    MaritalStatus: obj.find(".IND_MARITAL_STATUS").text(),
    Education: obj.find(".PERSNL_QUALIFICATION").text(),
    Religion: obj.find(".RELIGION").text(),
    Caste: obj.find(".IND_CATEGORY").text(),
    PrefixFatherName: obj.find(".IND_FATHER_PREFIX").text(),
    FatherName:
      obj.find(".IND_FATHER_FRST_NAME").text() +
      " " +
      obj.find(".IND_FATHER_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_FATHER_LAST_NAME").text(),
    PrefixMotherName: obj.find(".IND_MOTHER_PREFIX").text(),
    MotherMaidenName:
      obj.find(".IND_MOTHER_FRST_NAME").text() +
      " " +
      obj.find(".IND_MOTHER_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_MOTHER_LAST_NAME").text(),
    PrefixMaidenName: obj.find(".IND_MAIDEN_PREFIX").text(),
    MaidenName:
      obj.find(".IND_MAIDEN_FRST_NAME").text() +
      " " +
      obj.find(".IND_MAIDEN_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_MAIDEN_LAST_NAME").text(),
    PlaceOfBirth: obj.find(".CITYOFBIRTH").text(),
    Nationality: obj.find(".NATIONALITY").text(),
    ParentGuardianName: obj.find(".GUARDIAN_NAME").text(),
    Relationship: obj.find(".IND_RELATIONSHIP_CODE").text(),
    GuardianCIFNumber: obj.find(".IND_GUARDIAN_CIF").text(),
    AdultDependent: obj.find(".NUMBER_OF_ADULTS").text(),
    ChildDependent: obj.find(".NUMBER_OF_MINORS").text(),
    EmployeeCode: obj.find(".EMP_CODE").text(),
    Occupation: obj.find(".OCCUPATION").text(),
    WorkingCompany: obj.find(".WORKING_COMPANY").text(),
    GrossAnnualIncome: obj.find(".GROSS_INCOME").text(),
    BusinessNature: obj.find(".PERSNL_NATURE_OF_BUSINESS").text(),
    MonthlyIncome: obj.find(".GROSS_INCOME").text(),
    PrefferedAddressForCommunication: obj.find(".ADDRESS_TYPE").text(),
    AlternateMobile: obj.find(".IND_ALT_MOBILE").text(),
    NetWorth: obj.find(".IND_NET_WORTH").text(),
    FatcaCompliance: obj.find(".FATCA_APPLICABLE").text(),
    FatcaAddressType: obj.find(".ADD_TYPE_FATCA").text(),
    FaxNumber: obj.find(".IND_FAX").text(),
    CustomerTaxDetails: obj.find(".TAX_RES_ID_NO").text(),
    DNDEmail: obj.find(".DND_SERVICE").text(),
    CKYCRLastUpdate: obj
      .find(".CKYC_DECLARATION_DATE")
      .text()
      .split("-")
      .join("/"),
    AMLScreening: obj.find(".NI_AML_CHECK_RESULT").text(),
    KYCCustomerDeclare: obj.find(".KYC_DECLARATIONPLACE").text(),
    KYCVerifierName: obj.find(".KYC_VERIFIERNAME").text(),
    KYCVerifierId: obj.find(".KYC_VERIFIER_ID").text(),
    KYCVerifierDesignation: obj.find(".KYC_VERIFIER_DESIGNATION").text(),
    KYCVerifierOrgName: obj.find(".KYC_VERIFIER_ORG").text(),
    KYCVerifierOrgCode: obj.find(".KYC_VERIFIER_ORG_CODE").text(),
    KYCVerificationDate: obj
      .find(".KYC_VERIFY_DATE")
      .text()
      .split("-")
      .join("/"),
    KYCVerificationBranch: obj.find(".KYC_VERIFY_BRANCH").text(),
    KYCVerificationDocType: obj.find(".KYC_DOCUMENT").text(),
    CKYCAccountType: obj.find(".CKYC_ACC_TYPE").text(),
    CKYCApplicationType: obj.find(".CKYC_APP_TYPE").text(),
    MailingAddressType: obj.find(".ADDRESS_TYPE").text(),
    PermanentAddressType: obj.find(".ADDRESS_TYPE").text(),
    CKYCDateOfDeclaration: obj
      .find(".CKYC_DECLARATION_DATE")
      .text()
      .split("-")
      .join("/"),
    PrefixSpouseName: obj.find(".IND_SPOUSE_PREFIX").text(),
    SpouseName:
      obj.find(".IND_SPOUSE_FRST_NAME").text() +
      " " +
      obj.find(".IND_SPOUSE_MIDDLE_NAME").text() +
      " " +
      obj.find(".IND_SPOUSE_LAST_NAME").text(),
    MobileBanking: obj.find(".MOBILE_BANKING").text(),
    PhysicalStatus: obj.find(".PHYSICAL_STATUS").text(),
    InternetBanking: obj.find(".INTERNET_SERVICE").text(),
    SMSRegistration: obj.find(".SMS_SERVICE").text(),
    SMSCustomer: obj.find(".SMS_SERVICE").text(),
    StatementByEmail: obj.find(".EMAIL_SERVICE").text(),
    PoliticallyExposedPerson: obj.find(".IND_ISPOLITICALLY_EXPOSED").text(),
    Form60: obj.find(".OTHERDETAILS_FORM_SIXTY").text(),
    DND: obj.find(".DND_SERVICE").text(),
    BSR4Level1: obj.find(".BSR_FIRST").text(),
    BSR4Level2: obj.find(".BSR_SECOND").text(),
    BSR4Level3: obj.find(".BSR_THIRD").text(),
    EmailStatementFrequency: obj.find(".FREQ_EMAIL").text(),
    Source: "SER",
    UserId: "S7070",
    CRMUserId: "S7070",
  };
  if (obj.find(".PINCODE_PERM").text() === "") {
    requestObj += {
      AddressType: "P",
      Address1: obj.find(".ADD_LINE1_PERM").text(),
      Address2: obj.find(".ADD_LINE2_PERM").text(),
      Address3: obj.find(".ADD_LINE3_PERM").text(),
      Landmark: obj.find(".LANDMARK_PERM").text(),
      Taluka: obj.find(".TALUKA_PERM").text(),
      District: obj.find(".DISTRICT_PERM").text(),
      PinCode: obj.find(".PINCODE_PERM").text(),
      City: obj.find(".CITY_PERM").text(),
      State: obj.find(".STATE_PERM").text(),
      Country: obj.find(".COUNTRY_PERM").text(),
    };
  }
  if (obj.find(".PINCODE_RESI").text() === "") {
    requestObj += {
      AddressType1: "R",
      Address11: obj.find(".ADDRESS_LINE1_RESI").text(),
      Address12: obj.find(".ADDRESS_LINE2_RESI").text(),
      Address13: obj.find(".ADDRESS_LINE3_RESI").text(),
      Landmark1: obj.find(".LANDMARK_RESI").text(),
      Taluka1: obj.find(".TALUKA_RESI").text(),
      District1: obj.find(".DISTRICT_RESI").text(),
      PinCode1: obj.find(".PINCODE_RESI").text(),
      City1: obj.find(".CITY_RESI").text(),
      State1: obj.find(".STATE_RESI").text(),
      Country1: obj.find(".COUNTRY_RESI").text(),
    };
  }

  if (obj.find(".PINCODE_OFF").text() === "") {
    requestObj += {
      AddressType2: "O",
      Address21: obj.find(".ADD_LINE1_OFF").text(),
      Address22: obj.find(".ADD_LINE2_OFF").text(),
      Address23: obj.find(".ADD_LINE3_OFF").text(),
      Landmark2: obj.find(".LANDMARK_OFF").text(),
      Taluka2: obj.find(".TALUKA_OFF").text(),
      District2: obj.find(".DISTRICT_OFF").text(),
      PinCode2: obj.find(".PINCODE_OFF").text(),
      City2: obj.find(".CITY_OFF").text(),
      State2: obj.find(".STATE_OFF").text(),
      Country2: obj.find(".COUNTRY_OFF").text(),
    };
  }
  var documentObj = {
    PASSPORT: obj.find(".IND_PASSPORT").text(),
    PassportIssue: obj.find(".IND_PASSPORT_ISSUE_DATE").text(),
    PassportExpire: obj.find(".IND_PASSPORT_EXPIRY_DATE").text(),
    AADHAR: obj.find(".IND_AADHAR_NUMBER").text(),
    PAN: obj.find(".IND_PAN_NUMBER").text(),
    RATION: obj.find(".IND_RATION_CARD").text(),
    RationIssue: obj.find(".IND_RATIONCARD_ISSUE_DATE").text(),
    RationExpire: obj.find(".IND_RATIONCARD_EXPIRY_DATE").text(),
    NREGA: obj.find(".IND_NREGA_CARD").text(),
    NREGAIssue: obj.find(".IND_NREGA_ISSUE_DATE").text(),
    NREGAExpire: obj.find(".IND_NREGA_EXPIRY_DATE").text(),
    VOTERID: obj.find(".IND_VOTERS_ID").text(),
    DL: obj.find(".IND_DRIVING_LICENSE").text(),
    DLIssue: obj.find(".IND_DRLICENSE_ISSUE_DATE").text(),
    DLExpire: obj.find(".IND_DRLICENSE_EXPIRY_DATE").text(),
    VISA: obj.find(".VISA_NO").text(),
    VisaIssue: obj.find(".VISA_ISSUE_DATE").text(),
    VisaExpire: obj.find(".VISA_VALID_DATE").text(),
  };
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(requestObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&CIFNUMBER=" +
        obj.find(".IND_CIF_NUMBER").text() +
        "&DOCOBJ=" +
        encodeURIComponent(JSON.stringify(documentObj)) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        if (data.toString().startsWith("Error")) {
          alert(data);
          isModify = false;
        } else if (data) {
          alert(data);
          obj.find(".MODIFICATION").text("Y");
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
        //                isModify = false;
      },
    });
  } catch (e) {
    alert("customerModification::" + e);
    $body.removeClass("loading");
  }
  //    return isModify;
}

function NIcustomerModification() {
  if ($("#NI_EXISTING_CUST").val() === "New") {
    alert("New Customer Modification is not Allowed");
    return;
  }
  if (
    $("#NI_EXISTING_CUST").val() === "Existing" &&
    $.getValue("NI_RE_KYC") === "N"
  ) {
    alert("Customer Modification is not Allowed");
    return;
  }
  var requestObj = new Object();
  var requestObj = {
    CustomerType: "C",
    BranchCode: $("#OTHERDETAILS_REQ_BRANCH_ID").val(),
    FirstName: $("#NI_CUSTNAME").val(),
    BusinessNature: $("#NATURE_OF_BUSINESS").val(),
    AnnualTurnover: $("#ENTITY_ANNUAL_TURNOVER").val(),
    RegisteredMobile: $("#NI_CONTACT_MOB").val(),
    EmailAddress: $("#NI_CONTACT_EMAIL").val(),
    FatcaCompliance: $("#NI_FATCA_DROPDOWN").val(),
    FatcaAddressType: $("#NI_FATCA_ADDRTYPE").val(),
    FaxNumber: $("#NI_CONTACT_FAX").val(),
    AMLScreening: $("#NI_AML_CHECK_RESULT").val(),
    MailingAddressType: $("#NI_PREF_MAILADDR").val(),
    MobileBanking: $("#NI_SERVICEMOBBANKING").val() === "on" ? "Y" : "N",
    InternetBanking: $("#NI_SERVICEINTERNET").val() === "on" ? "Y" : "N",
    SMSRegistration: $("#NI_SERVICESMS").val() === "on" ? "Y" : "N",
    SMSCustomer: $("#NI_SERVICESMS").val() === "on" ? "1" : "N",
    StatementByEmail: $("#NI_SERVICEEMAIL").val() === "on" ? "Y" : "N",
    ReKYCFlag: $("#NI_RE_KYC").val() === "on" ? "Y" : "N",
    ReKYCDate: $.getCurrentDate().toStringObject("dd-mm-yy"),
    DateOfIncorporation: $("#NI_DATE_INCORPORATION").val()
      ? $("#NI_DATE_INCORPORATION").val()
      : "",
    RegistrationNumber: $("#NI_REGISTRATION_NUMBER").val(),
    DND: $("#NI_SERVICEDND").val() === "on" ? "Y" : "N",
    DateOfCommencement:
      $("#NI_BUSINESS_COMMENCEMENT_DATE").val() !== undefined
        ? $("#NI_BUSINESS_COMMENCEMENT_DATE").val()
        : "",
    CountryOfRegistration: $("#NI_COUNTRY_INCORPORATION").val(),
    EmailStatementFrequency: $("#NI_FREQ_EMAIL").val(),
    TANNumber: $("#NI_TAN_NUMBER").val(),
    TradeLicenseNo: $("#NI_OTHERINFO_TRADENO").val(),
    SalesTaxNo: $("#NI_OTHERINFO_STREGNO").val(),
    AddressType: "R",
    Address1: $("#NIOFFC_ADD_LINE1").val(),
    Address2: $("#NIOFFC_ADD_LINE2").val(),
    Address3: $("#NIOFFC_ADD_LINE3").val(),
    Landmark: $("#NIOFFC_LANDMARK").val(),
    Taluka: $("#NIOFFC_TALUKA").val(),
    District: $("#NIOFFC_DISTRICT").val(),
    PinCode: $("#NIOFFC_PINCODE").val(),
    City: $("#NIOFFC_CITY").val(),
    State: $("#NIOFFC_STATE").val(),
    Country: $("#NIOFFC_COUNTRY").val(),
    AddressType1: "P",
    Address11: $("#NICORR_ADD_LINE1").val(),
    Address12: $("#NICORR_ADD_LINE2").val(),
    Address13: $("#NICORR_ADD_LINE3").val(),
    Landmark1: $("#NICORR_LANDMARK").val(),
    Taluka1: $("#NICORR_TALUKA").val(),
    District1: $("#NICORR_DISTRICT").val(),
    PinCode1: $("#NICORR_PINCODE").val(),
    City1: $("#NICORR_CITY").val(),
    State1: $("#NICORR_STATE").val(),
    Country1: $("#NICORR_COUNTRY").val(),
    AddressType2: $("#NI_FATCA_DROPDOWN").val() === "1" ? "T" : "",
    Address21: $("#FNI_FATCA_TAXADDR1").val(),
    Address22: $("#FNI_FATCA_TAXADDR2").val(),
    Address23: $("#FNI_FATCA_TAXADDR3").val(),
    Landmark2: $("#FNI_FATCA_LANDMARK").val(),
    PinCode2: $("#FNI_FATCA_PIN").val(),
    City2: $("#NI_FATCA_CITY").val(),
    State2: $("#NI_FATCA_STATE").val(),
    Country2: $("#NI_FATCA_COUNTRY").val(),
    Source: "IEX",
    UserId: "14508",
    CRMUserId: "14508",
    PlaceOfIncorporation: $("#NI_CITY_INCORPORATION").val(),
  };
  var docObj = new Object();
  var docObj = {
    CPAN: $("#NI_PAN_NUMBER").val(),
    UDYOGAADHAR: $("#NI_UDYOG_AADHAR").val(),
    CIN: $("#NI_COMPANY_ID").val(),
    TAN: $("#NI_TAN_NUMBER").val(),
    GSTIN: $("#NI_GST_NUMBER").val(),
  };
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        encodeURIComponent(JSON.stringify(requestObj)) +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&CIFNUMBER=" +
        $("#NI_CIF_NUMBER").val() +
        "&DOCOBJ=" +
        encodeURIComponent(JSON.stringify(docObj)) +
        "&OPERATION=customerModification",
      url: "../ACO/GenericService",
      success: function (data) {
        if (data.toString().startsWith("Error")) {
          alert(data);
          isModify = false;
        } else if (data) {
          alert(data);
          $("#NI_MODIFICATION").text("Y");
        } else {
          alert("No response received");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("customerModification::" + e);
    $body.removeClass("loading");
  }
}

function validateIFSC() {
  debugger;
  //As discussed with swapnil change principal to interest
  var anotherAccInterest = $("#NI_FD_INTERESTONMATURITY").val();
  var anotherAccPrinciple = $("#NI_FD_AMTONMATURITY").val();
  if (anotherAccInterest !== "2" && anotherAccPrinciple !== "2") {
    alert("Validation is only for Another Account");
    return;
  }
  $body.addClass("loading");
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        $("#NI_FD_IFSC").val() +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        $body.removeClass("loading");
        var ifsc = data;
        if (ifsc.startsWith("Error")) {
          alert(ifsc);
          $("#NI_FD_IFSC_MATCH").val(ifsc).addClass("changed");
        } else {
          $("#NI_FD_IFSC_MATCH").val(ifsc).addClass("changed");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("customerModification::" + e);
    $body.removeClass("loading");
  }
}

function validatevaluedate() {
  var validatevaluedatecon = 0;
  if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "RD"
  ) {
    if (
      $("#M1_NI_RD_PERIOD_DAYS").val() !== "" &&
      $("#M1_NI_RD_PERIOD_DAYS").val() !== null
    ) {
      if (
        $("#M1_NI_RD_PERIOD_YEARS").val() !== "" &&
        $("#M1_NI_RD_PERIOD_MON").val() !== ""
      ) {
        if (
          ($("#M1_NI_RD_PERIOD_YEARS").val() == "0" ||
            $("#M1_NI_RD_PERIOD_YEARS").val() == null) &&
          ($("#M1_NI_RD_PERIOD_MON").val() == "0" ||
            $("#M1_NI_RD_PERIOD_MON").val() == null)
        ) {
          var today = new Date();
          var valuedatemonth = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(0, $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-"));
          var valuedateday = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-") + 1,
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-")
            );
          var valuedateyear = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-") + 1
            );
          var valuedate = new Date(
            valuedateday + "-" + valuedatemonth + "-" + valuedateyear
          );
          var differencenoofdays =
            (today.getTime() - valuedate.getTime()) / (1000 * 3600 * 24);
          var fornoofdays = $("#M1_NI_RD_PERIOD_DAYS").val();
          console.log("fornoofdays = " + fornoofdays);
          if (fornoofdays > differencenoofdays) {
            validatevaluedatecon = 1;
          } else {
            $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
            alert("Please reverify the value date");
          }
        } else {
          console.log("Either period month or year is not 0 or null");
        }
      } else {
        $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
        alert("Either period month or year is blank");
      }
    } else {
      $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
      alert("Please enter Period Days First");
    }
  } else if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "FD"
  ) {
    if (
      $("#M1_NI_FD_PERIOD_DAYS").val() !== "" &&
      $("#M1_NI_FD_PERIOD_DAYS").val() !== null
    ) {
      if (
        $("#M1_NI_FD_PERIOD_YEARS").val() !== "" &&
        $("#M1_NI_FD_PERIOD_MON").val() !== ""
      ) {
        if (
          ($("#M1_NI_FD_PERIOD_YEARS").val() == "0" ||
            $("#M1_NI_FD_PERIOD_YEARS").val() == null) &&
          ($("#M1_NI_FD_PERIOD_MON").val() == "0" ||
            $("#M1_NI_FD_PERIOD_MON").val() == null)
        ) {
          var today = new Date();
          var valuedatemonth = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(0, $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-"));
          var valuedateday = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-") + 1,
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-")
            );
          var valuedateyear = $("#M1_NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#M1_NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-") + 1
            );
          var valuedate = new Date(
            valuedateday + "-" + valuedatemonth + "-" + valuedateyear
          );
          var differencenoofdays =
            (today.getTime() - valuedate.getTime()) / (1000 * 3600 * 24);
          var fornoofdays = $("#M1_NI_FD_PERIOD_DAYS").val();
          if (fornoofdays > differencenoofdays) {
            validatevaluedatecon = 1;
          } else {
            $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
            alert("Please reverify the value date");
          }
        } else {
          console.log("Either period month or year is not 0 or null");
        }
      } else {
        $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
        alert("Either period month or year is blank");
      }
    } else {
      $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
      alert("Please enter Period Days First");
    }
  } else if (
    $.getActivityName() == "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() == "FD"
  ) {
    if (
      $("#NI_FD_PERIOD_DAYS").val() !== "" &&
      $("#NI_FD_PERIOD_DAYS").val() !== null
    ) {
      if (
        $("#NI_FD_PERIOD_YEARS").val() !== "" &&
        $("#NI_FD_PERIOD_MON").val() !== ""
      ) {
        if (
          ($("#NI_FD_PERIOD_YEARS").val() == "0" ||
            $("#NI_FD_PERIOD_YEARS").val() == null) &&
          ($("#NI_FD_PERIOD_MON").val() == "0" ||
            $("#NI_FD_PERIOD_MON").val() == null)
        ) {
          var today = new Date();
          var valuedatemonth = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(0, $("#NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-"));
          var valuedateday = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-") + 1,
              $("#NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-")
            );
          var valuedateyear = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-") + 1
            );
          var valuedate = new Date(
            valuedateday + "-" + valuedatemonth + "-" + valuedateyear
          );
          var differencenoofdays =
            (today.getTime() - valuedate.getTime()) / (1000 * 3600 * 24);
          var fornoofdays = $("#NI_FD_PERIOD_DAYS").val();
          if (fornoofdays > differencenoofdays) {
            validatevaluedatecon = 1;
          } else {
            $("#NI_INITIALPAYMENT_VALUEDATE").val("");
            alert("Please reverify the value date");
          }
        } else {
          console.log("Either period month or year is not 0 or null");
        }
      } else {
        $("#NI_INITIALPAYMENT_VALUEDATE").val("");
        alert("Either period month or year is blank");
      }
    } else {
      $("#NI_INITIALPAYMENT_VALUEDATE").val("");
      alert("Please enter Period Days First");
    }
  } else if (
    $.getActivityName() == "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() == "RD"
  ) {
    if (
      $("#NI_RD_PERIOD_DAYS").val() !== "" &&
      $("#NI_RD_PERIOD_DAYS").val() !== null
    ) {
      if (
        $("#NI_RD_PERIOD_YEARS").val() !== "" &&
        $("#NI_RD_PERIOD_MON").val() !== ""
      ) {
        if (
          ($("#NI_RD_PERIOD_YEARS").val() == "0" ||
            $("#NI_RD_PERIOD_YEARS").val() == null) &&
          ($("#NI_RD_PERIOD_MON").val() == "0" ||
            $("#NI_RD_PERIOD_MON").val() == null)
        ) {
          var today = new Date();
          var valuedatemonth = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(0, $("#NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-"));
          var valuedateday = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#NI_INITIALPAYMENT_VALUEDATE").val().indexOf("-") + 1,
              $("#NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-")
            );
          var valuedateyear = $("#NI_INITIALPAYMENT_VALUEDATE")
            .val()
            .slice(
              $("#NI_INITIALPAYMENT_VALUEDATE").val().lastIndexOf("-") + 1
            );
          var valuedate = new Date(
            valuedateday + "-" + valuedatemonth + "-" + valuedateyear
          );
          var differencenoofdays =
            (today.getTime() - valuedate.getTime()) / (1000 * 3600 * 24);
          var fornoofdays = $("#NI_RD_PERIOD_DAYS").val();
          if (fornoofdays > differencenoofdays) {
            validatevaluedatecon = 1;
          } else {
            $("#NI_INITIALPAYMENT_VALUEDATE").val("");
            alert("Please reverify the value date");
          }
        } else {
          console.log("Either period month or year is not 0 or null");
        }
      } else {
        $("#NI_INITIALPAYMENT_VALUEDATE").val("");
        alert("Either period month or year is blank");
      }
    } else {
      $("#NI_INITIALPAYMENT_VALUEDATE").val("");
      alert("Please enter Period Days First");
    }
  } else {
    console.log("Not RD or FD");
  }
  console.log("validatevaluedatecon = " + validatevaluedatecon);
}

function emptyValueDatefield() {
  debugger;
  if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "FD"
  ) {
    $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
  } else if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "RD"
  ) {
    $("#M1_NI_INITIALPAYMENT_VALUEDATE").val("");
  } else if (
    $.getActivityName() == "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() == "FD"
  ) {
    $("#NI_INITIALPAYMENT_VALUEDATE").val("");
  } else if (
    $.getActivityName() == "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() == "RD"
  ) {
    $("#NI_INITIALPAYMENT_VALUEDATE").val("");
  }
}
function addclassmakerchecker() {
  if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "FD"
  ) {
    $("#M1_NI_INITIALPAYMENT_VALUEDATE").addClass("mandatorycheckermaker");
    $("#M1_NI_FD_PERIOD_DAYS").addClass("mandatorycheckermaker");
    $("#M1_NI_FD_PERIOD_YEARS").addClass("mandatorycheckermaker");
    $("#M1_NI_FD_PERIOD_MON").addClass("mandatorycheckermaker");
  } else if (
    $.getActivityName() == "ACO_Maker" &&
    $("#ADDNL_FORM_TYPE").val() == "RD"
  ) {
    $("#M1_NI_INITIALPAYMENT_VALUEDATE").addClass("mandatorycheckermaker");
    $("#M1_NI_RD_PERIOD_YEARS").addClass("mandatorycheckermaker");
    $("#M1_NI_RD_PERIOD_DAYS").addClass("mandatorycheckermaker");
    $("#M1_NI_RD_PERIOD_MON").addClass("mandatorycheckermaker");
  } else if (
    $.getActivityName() === "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() === "FD"
  ) {
    $("#NI_INITIALPAYMENT_VALUEDATE").addClass("mandatorycheckermaker");
    $("#NI_FD_PERIOD_DAYS").addClass("mandatorycheckermaker");
    $("#NI_FD_PERIOD_YEARS").addClass("mandatorycheckermaker");
    $("#NI_FD_PERIOD_MON").addClass("mandatorycheckermaker");
  } else if (
    $.getActivityName() === "ACO_Checker" &&
    $("#ADDNL_FORM_TYPE").val() === "RD"
  ) {
    $("#NI_INITIALPAYMENT_VALUEDATE").addClass("mandatorycheckermaker");
    $("#NI_RD_PERIOD_DAYS").addClass("mandatorycheckermaker");
    $("#NI_RD_PERIOD_YEARS").addClass("mandatorycheckermaker");
    $("#NI_RD_PERIOD_MON").addClass("mandatorycheckermaker");
  }
}

function cbAccountList(cifArr) {
  debugger;
  var isExist = "";
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=CBAccountList&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&cifNumber=" +
        cifArr[0] +
        "&formType=" +
        $("#ADDNL_FORM_TYPE").val() +
        "&schemeCode=" +
        $("#SCHEME_CODE").val(),
      success: function (data) {
        console.log(data);
        if (data === "Success") {
          isExist = data;
        } else {
          isExist = data;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        isExist = "Error : No Response Recieved. ";
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking customer already having account or not " +
        e
    );
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
  return isExist;
}

function validateLeadNo(cifNumberArr) {
  var response = "";
  debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=" +
        arguments.callee.name +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&leadNumber=" +
        cifNumberArr[1] +
        "&cifNumber=" +
        cifNumberArr[0],
      success: function (data) {
        //                console.log(data);
        response = data;
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking lead no is exist or not " + e
    );
    alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
  return response;
}

function validateLeadNoFrontEnd(id) {
  debugger;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=validateLeadNo" +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&leadNumber=" +
        $("#" + id).val() +
        "&cifNumber=",
      success: function (data) {
        if (data.startsWith("Error")) {
          alert(data);
          $("#" + id).val("");
          document.getElementById(id + "_SPAN").innerHTML =
            "Field Must be Entered";
          return false;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking lead no is exist or not " + e
    );
    alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function validateCFR(
  panNumber,
  cfrStatus,
  firstNameId,
  middleNameId,
  lastNameId
) {
  debugger;
  var firstName, middleName, lastName;
  if ($("#" + firstNameId).val() === undefined) {
    firstName = "";
  } else {
    firstName = $("#" + firstNameId)
      .val()
      .trim();
  }
  if ($("#" + middleNameId).val() === undefined) {
    middleName = "";
  } else {
    middleName = $("#" + middleNameId)
      .val()
      .trim();
  }
  if ($("#" + lastNameId).val() === undefined) {
    lastName = "";
  } else {
    lastName = $("#" + lastNameId)
      .val()
      .trim();
  }
  var name = firstName + " " + middleName + " " + lastName;
  var object;
  if (
    $("#" + panNumber)
      .val()
      .trim() !== ""
  ) {
    object = {
      requestData: {
        panNumber: $("#" + panNumber)
          .val()
          .trim(),
        partyName: "",
        fraudCaseNo: "",
      },
    };
  } else {
    object = {
      requestData: {
        panNumber: "",
        partyName: name.trim(),
        fraudCaseNo: "",
      },
    };
  }

  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=validateCFR&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&DETAILS=" +
        encodeURIComponent(JSON.stringify(object)),
      success: function (data) {
        //                    if ($("#FORM_TYPE").val() !== "Non Individual") {
        $("#CFR_REPORT_TABLE_TBODY").html("");
        console.log(data);
        if (data.startsWith("Error")) {
          alert(data);
        } else if (data === "NO MATCH FOUND") {
          alert(data);
          $("#" + cfrStatus)
            .val(data)
            .addClass("changed")
            .attr("disabled", true);
        } else {
          $("#" + cfrStatus)
            .val("MATCH FOUND")
            .addClass("changed")
            .attr("disabled", true);
          var dataObj = JSON.parse(data);
          console.log(data);
          if (cfrStatus === "IND_CFR_STATUS") {
            $("#CFR_REPORT_TABLE_TBODY").html("");
            $("#CFR_REPORT_TABLE_THEAD").html("");
            $("#CFR_REPORT_TABLE_DIV").show();
          } else {
            $("#NI_CFR_REPORT_TABLE_TBODY").html("");
            $("#NI_CFR_REPORT_TABLE_THEAD").html("");
            $("#NI_CFR_REPORT_TABLE_DIV").show();
          }
          var thDataToAppend = "";
          var remarksData = dataObj[0];
          for (var j in remarksData) {
            thDataToAppend = thDataToAppend + "<th>" + j + "</th>";
          }
          $("#CFR_REPORT_TABLE_THEAD").append(thDataToAppend);
          if (cfrStatus === "IND_CFR_STATUS") {
            $("#CFR_REPORT_TABLE_THEAD").append(thDataToAppend);
          } else {
            $("#NI_CFR_REPORT_TABLE_THEAD").append(thDataToAppend);
          }
          var count = 1;
          for (var i in dataObj) {
            var rowDataToApend =
              "<tr id = '" + i + "' style='text-align:center;'>";
            var tdDataToAppend = "";
            var remarksData = dataObj[i];
            for (var j in remarksData) {
              tdDataToAppend =
                tdDataToAppend +
                "<td class='" +
                j +
                "'>" +
                remarksData[j] +
                "</td>";
            }
            var rowEndToAppend = "</tr>";
            if (cfrStatus === "IND_CFR_STATUS") {
              $("#CFR_REPORT_TABLE_TBODY").append(
                rowDataToApend + tdDataToAppend + rowEndToAppend
              );
            } else {
              $("#NI_CFR_REPORT_TABLE_TBODY").append(
                rowDataToApend + tdDataToAppend + rowEndToAppend
              );
            }
            //                        $("#CFR_REPORT_TABLE_TBODY").append(rowDataToApend + tdDataToAppend + rowEndToAppend);
            tdDataToAppend = "";
            count++;
          }

          if (cfrStatus === "IND_CFR_STATUS") {
            $("#CFR_DIALOG").dialog("open");
          } else {
            $("#NI_CFR_DIALOG").dialog("open");
          }
          //                    $("#CFR_DIALOG").dialog("open");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking customer already having account or not " +
        e
    );
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function getBeneficiaryDiv(schemeCodeId) {
  var schemeCode = $("#" + schemeCodeId).val();
  //-------------------Adding Beneficiary Field Validation For Scheme code 2010

  if (schemeCode === "2018") {
    $("#beneficiaryAccDetails").attr("hidden", false);
    $("#beneficiaryAccNumber").attr("hidden", false);
    $("#beneficiaryAccIfsc").attr("hidden", false);
    $("#beneficiaryAccBtn").attr("hidden", true);
    if ($("#OTHERDETAILS_BENEFICIARY_ACCOUNT_NUMBER").val() === "") {
      $("#OTHERDETAILS_BENEFICIARY_ACCOUNT_NUMBER_SPAN").html(
        "Please fill this field"
      );
    }
    if ($("#OTHERDETAILS_BENEFICIARY_IFSC_CODE").val() === "") {
      $("#OTHERDETAILS_BENEFICIARY_IFSC_CODE_SPAN").html(
        "Please fill this field"
      );
    }
  } else {
    $("#beneficiaryAccDetails").attr("hidden", true);
  }
}

function pennyDrop(accNumId, ifscId, matchStatusId) {
  var accNum = $("#" + accNumId).val();
  var ifsc = $("#" + ifscId).val();
  var matchStatus = $("#" + matchStatusId).val();
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=pennyDrop&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&accNum=" +
        accNum +
        "&ifsc=" +
        ifsc,
      success: function (data) {
        //                alert(data);
        //Old Code only
        //                $("#OTHERDETAILS_BENEFICIARY_MATCH_STATUS").val(data);
        //New Code

        if (data.startsWith("Error")) {
          alert(data);
          $.setValue("OTHERDETAILS_BENEFICIARY_MATCH_STATUS", "NO MATCH FOUND");
          return;
        } else {
          var dataObj = JSON.parse(data);
          console.log(dataObj);
          $("#NI_TDRD_REPORT_TABLE_TBODY").html("");
          $("#NI_TDRD_REPORT_TABLE_THEAD").html("");
          $("#NI_TDRD_REPORT_TABLE_DIV").show();
          var thDataToAppend = "";
          var remarksData = dataObj[0];
          for (var j in remarksData) {
            thDataToAppend = thDataToAppend + "<th>" + j + "</th>";
          }
          //                    $("[@id='CFR_REPORT_TABLE']/thead/tr[1]/th").attr("colspan", remarksData.length);
          $("#NI_TDRD_REPORT_TABLE_THEAD").append(thDataToAppend);
          var count = 1;
          for (var i in dataObj) {
            var rowDataToApend =
              "<tr id = '" + i + "' style='text-align:center;'>";
            var tdDataToAppend = "";
            var remarksData = dataObj[i];
            for (var j in remarksData) {
              tdDataToAppend =
                tdDataToAppend +
                "<td class='" +
                j +
                "'>" +
                remarksData[j] +
                "</td>";
            }
            var rowEndToAppend = "</tr>";
            $("#NI_TDRD_REPORT_TABLE_TBODY").append(
              rowDataToApend + tdDataToAppend + rowEndToAppend
            );
            tdDataToAppend = "";
            count++;
          }
          $("#NI_TDRD_DIALOG").dialog("open");
          $.setValue("OTHERDETAILS_BENEFICIARY_MATCH_STATUS", "SUCCESS");
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking customer already having account or not " +
        e
    );
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function validateTDRDFetchAccount() {
  debugger;
  var accNo;
  var ifsc;
  var operation;
  if ($("#ADDNL_FORM_TYPE").val() === "RD") {
    if ($("#NI_RD_AMTONMATURITY").val() === "102") {
      if ($("#NI_RD_SSFBBANKACC").val() !== "") {
        accNo = $("#NI_RD_SSFBBANKACC").val();
        operation = "validateTDRDFetchAccount";
      } else {
        alert("Enter the Account Number");
      }
    } else if ($("#NI_RD_AMTONMATURITY").val() === "2") {
      if ($("#NI_RD_OTHERBANKACC").val() !== "") {
        accNo = $("#NI_RD_OTHERBANKACC").val();
        ifsc = $("#NI_RD_IFSC").val();
        operation = "pennyDrop";
      } else {
        alert("Enter the Account Number");
      }
    } else {
      alert("Transfer to SSFB Account or Enternal Account not seletced.");
      return;
    }
  } else {
    if (
      $("#NI_FD_AMTONMATURITY").val() === "102" &&
      $("#NI_FD_INTERESTONMATURITY").val() === "102"
    ) {
      if (
        $("#NI_FD_SSFBPRICIPALACCNO").val() !== "" ||
        $("#NI_FD_SSFBINTERESTACCNO").val() !== ""
      ) {
        if (
          $("#NI_FD_SSFBPRICIPALACCNO").val() ===
          $("#NI_FD_SSFBINTERESTACCNO").val()
        ) {
          accNo = $("#NI_FD_SSFBINTERESTACCNO").val();
          operation = "validateTDRDFetchAccount";
        } else {
          alert("Account Number Not Matched");
          return;
        }
      } else {
        alert("Enter the Account Number");
      }
    } else if (
      $("#NI_FD_AMTONMATURITY").val() === "102" &&
      $("#NI_FD_INTERESTONMATURITY").val() !== "102"
    ) {
      //            accNo = $("#NI_FD_SSFBPRICIPALACCNO").val();
      if ($("#NI_FD_SSFBPRICIPALACCNO").val() !== "") {
        accNo = $("#NI_FD_SSFBPRICIPALACCNO").val();
        operation = "validateTDRDFetchAccount";
      } else {
        alert("Enter the Account Number");
      }
    } else if (
      $("#NI_FD_AMTONMATURITY").val() !== "102" &&
      $("#NI_FD_INTERESTONMATURITY").val() === "102"
    ) {
      //            accNo = $("#NI_FD_SSFBINTERESTACCNO").val();
      if ($("#NI_FD_SSFBINTERESTACCNO").val() !== "") {
        accNo = $("#NI_FD_SSFBINTERESTACCNO").val();
        operation = "validateTDRDFetchAccount";
      } else {
        alert("Enter the Account Number");
      }
    } else if (
      $("#NI_FD_AMTONMATURITY").val() === "2" ||
      $("#NI_FD_INTERESTONMATURITY").val() === "2"
    ) {
      if ($("#NI_FD_OTHERBANKACC").val() !== "") {
        accNo = $("#NI_FD_OTHERBANKACC").val();
        ifsc = $("#NI_FD_IFSC").val();
        operation = "pennyDrop";
      } else {
        alert("Enter the Account Number");
      }
    } else {
      alert("Transfer to SSFB Account or External Account not seletced.");
      return;
    }
  }
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/GenericService",
      async: false,
      data:
        "OPERATION=" +
        operation +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&accNum=" +
        accNo +
        "&ifsc=" +
        ifsc,
      success: function (data) {
        //                alert(data);
        if (operation === "validateTDRDFetchAccount") {
          if (data.startsWith("Error")) {
            alert(data);
            $.setValue("IS_TDRD_SUCCESS", "ERROR");
            return;
          } else {
            var dataObj = JSON.parse(data);
            console.log(dataObj);
            $("#NI_TDRD_REPORT_TABLE_TBODY").html("");
            $("#NI_TDRD_REPORT_TABLE_THEAD").html("");
            $("#NI_TDRD_REPORT_TABLE_DIV").show();
            var thDataToAppend = "";
            var remarksData = dataObj[0];
            for (var j in remarksData) {
              thDataToAppend = thDataToAppend + "<th>" + j + "</th>";
            }
            //                    $("[@id='CFR_REPORT_TABLE']/thead/tr[1]/th").attr("colspan", remarksData.length);
            $("#NI_TDRD_REPORT_TABLE_THEAD").append(thDataToAppend);
            var count = 1;
            for (var i in dataObj) {
              var rowDataToApend =
                "<tr id = '" + i + "' style='text-align:center;'>";
              var tdDataToAppend = "";
              var remarksData = dataObj[i];
              for (var j in remarksData) {
                tdDataToAppend =
                  tdDataToAppend +
                  "<td class='" +
                  j +
                  "'>" +
                  remarksData[j] +
                  "</td>";
              }
              var rowEndToAppend = "</tr>";
              $("#NI_TDRD_REPORT_TABLE_TBODY").append(
                rowDataToApend + tdDataToAppend + rowEndToAppend
              );
              tdDataToAppend = "";
              count++;
            }
            $("#NI_TDRD_DIALOG").dialog("open");
            if ($("#ADDNL_FORM_TYPE").val() === "RD") {
              $.setValue("IS_TDRD_SUCCESS", "SUCCESS");
            } else {
              $.setValue("NI_FD_IS_TDRD_SUCCESS", "SUCCESS");
            }
          }
        } else {
          if (data.startsWith("Error")) {
            alert(data);
            $.setValue("IS_TDRD_SUCCESS", "ERROR");
            return;
          } else {
            var dataObj = JSON.parse(data);
            console.log(dataObj);
            $("#NI_TDRD_REPORT_TABLE_TBODY").html("");
            $("#NI_TDRD_REPORT_TABLE_THEAD").html("");
            $("#NI_TDRD_REPORT_TABLE_DIV").show();
            var thDataToAppend = "";
            thDataToAppend =
              "<th>Account Number</th><th>IFSC</th><th>AccountName</th>";
            $("#NI_TDRD_REPORT_TABLE_THEAD").append(thDataToAppend);
            var rowDataToApend = "<tr>";
            var tdDataToAppend = "";
            tdDataToAppend =
              "<td class='" +
              j +
              "'>" +
              dataObj.AccountNumber +
              "</td><td class='" +
              j +
              "'>" +
              dataObj.IFSC +
              "</td><td class='" +
              j +
              "'>" +
              dataObj.AccountName +
              "</td>";
            var rowEndToAppend = "</tr>";
            $("#NI_TDRD_REPORT_TABLE_TBODY").append(
              rowDataToApend + tdDataToAppend + rowEndToAppend
            );
            tdDataToAppend = "";
            $("#NI_TDRD_DIALOG").dialog("open");
            if ($("#ADDNL_FORM_TYPE").val() === "RD") {
              $.setValue("IS_TDRD_SUCCESS", "SUCCESS");
            } else {
              $.setValue("NI_FD_IS_TDRD_SUCCESS", "SUCCESS");
            }
          }
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking customer already having account or not " +
        e
    );
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
}

function checkDocumentofApprovalForm() {
  var isExist = false;
  try {
    $.ajax({
      type: "POST",
      url: "../ACO/CheckApprovalForm",
      async: false,
      data: "PINSTID=" + $.getProcessInstanceId(),
      success: function (data) {
        //                alert(data);
        if (data.startsWith("Error")) {
          isExist = true;
        } else {
          isExist = false;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        $body.removeClass("loading");
      },
    });
  } catch (e) {
    console.log(
      "====Exception Occured while checking customer already having account or not " +
        e
    );
    //  alert("====Exception Occured deleting Exception values from DB======");
    $body.removeClass("loading");
  }
  return isExist;
}

function appendUdyam(id) {
  debugger;
  if ($("#" + id).val() === "") {
    $("#" + id).val("UDYAM-");
  }
  //    $("#"+id).html("Yuo have");
}

function validateUdyamNumber(id) {
  debugger;
  var array = $("#" + id)
    .val()
    .split("-");
  var actualValue = "";
  if (array[1] === undefined) {
    $("#" + id + "_SPAN").html("Incorrect Udyam Aadhar Number");
    $("#" + id).val("");
  } else {
    var lengthOfNumber = array[1].length + 5;
    if (lengthOfNumber === 16) {
      let modifiedString =
        array[1].slice(0, 2) +
        "-" +
        array[1].slice(2, 4) +
        "-" +
        array[1].slice(4);
      if (validateAlpha1(array[1].slice(0, 2))) {
        actualValue = array[0] + "-" + modifiedString;
        $("#" + id).val(actualValue);
        $("#" + id + "_SPAN").html("");
      } else {
        $("#" + id + "_SPAN").html("State code is not proper");
        $("#" + id).val("");
      }
    } else {
      $("#" + id + "_SPAN").html("Incorrect Udyam Aadhar Number");
      $("#" + id).val("");
    }
  }

  var custID;
  var custIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
    .parent()
    .parent()
    .index();
  if (custIndex === -1) {
    alert("Please select Customer first");
    return;
  } else {
    var formType = tableLoader.FORM_TYPE;
    if ($.isInActivities("ACO_Compliance")) {
      formType = "Individual";
    }
    if (formType === "Individual" || formType === "NRI") {
      custID = "CUST_0" + custIndex;
    } else {
      custID = "APP01";
    }
  }

  var referenceNo = $.getProcessInstanceId().replace(/-/g, "") + custID;
  try {
    $.ajax({
      type: "POST",
      data:
        "DETAILS=" +
        actualValue +
        "&FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DML_TYPE=" +
        $.getActivity() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&referenceNo=" +
        referenceNo,
      url: "../ACO/GenericService",
      success: function (data) {
        $body.removeClass("loading");
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
            $("#" + id).val("");
            return false;
          }
          var dataObj = JSON.parse(data);
          openWindow_UdyamAadhar("../ACO/ACO_ValidateUdyamAadhar.jsp", dataObj);
        } else {
          alert("No response received");
          $("#" + id).val("");
          return false;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("validateUdyamAadhar::" + e);
    $body.removeClass("loading");
  }
}

function validateAlpha1(str) {
  debugger;
  return /^[a-zA-Z]+$/.test(str);
}

function openWindow_UdyamAadhar(url, dataObj) {
  //debugger;
  var sOptions;
  sOptions = "status=no,menubar=no,scrollbars=no,resizable=no,toolbar=no";
  sOptions = sOptions + ",width=" + screen.availWidth.toString();
  sOptions = sOptions + ",height=" + (screen.availHeight - 50).toString();
  sOptions =
    sOptions +
    ",screenX=0,screenY=0,left=0,top=0,menubar=no,resizable=no,directories=no,location=no";
  var child = window.open(url, "ACO_UdyamAadhar", sOptions);
  child.dataObj = dataObj;
}

function validateSegment(segId, subSegId) {
  debugger;
  var segIdVal = $("#" + segId).val();
  if (segIdVal === "3") {
    $("#" + subSegId).attr("disabled", false);
  } else {
    $("#" + subSegId).val("");
    $("#" + subSegId).attr("disabled", true);
  }
}

function validateTasc(id, seg, subSeg) {
  debugger;
  var val = $("#" + id).val();
  if (val === "81" || val === "82" || val === "83") {
    $("#" + seg).attr("disabled", true);
    $("#" + subSeg).attr("disabled", false);
    $("#" + seg)
      .val("3")
      .addClass("changed");
    getSubSegment();
  } else {
    $("#" + seg).attr("disabled", true);
    $("#" + subSeg).attr("disabled", true);
    $("#" + seg)
      .val("")
      .addClass("changed");
    $("#" + subSeg)
      .val("")
      .addClass("changed");
  }
}

function getSubSegment() {
  //debugger;
  try {
    $.getMaster("GET_SUB_SEGMENT", [], function (headers, masterData) {
      if (masterData) {
        for (var i in masterData) {
          $("#NI_CORPORATE_SUB_SEGMENT").append(
            "<option id=" +
              masterData[i][0] +
              " value='" +
              masterData[i][0] +
              "'>" +
              masterData[i][1] +
              "</option>"
          );
        }

        masterDataGlobal["GET_SUB_SEGMENT"] = masterData;
        //$("#CONSTITUTION").val(tableLoader.CONSTITUTION);
      }
      $("#NI_CORPORATE_SUB_SEGMENT").val(tableLoader.NI_CORPORATE_SUB_SEGMENT);
      // $("#ENTITY_TYPE").val(tableLoader.ENTITY_TYPE);
    });
  } catch (e) {
    alert(e + ": Error while loading master");
  }
}

function validateEquifax(id) {
  debugger;
  if ($("#ADDNL_FORM_TYPE").val() !== "Current") {
    alert("This case is not current account case.");
    return;
  }
  if (id !== "equifaxEntity") {
    var elementIndex = $("#CUSTDETAILS_TABLE input[name=radio]:checked")
      .parent()
      .parent()
      .index();
    if (elementIndex === -1) {
      alert("Please Select the Customer");
      //        document.getElementById(id).disabled = false;
      return;
    }
  }
  var cifNumber = "";
  var obj = new Object();
  if (id === "equifaxEntity") {
    obj["NAME"] = $("#NI_CUSTNAME").val();
    obj["ADDRESS"] =
      $("#NIOFFC_ADD_LINE1").val() +
      " " +
      $("#NIOFFC_ADD_LINE2").val() +
      " " +
      $("#NIOFFC_DISTRICT").val();
    obj["CITY"] = $("#NIOFFC_CITY").val();
    obj["STATE"] = $("#NIOFFC_STATE").val();
    obj["PINCODE"] = $("#NIOFFC_PINCODE").val();
    obj["MOBILE"] = $("#NI_CONTACT_MOB").val();
    obj["EMAIL"] = $("#NI_CONTACT_EMAIL").val();
    obj["PAN_NUMBER"] = $("#NI_PAN_NUMBER").val();
    obj["COMPANY_ID"] = $("#NI_COMPANY_ID").val();
    obj["REGISTRATION_NUMBER"] = $("#NI_REGISTRATION_NUMBER").val();
    obj["DOB"] = $("#NI_DATE_INCORPORATION").val();
    obj["IND_PASSPORT"] = "";
    obj["IND_PASSPORT_ISSUE_DATE"] = "";
    obj["IND_PASSPORT_EXPIRY_DATE"] = "";
    obj["IND_VOTERS_ID"] = "";
    obj["IND_RATION_CARD"] = "";
    obj["IND_RATIONCARD_ISSUE_DATE"] = "";
    obj["IND_RATIONCARD_EXPIRY_DATE"] = "";
    obj["IND_DRIVING_LICENSE"] = "";
    obj["IND_DRLICENSE_ISSUE_DATE"] = "";
    obj["IND_DRLICENSE_EXPIRY_DATE"] = "";
    cifNumber = $("#NI_CIF_NUMBER").val();
  } else {
    obj["NAME"] =
      $("#IND_FIRST_NAME").val() +
      " " +
      $("#IND_MIDDLE_NAME").val() +
      " " +
      $("#IND_LAST_NAME").val();
    obj["DOB"] = $("#IND_DOB").val().split("-").reverse().join("-");
    obj["MOBILE"] = $("#IND_MOBILE").val();
    obj["PAN_NUMBER"] = $("#IND_PAN_NUMBER").val();
    obj["AADHAR_NUMBER"] = $("#IND_AADHAR_NUMBER").val();
    obj["IND_PASSPORT"] = $("#IND_PASSPORT").val();
    obj["IND_PASSPORT_ISSUE_DATE"] = $("#IND_PASSPORT_ISSUE_DATE").val();
    obj["IND_PASSPORT_EXPIRY_DATE"] = $("#IND_PASSPORT_EXPIRY_DATE").val();
    obj["IND_VOTERS_ID"] = $("#IND_VOTERS_ID").val();
    obj["IND_RATION_CARD"] = $("#IND_RATION_CARD").val();
    obj["IND_RATIONCARD_ISSUE_DATE"] = $("#IND_RATIONCARD_ISSUE_DATE").val();
    obj["IND_RATIONCARD_EXPIRY_DATE"] = $("#IND_RATIONCARD_EXPIRY_DATE").val();
    obj["IND_DRIVING_LICENSE"] = $("#IND_DRIVING_LICENSE").val();
    obj["IND_DRLICENSE_ISSUE_DATE"] = $("#IND_DRLICENSE_ISSUE_DATE").val();
    obj["IND_DRLICENSE_EXPIRY_DATE"] = $("#IND_DRLICENSE_EXPIRY_DATE").val();
    obj["ADDRESS"] =
      $("#ADD_LINE1_PERM").val() +
      " " +
      $("#ADD_LINE2_PERM").val() +
      " " +
      $("#DISTRICT_PERM").val();
    obj["STATE"] = $("#STATE_PERM").val();
    obj["CITY"] = $("#CITY_PERM").val();
    obj["PINCODE"] = $("#PINCODE_PERM").val();
    obj["COMPANY_ID"] = "";
    obj["REGISTRATION_NUMBER"] = "";
    cifNumber = $("#NI_CIF_NUMBER").val();
  }

  console.log(obj);
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "custId=" +
        cifNumber +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&dataObj=" +
        encodeURIComponent(JSON.stringify(obj)) +
        "&OPERATION=validateEquifax",
      url: "../ACO/GenericService",
      success: function (data) {
        console.log(data);
        var response = data;
        if (response.startsWith("Error")) {
          alert(response);
        } else {
          let newWindow = window.open("", "_blank");
          if (newWindow) {
            newWindow.document.open();
            newWindow.document.write(response);
            newWindow.document.close();
          } else {
            alert("Pop-up blocked! Please allow pop-ups for hthis website.");
          }
        }
      },
      error: function (error) {
        console.log(error);
      },
    });
  } catch (e) {
    alert(e);
  }
}

function fetchVPAId(fieldId, mobileId) {
  debugger;
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "FORM_TYPE=" +
        $("#FORM_TYPE").val() +
        "&DETAILS=" +
        $("#" + mobileId).val() +
        "&PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        $body.removeClass("loading");
        if (data) {
          if (data.toString().startsWith("Error")) {
            alert(data);
          }
          $("#" + fieldId).val(data);
          $("#" + fieldId).attr("disabled", true);
        } else {
          alert("No response received");
          return;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchVPAId::" + e);
    $body.removeClass("loading");
  }
}

function validateLastName(firstName, middleName, lastName) {
  debugger;
  if ($("#" + middleName).val() === "") {
    if (
      $("#" + firstName)
        .val()
        .trim() ===
      $("#" + lastName)
        .val()
        .trim()
    ) {
      $("#" + firstName).attr("disabled", true);
      $("#" + middleName).attr("disabled", true);
      $("#" + firstName).val("");
      $("#" + lastName).val(
        $("#" + lastName)
          .val()
          .trim()
      );
    }
  }
}

//function vslidateTDSField(id) {
//    if ($("#" + id).val() === "8" || $("#" + id).val() === "25" || $("#" + id).val() === "35") { //35 - Insurance
//        $("#tdsDiv").attr("hidden", false);
//        $("#NI_SUB_SEGMENT_TDS").attr("disabled", false);
//    } else {
//        $("#NI_SUB_SEGMENT_TDS").attr("disabled", true);
//        $("#tdsDiv").attr("hidden", true);
//
//    }
//}

function changeAccountLength(id, accNo) {
  debugger;
  var isExist = false;
  var schemeArray = [
    "1005",
    "1022",
    "1020",
    "1023",
    "1033",
    "2003",
    "1040",
    "1039",
  ];
  if ($("#" + id).val() === "4") {
    if (schemeArray.includes($("#SCHEME_CODE").val())) {
      $("#" + accNo).attr("maxlength", "8");
      $("#validateAccBtn").attr("disabled", true);
      $("#" + accNo).attr("disabled", false);
    } else {
      $("#" + id).val("");
      alert("Selected scheme code doesn't support special account number");
    }
  } else if ($("#" + id).val() === "1") {
    $("#" + accNo).removeAttr("maxlength");
    $("#validateAccBtn").attr("disabled", false);
  } else {
    $("#" + id).val("");
    $("#" + accNo).removeAttr("maxlength");
    $("#validateAccBtn").attr("disabled", false);
  }
}

function clearTypeofAccount(id) {
  $("#ACC_NUM_TYPE").val("");
}

function validateAmt(id, principalAmt, interestAmt) {
  debugger;
  var value = $("#" + id).val();
  if (value >= 30000000) {
    $("#" + principalAmt + " option[value=3]").hide();
    $("#" + interestAmt + " option[value=3]").hide();
  }
}

function giveConsent(id) {
  debugger;
  const checkboxValue = document.getElementById(id);
  if (checkboxValue.checked) {
    $("#" + id + "_SPAN").html(
      "By selecting the checkbox, I am providing consent to enable the AePS service with the bank"
    );
  } else {
    $("#" + id + "_SPAN").html("");
  }
}

function changeBestRateValidation(principalId, bestrateId) {
  debugger;
  var principalValue = $("#" + principalId).val();
  if (principalValue === "3") {
    $("#" + bestrateId).attr("disabled", false);
  } else {
    $("#" + bestrateId).attr("disabled", true);
  }
}

function getCocoFieled(schemeId, cocoId) {
  debugger;
  var achemeCode = $("#" + schemeId).val() === "2018" ? "2018" : "All";
  $.getMaster("GET_COCO_NAME", [achemeCode], function (headers, masterData) {
    if (masterData.length > 0) {
      $("#" + cocoId).html("");
      $("#" + cocoId).append("<option value=''>Select</option>");
      for (var i in masterData) {
        $("#" + cocoId).append(
          "<option value='" +
            masterData[i][0] +
            "'>" +
            masterData[i][1] +
            "</option>"
        );
      }
    }
  });
  //    if (achemeCode === "2018") {
  //        $("#cocodiv").addClass("requiredAsterik");
  //        $("#COCO_NAME").addClass("requiredIndi");
  //    } else {
  //        $("#cocodiv").removeClass("requiredAsterik");
  //        $("#COCO_NAME").removeClass("requiredIndi");
  //    }
}

function checkAMLResult(id) {
  debugger;
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name,
      url: "../ACO/GenericService",
      success: function (data) {
        console.log(data);
        $body.removeClass("loading");
        if (data) {
          if (
            data.toString().startsWith("Error") &&
            $("#" + id).val() === "Blacklisted"
          ) {
            $("#DECISION_DVU").val("Compliance_Queue").attr("disabled", true);
          } else {
            $("#DECISION_DVU").attr("disabled", false);
          }
        } else {
          alert("No response received");
          return;
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchVPAId::" + e);
    $body.removeClass("loading");
  }
}

function nomineeNameValidation(firstName, middleName, lastName) {
  debugger;
  if (
    $("#" + lastName)
      .val()
      .trim() === ""
  ) {
    $("#" + lastName + "_SPAN").html("Field is mandatory");
    $("#" + firstName).val("");
    $("#" + middleName).val("");
    $("#" + lastName).val("");
    return;
  }
  var nomineeName =
    $("#" + firstName)
      .val()
      .trim() +
    " " +
    $("#" + lastName)
      .val()
      .trim();
  var tableRow = $("#CUSTDETAILS_TBODY tr").length;
  if (tableRow <= 0) {
    alert("Please open customer grid");
    $("#" + firstName).val("");
    return;
  }
  var nameArray = new Array();
  var i = 0;
  $("#CUSTDETAILS_TABLE tbody tr").each(function () {
    var firstName = $(this).find(".IND_FIRST_NAME").html();
    nameArray[i] = firstName;
    i++;
  });
  var nomineeFirstName = $("#" + firstName)
    .val()
    .trim();
  var nomineeLastName = $("#" + lastName)
    .val()
    .trim();
  if (nomineeFirstName.toUpperCase() === nameArray[0]) {
    if (
      confirm(
        "Name entered in nominee details is similar as the name of account holder. Do you still want to continue?"
      )
    ) {
    } else {
      $("#" + firstName).val("");
      $("#" + middleName).val("");
      $("#" + lastName).val("");
      return;
    }
  }

  if (nomineeName.split(" ").join("").length < 3) {
    alert("Nominee name must be of minimum 3 characteristics.");
    $("#" + firstName).val("");
    $("#" + middleName).val("");
    $("#" + lastName).val("");
    return;
  }
  if (new Set(nomineeFirstName).size === 1) {
    alert("Nominee name should not be same characters");
    $("#" + firstName).val("");
    $("#" + middleName).val("");
    $("#" + lastName).val("");
    return;
  }
  if (
    /^[a-zA-Z0-9 ]*$/.test(nomineeFirstName) ||
    /^[a-zA-Z0-9 ]*$/.test(nomineeLastName)
  ) {
  } else {
    alert(
      "No special Character will be allowed in the nomination field except Space"
    );
    $("#" + firstName).val("");
    $("#" + middleName).val("");
    $("#" + lastName).val("");
    return;
  }
}

function launchWindowForCKYC() {
  debugger;
  $("#ckycSubmitDiv").html("");
  let table = document.getElementById("CUSTDETAILS_TBODY");
  var rowCount = table.rows.length;
  var array = new Array();
  if ($("#FORM_TYPE").val() === "Non Individual") {
    array.push("ENTITY_1");
    for (var i = 1; i <= rowCount; i++) {
      array.push("CUST_" + i);
    }
  } else {
    for (var i = 1; i <= rowCount; i++) {
      array.push("CUST_" + i);
    }
  }
  //    console.log(array);
  $("#CKYC_SUBMIT_DIALOG").dialog("option", "height", "250");
  $("#CKYC_SUBMIT_DIALOG").dialog("option", "width", "700");
  $("#CKYC_SUBMIT_DIALOG").dialog("open");
  $("#ckycSubmitDiv1").val(array);
}

function ckycNumberForDocumentUpload(ckycMand) {
  debugger;
  $("#ckycSubmitDiv").html("");
  var rows = $("#CUSTDETAILS_TBODY tr");
  var mobileArray = [];
  var dateOfBirthArray = [];
  var dckycNumberArray = [];
  $("#ckycSubmitDiv").html("");
  $("#ckycSubmitDivAfter").html("");
  $("#CUSTDETAILS_TBODY tr").each(function () {
    let mobileNumber = $(this).find("td:eq(10)").text();
    let dateOfBirth = $(this).find("td:eq(9)").text();
    let ckycNumber = $(this).find("td:eq(4)").text();
    if (mobileNumber) {
      mobileArray.push(mobileNumber);
    }
    if (dateOfBirth) {
      dateOfBirthArray.push(dateOfBirth);
    }
    if (ckycNumber) {
      dckycNumberArray.push(ckycNumber);
    }
  });
  console.log(mobileArray);
  console.log(dateOfBirthArray);
  console.log(dckycNumberArray);
  $("#CKYC_SUBMIT_DIALOG").dialog("option", "height", "700");
  $("#CKYC_SUBMIT_DIALOG").dialog("option", "width", "900");
  if (ckycMand === "1") {
    $("#CKYC_SUBMIT_DIALOG").dialog("open");
    if ($("FORM_TYPE").val() === "Non Individual") {
      //            $("#ckycSubmitDiv").append("<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>"
      //                    + "<div id='checkBoxDivButton_Entity' style='color:#2a5693;'>"
      //                    + "<label class='col-md-4'>ENTER ENTITY CKYC NUMBER</label>"
      //                    + "<input type='text' id='ckycId_Entity' class='col-md-4'><div class='col-md-3'><button style='height:auto;' class='btn btn-primary' onclick='fetchCKYCDocuments(" + cifId_Entity + "');' >FETCH CKYC DETAILS</button>"
      //                    + "<label>DOB</label>"
      //                    + "<label>MOBILE NUMBER</label>"
      //                    + "<label>PINCODE</label>"
      //                    + "</div>"
      //                    + "</div>");
    } else {
      rows.each(function (i) {
        $("#ckycSubmitDiv").append(
          "<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>" +
            "<div style='color:#2a5693;'  class='col-md-4'>" +
            "<label>ENTER CUST " +
            (i + 1) +
            " CKYC NUMBER</label>" +
            "<input type='text' id='ckycId_" +
            (i + 1) +
            "' value='" +
            dckycNumberArray[i] +
            "'/></div>" +
            "<div style='color:#2a5693;'  class='col-md-4'>" +
            "<label>CUST " +
            (i + 1) +
            " DOB</label>" +
            "<input type='text' id='dob_" +
            (i + 1) +
            "' value='" +
            dateOfBirthArray[i] +
            "'></div>" +
            "<div style='color:#2a5693;'  class='col-md-4'>" +
            "<label>CUST " +
            (i + 1) +
            " MOBILE NUMBER</label>" +
            "<input type='text' id='mobileNumber_" +
            (i + 1) +
            "' value='" +
            mobileArray[i] +
            "'></div>" +
            "<div  style='color:#2a5693;'  class='col-md-4'>" +
            "<label>ENTER CUST " +
            (i + 1) +
            " PINCODE</label>" +
            "<input type='text' id='pincode_" +
            (i + 1) +
            "'/></div>" +
            "<div class='col-md-3'>" +
            "<button style='height:auto;' class='btn btn-primary' id='btn_" +
            (i + 1) +
            "' onclick='fetchCKYCDocuments(\"ckycId_" +
            (i + 1) +
            '","dob_' +
            (i + 1) +
            '","mobileNumber_' +
            (i + 1) +
            '","pincode_' +
            (i + 1) +
            '","CUST_' +
            (i + 1) +
            '","btn_' +
            (i + 1) +
            "\")'>UPLOAD DOCUMENTS</button>" +
            "</div>" +
            //                    "</div>" +
            "</div>"
        );
      });
    }
  }
}

function fetchCKYCDocuments(ckycId, dobId, mobileId, pincodeId, custId, btnId) {
  debugger;
  console.log(ckycId);
  console.log(dobId);
  console.log(mobileId);
  console.log(pincodeId);
  console.log(custId);
  if (
    $("#" + ckycId).val() === "" ||
    $("#" + dobId).val() === "" ||
    $("#" + mobileId).val() === "" ||
    $("#" + pincodeId).val() === "" ||
    custId === ""
  ) {
    alert("You have to filled all the details");
    $("#" + btnId).attr("disabled", false);
    return;
  }

  $body.addClass("loading");
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&ckycNumber=" +
        $("#" + ckycId).val() +
        "&pincode=" +
        $("#" + pincodeId).val() +
        "&mobileNumber=" +
        $("#" + mobileId).val() +
        "&dob=" +
        $("#" + dobId).val() +
        "&folderId=" +
        $.getProcessInstanceFolderId() +
        "&sessionId=" +
        $.getSession() +
        "&customerType=" +
        custId,
      url: "../ACO/GenericService",
      success: function (data) {
        //                console.log(data);
        if (data.startsWith("Error")) {
          alert(data);
        } else {
          var response = data.split(/,(.+)/);
          alert(response[0]);
          var responseObj = JSON.parse(response[1]);
          var count = custId.split("_")[1];
          var docObj = new Object();
          var dataTobeAppend = "";
          docObj["A"] = "PASSPORT";
          docObj["B"] = "VOTERID";
          docObj["C"] = "PAN";
          docObj["D"] = "DRIVING_LICENSE";
          docObj["E"] = "AADHAR";
          docObj["F"] = "NREGA";
          docObj["G"] = "NPR_LETTER";
          $("#ckycSubmitDivAfter").html("");
          $("#ckycSubmitDivAfter").append(
            "<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>" +
              "<div style='color:#2a5693;'  class='col-md-4'>" +
              "<label>CUST " +
              count +
              " FULL NAME</label>" +
              "<input disabled type='text' value='" +
              responseObj.PERSONAL_DETAILS.FULLNAME +
              "'/></div>" +
              "<div style='color:#2a5693;'  class='col-md-4'>" +
              "<label>CUST " +
              count +
              " DOB</label>" +
              "<input disabled type='text' value='" +
              responseObj.PERSONAL_DETAILS.DOB +
              "'/></div>" +
              "<div style='color:#2a5693;'  class='col-md-4'>" +
              "<label>CUST " +
              count +
              " GENDER</label>" +
              "<input disabled type='text' value='" +
              responseObj.PERSONAL_DETAILS.GENDER +
              "'/></div></div>"
          );
          for (
            var i = 0;
            i < responseObj.IDENTITY_DETAILS.IDENTITY.length;
            i++
          ) {
            dataTobeAppend +=
              "<div  style='color:#2a5693;'  class='col-md-4'>" +
              "<label>CUST " +
              count +
              " " +
              docObj[responseObj.IDENTITY_DETAILS.IDENTITY[i].IDENT_TYPE] +
              " DETAILS</label>" +
              "<input type='text' disabled value='" +
              responseObj.IDENTITY_DETAILS.IDENTITY[i].IDENT_NUM +
              "'/></div>";
          }

          var permanentAddress =
            responseObj.PERSONAL_DETAILS.PERM_LINE1 +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_LINE2 +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_LINE3 +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_CITY +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_DIST +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_STATE +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_COUNTRY +
            " " +
            responseObj.PERSONAL_DETAILS.PERM_PIN;
          var residenceAddress =
            responseObj.PERSONAL_DETAILS.CORRES_LINE1 +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_LINE2 +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_LINE3 +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_CITY +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_DIST +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_STATE +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_COUNTRY +
            " " +
            responseObj.PERSONAL_DETAILS.CORRES_PIN;
          var dataTobeAppendForPermanentAddress =
            "<div  style='color:#2a5693;'  class='col-md-12'>" +
            "<label>CUST " +
            count +
            " PERMANENT ADDRESS DETAILS</label>" +
            "<textarea disabled>" +
            permanentAddress +
            "</textarea></div>";
          var dataTobeAppendForResidenceAddress =
            "<div  style='color:#2a5693;'  class='col-md-12'>" +
            "<label>CUST " +
            count +
            " CORRESPONDENCE ADDRESS DETAILS</label>" +
            "<textarea disabled>" +
            residenceAddress +
            "</textarea></div>";
          $("#ckycSubmitDivAfter").append(
            "<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>" +
              dataTobeAppend +
              "</div>"
          );
          $("#ckycSubmitDivAfter").append(
            "<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>" +
              dataTobeAppendForPermanentAddress +
              "</div>"
          );
          $("#ckycSubmitDivAfter").append(
            "<div class='row' style='border-bottom: 1px solid rgba(158, 158, 158, 0.17)!important; margin-top: 10px;'>" +
              dataTobeAppendForResidenceAddress +
              "</div>"
          );
        }
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("fetchCKYCDocuments::" + e);
    $body.removeClass("loading");
  }
}
function changeDivForDeferral(id) {
  debugger;
  if ($("#" + id).val() === "Yes") {
    $("#hideShowDeferralTab").attr("hidden", false);
    $("#hideShowDeferralTab1").attr("hidden", false);
    $("#TYPE_OF_DEFERRAL_DOCUMENT").addClass("requiredIndi");
    $("#NUMBER_OF_DAYS_REQUIRED").addClass("requiredIndi");
    $("#DEFERRAL_EXPIRY_DATE").addClass("requiredIndi");
    $("#DEFERRAL_TAKEN_BY_NAME").addClass("requiredIndi");
    $("#DEFERRAL_DESIGNATION").addClass("requiredIndi");
    $("#DEFERRAL_EMPLOYEE_ID").addClass("requiredIndi");
    $("#DEFERRAL_BRANCH_CODE").addClass("requiredIndi");
    $("#DEFERRAL_REMARKS").addClass("requiredIndi");
  } else {
    $("#hideShowDeferralTab").attr("hidden", true);
    $("#hideShowDeferralTab1").attr("hidden", true);
    $("#TYPE_OF_DEFERRAL_DOCUMENT").removeClass("requiredIndi");
    $("#NUMBER_OF_DAYS_REQUIRED").removeClass("requiredIndi");
    $("#DEFERRAL_EXPIRY_DATE").removeClass("requiredIndi");
    $("#DEFERRAL_TAKEN_BY_NAME").removeClass("requiredIndi");
    $("#DEFERRAL_DESIGNATION").removeClass("requiredIndi");
    $("#DEFERRAL_EMPLOYEE_ID").removeClass("requiredIndi");
    $("#DEFERRAL_BRANCH_CODE").removeClass("requiredIndi");
    $("#DEFERRAL_REMARKS").removeClass("requiredIndi");
  }
}

function calculateExpiryDate(daysRequiredId, expiryDateId) {
  debugger;
  var currentDate = new Date();
  currentDate.setDate(
    currentDate.getDate() + parseInt($("#" + daysRequiredId).val())
  );
  console.log(currentDate);
  var day = String(currentDate.getDate()).padStart(2, "0");
  var month = String(currentDate.getMonth() + 1).padStart(2, "0");
  var year = currentDate.getFullYear();
  const formattedDate = `${year}-${month}-${day}`;
  console.log(formattedDate);
  $("#" + expiryDateId)
    .val(formattedDate)
    .addClass("changed");
}

function validateSegmentForDigital(
  channelId,
  formTypeId,
  segmentId,
  subSegmentId
) {
  debugger;
  if (
    $("#" + channelId).val() === "Digital" &&
    $("#" + formTypeId).val() === "Non Individual"
  ) {
    $("#" + segmentId)
      .val("5")
      .addClass("changed");
    getSubSegment();
    $("#" + subSegmentId)
      .val("DGL")
      .addClass("changed");
  }
  if (
    $("#" + channelId).val() === "Branch_FIG" &&
    $("#" + formTypeId).val() === "Non Individual"
  ) {
    $("#ACTIVATION_PRIORITY")
      .val("High")
      .attr("disabled", true)
      .addClass("changed");
    $("#" + segmentId)
      .val("4")
      .addClass("changed");
    getSubSegment();
    $("#" + subSegmentId)
      .val("36")
      .addClass("changed");
  } else {
    $("#" + segmentId).val("");
    $("#" + subSegmentId).val("");
  }
}

function validateCINNumber(cinId) {
  debugger;
  var referenceNo = $.getProcessInstanceId().replace(/-/g, "") + "APP01";
  var cinNumber = $("#" + cinId).val();
  $body.addClass("loading");
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&cinNumber=" +
        cinNumber +
        "&referenceNo=" +
        referenceNo,
      url: "../ACO/GenericService",
      success: function (data) {
        console.log(data);
        $body.removeClass("loading");
        openWindow_CIN("../../ACO/ACO_CINResponse.jsp", referenceNo, data);
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("validateCINNumber::" + e);
    $body.removeClass("loading");
  }
}

function openWindow_CIN(url, referenceNo, dataObj) {
  debugger;
  var sOptions;
  sOptions = "status=no,menubar=no,scrollbars=no,resizable=no,toolbar=no";
  sOptions = sOptions + ",width=" + screen.availWidth.toString();
  sOptions = sOptions + ",height=" + (screen.availHeight - 50).toString();
  sOptions =
    sOptions +
    ",screenX=0,screenY=0,left=0,top=0,menubar=no,resizable=no,directories=no,location=no";
  var child = window.open(url, "ACO_CINResponse", sOptions);
  child.dataObj = dataObj;
  child.referenceNo = referenceNo;
}

function getLEICode(addnlFormTypeId, formType) {
  debugger;
  if ($("#" + formType).val() === "Non Individual") {
    if (
      $("#" + addnlFormTypeId).val() === "FD" ||
      $("#" + addnlFormTypeId).val() === "RD"
    ) {
      $(".FDRDTAbCI").removeClass("hide");
      $(".fieldTobeHide").removeClass("hide");
      $("#FD_AMOUNT").addClass("requiredIndi");
      $("#FD_AMOUNT").addClass("requiredIndiDiscp");
      $("#FD_TENURE_YEARS").addClass("requiredIndi");
      $("#FD_TENURE_YEARS").addClass("requiredIndiDiscp");
      $("#FD_TENURE_MONTHS").addClass("requiredIndi");
      $("#FD_TENURE_MONTHS").addClass("requiredIndiDiscp");
      $("#FD_TENURE_DAYS").addClass("requiredIndi");
      $("#FD_TENURE_DAYS").addClass("requiredIndiDiscp");
    } else {
      $("#FD_AMOUNT").removeClass("requiredIndi");
      $("#FD_AMOUNT").removeClass("requiredIndiDiscp");
      $("#FD_TENURE_YEARS").removeClass("requiredIndi");
      $("#FD_TENURE_YEARS").removeClass("requiredIndiDiscp");
      $("#FD_TENURE_MONTHS").removeClass("requiredIndi");
      $("#FD_TENURE_MONTHS").removeClass("requiredIndiDiscp");
      $("#FD_TENURE_DAYS").removeClass("requiredIndi");
      $("#FD_TENURE_DAYS").removeClass("requiredIndiDiscp");
      $(".FDRDTAbCI").addClass("hide");
    }
  } else {
    if (
      $("#" + addnlFormTypeId).val() === "FD" ||
      $("#" + addnlFormTypeId).val() === "RD"
    ) {
      $(".FDRDTAbCI").removeClass("hide");
      $(".fieldTobeHide").addClass("hide");
      $("#FD_AMOUNT").addClass("requiredIndi");
      $("#FD_AMOUNT").addClass("requiredIndiDiscp");
    } else {
      $("#FD_AMOUNT").removeClass("requiredIndi");
      $("#FD_AMOUNT").removeClass("requiredIndiDiscp");
      $(".FDRDTAbCI").addClass("hide");
    }
  }
}

function checkFDRDRemainingAmount(cifId) {
  debugger;
  $body.addClass("loading");
  var isExist = "";
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&cifNumber=" +
        cifId,
      url: "../ACO/GenericService",
      success: function (data) {
        console.log(data);
        isExist = data;
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("checkFDRDRemainingAmount::" + e);
    $body.removeClass("loading");
  }
  return isExist;
}

function checkTotalRDAccount(cifId) {
  debugger;
  $body.addClass("loading");
  var isExist = "";
  try {
    $.ajax({
      type: "POST",
      async: false,
      data:
        "PINSTID=" +
        ($.isNew() ? "NEW" : $.getProcessInstanceId()) +
        "&OPERATION=" +
        arguments.callee.name +
        "&cifNumber=" +
        cifId,
      url: "../ACO/GenericService",
      success: function (data) {
        console.log(data);
        isExist = data;
      },
      error: function (jqXHR, error, errorThrown) {
        errorHandler(jqXHR, error, errorThrown);
        alert("Something went wrong");
      },
    });
  } catch (e) {
    alert("checkFDRDRemainingAmount::" + e);
    $body.removeClass("loading");
  }
  return isExist;
}
